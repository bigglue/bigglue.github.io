Index.PACKAGES = {"bigglue" : [], "bigglue.data" : [{"name" : "bigglue.data.BasicIdentity", "shortDescription" : "This is an Identity that does not have a version.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/BasicIdentity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/BasicIdentity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BasicIdentity[A]) ⇒ Boolean, msg: ⇒ Any): BasicIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/BasicIdentity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BasicIdentity[A]) ⇒ Boolean): BasicIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/BasicIdentity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BasicIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/BasicIdentity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BasicIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/BasicIdentity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BasicIdentity[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/BasicIdentity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BasicIdentity[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/BasicIdentity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.toString", "link" : "bigglue\/data\/BasicIdentity.html#toString():String", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.serialize", "link" : "bigglue\/data\/BasicIdentity.html#serialize():String", "kind" : "def"}, {"label" : "toJsonFormat", "tail" : "(): JsValue", "member" : "bigglue.data.BasicIdentity.toJsonFormat", "link" : "bigglue\/data\/BasicIdentity.html#toJsonFormat():spray.json.JsValue", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.getId", "link" : "bigglue\/data\/BasicIdentity.html#getId():String", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.BasicIdentity.getVersion", "link" : "bigglue\/data\/BasicIdentity.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "withVersion", "tail" : "(v: String): VersionedIdentity[A]", "member" : "bigglue.data.BasicIdentity.withVersion", "link" : "bigglue\/data\/BasicIdentity.html#withVersion(v:String):bigglue.data.VersionedIdentity[A]", "kind" : "def"}, {"label" : "dropVersion", "tail" : "(): BasicIdentity[A]", "member" : "bigglue.data.BasicIdentity.dropVersion", "link" : "bigglue\/data\/BasicIdentity.html#dropVersion():bigglue.data.BasicIdentity[A]", "kind" : "def"}, {"member" : "bigglue.data.BasicIdentity#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": String", "member" : "bigglue.data.BasicIdentity.id", "link" : "bigglue\/data\/BasicIdentity.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/BasicIdentity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/BasicIdentity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/BasicIdentity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/BasicIdentity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/BasicIdentity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/BasicIdentity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/BasicIdentity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/BasicIdentity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/BasicIdentity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/BasicIdentity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/BasicIdentity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/BasicIdentity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/BasicIdentity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/BasicIdentity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/BasicIdentity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/BasicIdentity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/BasicIdentity.html", "kind" : "case class"}, {"name" : "bigglue.data.Dummy", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Dummy.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Dummy.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Dummy) ⇒ Boolean, msg: ⇒ Any): Dummy", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Dummy.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Dummy) ⇒ Boolean): Dummy", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Dummy.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Dummy", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Dummy.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Dummy", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Dummy.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Dummy, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Dummy.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Dummy, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Dummy.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.data.Dummy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Dummy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Dummy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Dummy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Dummy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Dummy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Dummy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Dummy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Dummy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Dummy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Dummy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Dummy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Dummy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Dummy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Dummy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Dummy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Dummy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Dummy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Dummy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Dummy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/data\/Dummy.html", "kind" : "class"}, {"name" : "bigglue.data.Either", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Either.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Either.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Either[L, R]) ⇒ Boolean, msg: ⇒ Any): Either[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Either.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Either[L, R]) ⇒ Boolean): Either[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Either.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Either[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Either.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Either[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Either.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Either[L, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Either.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Either[L, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Either.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.data.Either#<init>", "error" : "unsupported entity"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/Either.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/Either.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/Either.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/Either.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/Either.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[Either[L, R]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/Either.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/Either.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[Either[L, R]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/Either.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Either.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Either.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Either.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Either.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Either.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Either.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Either.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Either.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Either.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Either.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Either.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Either.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Either.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Either.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Either.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Either.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Either.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Either.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Either.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mkIdentity", "tail" : "(): Identity[Either[L, R]]", "member" : "bigglue.data.Identifiable.mkIdentity", "link" : "bigglue\/data\/Either.html#mkIdentity():bigglue.data.Identity[A]", "kind" : "abstract def"}], "class" : "bigglue\/data\/Either.html", "kind" : "class"}, {"name" : "bigglue.data.I", "shortDescription" : "A wrapper class for types that are not Identifiable.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/I.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/I.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (I[A]) ⇒ Boolean, msg: ⇒ Any): I[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/I.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (I[A]) ⇒ Boolean): I[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/I.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): I[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/I.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): I[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/I.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (I[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/I.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (I[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/I.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.data.I.toString", "link" : "bigglue\/data\/I.html#toString():String", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[I[A]]", "member" : "bigglue.data.I.mkIdentity", "link" : "bigglue\/data\/I.html#mkIdentity():bigglue.data.Identity[bigglue.data.I[A]]", "kind" : "def"}, {"label" : "i", "tail" : "(): A", "member" : "bigglue.data.I.i", "link" : "bigglue\/data\/I.html#i():A", "kind" : "def"}, {"member" : "bigglue.data.I#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "bigglue.data.I.a", "link" : "bigglue\/data\/I.html#a:A", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/I.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/I.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/I.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/I.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/I.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[I[A]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/I.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/I.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[I[A]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/I.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/I.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/I.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/I.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/I.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/I.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/I.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/I.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/I.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/I.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/I.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/I.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/I.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/I.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/I.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/I.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/I.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/I.html", "kind" : "case class"}, {"name" : "bigglue.data.Identifiable", "shortDescription" : "An Identifiable is a simple data type in BigGlue.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Identifiable.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Identifiable.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identifiable[A]) ⇒ Boolean, msg: ⇒ Any): Identifiable[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identifiable.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identifiable[A]) ⇒ Boolean): Identifiable[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identifiable.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Identifiable[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identifiable.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Identifiable[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identifiable.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Identifiable[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Identifiable.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Identifiable[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Identifiable.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/Identifiable.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/Identifiable.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/Identifiable.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/Identifiable.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/Identifiable.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[A]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/Identifiable.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/Identifiable.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[A]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/Identifiable.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"member" : "bigglue.data.Identifiable#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Identifiable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Identifiable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Identifiable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Identifiable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Identifiable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Identifiable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Identifiable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identifiable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identifiable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identifiable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Identifiable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Identifiable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Identifiable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Identifiable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Identifiable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Identifiable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Identifiable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Identifiable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Identifiable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mkIdentity", "tail" : "(): Identity[A]", "member" : "bigglue.data.Identifiable.mkIdentity", "link" : "bigglue\/data\/Identifiable.html#mkIdentity():bigglue.data.Identity[A]", "kind" : "abstract def"}], "class" : "bigglue\/data\/Identifiable.html", "kind" : "class"}, {"name" : "bigglue.data.IdentifiableToJson", "shortDescription" : "", "object" : "bigglue\/data\/IdentifiableToJson$.html", "members_object" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#OptionFormat[T<:<?>]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "IToJson", "tail" : "", "member" : "bigglue.data.IdentifiableToJson.IToJson", "link" : "bigglue\/data\/IdentifiableToJson$.html#IToJson", "kind" : "implicit object"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[scala.Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "bigglue\/data\/IdentifiableToJson$.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: ⇒ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentifiableToJson$.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentifiableToJson$.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentifiableToJson$.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentifiableToJson$.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "bigglue\/data\/IdentifiableToJson$.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "bigglue\/data\/IdentifiableToJson$.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "bigglue\/data\/IdentifiableToJson$.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () ⇒ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) ⇒ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) ⇒ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) ⇒ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "bigglue\/data\/IdentifiableToJson$.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) ⇒ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "bigglue\/data\/IdentifiableToJson$.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "bigglue\/data\/IdentifiableToJson$.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[scala.Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "bigglue\/data\/IdentifiableToJson$.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/IdentifiableToJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/IdentifiableToJson$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/IdentifiableToJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/IdentifiableToJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/IdentifiableToJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/IdentifiableToJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/IdentifiableToJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentifiableToJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentifiableToJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentifiableToJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/IdentifiableToJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/IdentifiableToJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/IdentifiableToJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/IdentifiableToJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/IdentifiableToJson$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/IdentifiableToJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/IdentifiableToJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/IdentifiableToJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/IdentifiableToJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.Identity", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/data\/Identity$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Identity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Identity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identity[A]) ⇒ Boolean, msg: ⇒ Any): Identity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identity[A]) ⇒ Boolean): Identity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Identity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Identity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Identity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Identity[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Identity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Identity[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Identity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.data.Identity#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Identity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Identity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Identity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Identity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Identity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Identity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Identity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Identity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Identity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Identity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Identity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Identity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Identity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Identity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Identity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Identity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "serialize", "tail" : "(): String", "member" : "bigglue.data.Identity.serialize", "link" : "bigglue\/data\/Identity.html#serialize():String", "kind" : "abstract def"}, {"label" : "toJsonFormat", "tail" : "(): JsValue", "member" : "bigglue.data.Identity.toJsonFormat", "link" : "bigglue\/data\/Identity.html#toJsonFormat():spray.json.JsValue", "kind" : "abstract def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identity.getId", "link" : "bigglue\/data\/Identity.html#getId():String", "kind" : "abstract def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identity.getVersion", "link" : "bigglue\/data\/Identity.html#getVersion():Option[String]", "kind" : "abstract def"}, {"label" : "withVersion", "tail" : "(v: String): VersionedIdentity[A]", "member" : "bigglue.data.Identity.withVersion", "link" : "bigglue\/data\/Identity.html#withVersion(v:String):bigglue.data.VersionedIdentity[A]", "kind" : "abstract def"}, {"label" : "dropVersion", "tail" : "(): BasicIdentity[A]", "member" : "bigglue.data.Identity.dropVersion", "link" : "bigglue\/data\/Identity.html#dropVersion():bigglue.data.BasicIdentity[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "deserialize", "tail" : "(str: String): Identity[A]", "member" : "bigglue.data.Identity.deserialize", "link" : "bigglue\/data\/Identity$.html#deserialize[A](str:String):bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "toAny", "tail" : "(identity: Identity[Src]): Identity[Any]", "member" : "bigglue.data.Identity.toAny", "link" : "bigglue\/data\/Identity$.html#toAny[Src](identity:bigglue.data.Identity[Src]):bigglue.data.Identity[Any]", "kind" : "def"}, {"label" : "lift", "tail" : "(identity: Identity[Src]): Identity[Dest]", "member" : "bigglue.data.Identity.lift", "link" : "bigglue\/data\/Identity$.html#lift[Src,Dest](identity:bigglue.data.Identity[Src]):bigglue.data.Identity[Dest]", "kind" : "def"}, {"label" : "VERSION_DELIMITER", "tail" : ": String(\"-#-\")", "member" : "bigglue.data.Identity.VERSION_DELIMITER", "link" : "bigglue\/data\/Identity$.html#VERSION_DELIMITER:String(\"-#-\")", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Identity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Identity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Identity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Identity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Identity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Identity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Identity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Identity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Identity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Identity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Identity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Identity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Identity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Identity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Identity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Identity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Identity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/data\/Identity.html", "kind" : "object"}, {"name" : "bigglue.data.IdentityToJson", "shortDescription" : "", "object" : "bigglue\/data\/IdentityToJson$.html", "members_object" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "bigglue\/data\/IdentityToJson$.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "bigglue\/data\/IdentityToJson$.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "bigglue\/data\/IdentityToJson$.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "bigglue\/data\/IdentityToJson$.html#OptionFormat[T]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "VersionedIdentityToJson", "tail" : "(): RootJsonFormat[VersionedIdentity[A]]", "member" : "bigglue.data.IdentityToJson.VersionedIdentityToJson", "link" : "bigglue\/data\/IdentityToJson$.html#VersionedIdentityToJson[A]:spray.json.RootJsonFormat[bigglue.data.VersionedIdentity[A]]", "kind" : "implicit def"}, {"label" : "basicIdentityToJson", "tail" : "(): RootJsonFormat[BasicIdentity[A]]", "member" : "bigglue.data.IdentityToJson.basicIdentityToJson", "link" : "bigglue\/data\/IdentityToJson$.html#basicIdentityToJson[A]:spray.json.RootJsonFormat[bigglue.data.BasicIdentity[A]]", "kind" : "implicit def"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[scala.Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "bigglue\/data\/IdentityToJson$.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: ⇒ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "bigglue\/data\/IdentityToJson$.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentityToJson$.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentityToJson$.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentityToJson$.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/data\/IdentityToJson$.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "bigglue\/data\/IdentityToJson$.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "bigglue\/data\/IdentityToJson$.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "bigglue\/data\/IdentityToJson$.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "bigglue\/data\/IdentityToJson$.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () ⇒ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) ⇒ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) ⇒ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) ⇒ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "bigglue\/data\/IdentityToJson$.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) ⇒ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "bigglue\/data\/IdentityToJson$.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "bigglue\/data\/IdentityToJson$.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "bigglue\/data\/IdentityToJson$.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "bigglue\/data\/IdentityToJson$.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "bigglue\/data\/IdentityToJson$.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "bigglue\/data\/IdentityToJson$.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "bigglue\/data\/IdentityToJson$.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "bigglue\/data\/IdentityToJson$.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "bigglue\/data\/IdentityToJson$.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "bigglue\/data\/IdentityToJson$.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "bigglue\/data\/IdentityToJson$.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[scala.Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "bigglue\/data\/IdentityToJson$.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "bigglue\/data\/IdentityToJson$.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/IdentityToJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/IdentityToJson$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/IdentityToJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/IdentityToJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/IdentityToJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/IdentityToJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/IdentityToJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentityToJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentityToJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/IdentityToJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/IdentityToJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/IdentityToJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/IdentityToJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/IdentityToJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/IdentityToJson$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/IdentityToJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/IdentityToJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/IdentityToJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/IdentityToJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.Implicits", "shortDescription" : "", "object" : "bigglue\/data\/Implicits$.html", "members_object" : [{"label" : "Is", "tail" : "", "member" : "bigglue.data.Implicits.Is", "link" : "bigglue\/data\/Implicits$.html#Is[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/Implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.Left", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Left.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Left.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Left[L, R]) ⇒ Boolean, msg: ⇒ Any): Left[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Left.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Left[L, R]) ⇒ Boolean): Left[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Left.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Left[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Left.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Left[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Left.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Left[L, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Left.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Left[L, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Left.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): BasicIdentity[Either[L, R]]", "member" : "bigglue.data.Left.mkIdentity", "link" : "bigglue\/data\/Left.html#mkIdentity():bigglue.data.BasicIdentity[bigglue.data.Either[L,R]]", "kind" : "def"}, {"member" : "bigglue.data.Left#<init>", "error" : "unsupported entity"}, {"label" : "left", "tail" : ": L", "member" : "bigglue.data.Left.left", "link" : "bigglue\/data\/Left.html#left:L", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/Left.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/Left.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/Left.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/Left.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/Left.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[Either[L, R]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/Left.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/Left.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[Either[L, R]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/Left.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Left.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Left.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Left.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Left.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Left.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Left.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Left.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Left.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Left.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Left.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Left.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Left.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Left.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Left.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Left.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Left.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/Left.html", "kind" : "case class"}, {"name" : "bigglue.data.Pair", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Pair.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Pair.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pair[L, R]) ⇒ Boolean, msg: ⇒ Any): Pair[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Pair.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pair[L, R]) ⇒ Boolean): Pair[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Pair.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Pair[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Pair.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Pair[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Pair.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Pair[L, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Pair.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Pair[L, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Pair.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getIds", "tail" : "(): (Identity[L], Identity[R])", "member" : "bigglue.data.Pair.getIds", "link" : "bigglue\/data\/Pair.html#getIds():(bigglue.data.Identity[L],bigglue.data.Identity[R])", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[Pair[L, R]]", "member" : "bigglue.data.Pair.mkIdentity", "link" : "bigglue\/data\/Pair.html#mkIdentity():bigglue.data.Identity[bigglue.data.Pair[L,R]]", "kind" : "def"}, {"label" : "id", "tail" : ": PairIdentity[L, R]", "member" : "bigglue.data.Pair.id", "link" : "bigglue\/data\/Pair.html#id:bigglue.data.PairIdentity[L,R]", "kind" : "val"}, {"member" : "bigglue.data.Pair#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": R", "member" : "bigglue.data.Pair.right", "link" : "bigglue\/data\/Pair.html#right:R", "kind" : "val"}, {"label" : "left", "tail" : ": L", "member" : "bigglue.data.Pair.left", "link" : "bigglue\/data\/Pair.html#left:L", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/Pair.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/Pair.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/Pair.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/Pair.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/Pair.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[Pair[L, R]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/Pair.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/Pair.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[Pair[L, R]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/Pair.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Pair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Pair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Pair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Pair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Pair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Pair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Pair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Pair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Pair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Pair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Pair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Pair.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Pair.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Pair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Pair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Pair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/Pair.html", "kind" : "case class"}, {"name" : "bigglue.data.PairIdentity", "shortDescription" : "", "object" : "bigglue\/data\/PairIdentity$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/PairIdentity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/PairIdentity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairIdentity[L, R]) ⇒ Boolean, msg: ⇒ Any): PairIdentity[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/PairIdentity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairIdentity[L, R]) ⇒ Boolean): PairIdentity[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/PairIdentity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PairIdentity[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/PairIdentity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PairIdentity[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/PairIdentity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PairIdentity[L, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/PairIdentity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PairIdentity[L, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/PairIdentity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "rightId", "tail" : ": Identity[R]", "member" : "bigglue.data.PairIdentity.rightId", "link" : "bigglue\/data\/PairIdentity.html#rightId:bigglue.data.Identity[R]", "kind" : "val"}, {"label" : "leftId", "tail" : ": Identity[L]", "member" : "bigglue.data.PairIdentity.leftId", "link" : "bigglue\/data\/PairIdentity.html#leftId:bigglue.data.Identity[L]", "kind" : "val"}, {"member" : "bigglue.data.PairIdentity#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.toString", "link" : "bigglue\/data\/PairIdentity.html#toString():String", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.serialize", "link" : "bigglue\/data\/PairIdentity.html#serialize():String", "kind" : "def"}, {"label" : "toJsonFormat", "tail" : "(): JsValue", "member" : "bigglue.data.BasicIdentity.toJsonFormat", "link" : "bigglue\/data\/PairIdentity.html#toJsonFormat():spray.json.JsValue", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.BasicIdentity.getId", "link" : "bigglue\/data\/PairIdentity.html#getId():String", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.BasicIdentity.getVersion", "link" : "bigglue\/data\/PairIdentity.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "withVersion", "tail" : "(v: String): VersionedIdentity[Pair[L, R]]", "member" : "bigglue.data.BasicIdentity.withVersion", "link" : "bigglue\/data\/PairIdentity.html#withVersion(v:String):bigglue.data.VersionedIdentity[A]", "kind" : "def"}, {"label" : "dropVersion", "tail" : "(): BasicIdentity[Pair[L, R]]", "member" : "bigglue.data.BasicIdentity.dropVersion", "link" : "bigglue\/data\/PairIdentity.html#dropVersion():bigglue.data.BasicIdentity[A]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "bigglue.data.BasicIdentity.id", "link" : "bigglue\/data\/PairIdentity.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/PairIdentity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/PairIdentity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/PairIdentity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/PairIdentity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/PairIdentity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/PairIdentity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/PairIdentity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/PairIdentity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/PairIdentity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/PairIdentity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/PairIdentity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/PairIdentity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/PairIdentity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "mergeIds", "tail" : "(id1: Identity[A], id2: Identity[B]): String", "member" : "bigglue.data.PairIdentity.mergeIds", "link" : "bigglue\/data\/PairIdentity$.html#mergeIds[A,B](id1:bigglue.data.Identity[A],id2:bigglue.data.Identity[B]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/PairIdentity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/PairIdentity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/PairIdentity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/PairIdentity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/PairIdentity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/PairIdentity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/PairIdentity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/PairIdentity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/PairIdentity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/PairIdentity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/PairIdentity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/PairIdentity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/PairIdentity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/PairIdentity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/PairIdentity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/PairIdentity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/PairIdentity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/data\/PairIdentity.html", "kind" : "object"}, {"name" : "bigglue.data.Right", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/Right.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/Right.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Right[L, R]) ⇒ Boolean, msg: ⇒ Any): Right[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Right.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Right[L, R]) ⇒ Boolean): Right[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Right.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Right[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Right.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Right[L, R]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/Right.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Right[L, R], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/Right.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Right[L, R], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/Right.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): BasicIdentity[Either[L, R]]", "member" : "bigglue.data.Right.mkIdentity", "link" : "bigglue\/data\/Right.html#mkIdentity():bigglue.data.BasicIdentity[bigglue.data.Either[L,R]]", "kind" : "def"}, {"member" : "bigglue.data.Right#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": R", "member" : "bigglue.data.Right.right", "link" : "bigglue\/data\/Right.html#right:R", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/Right.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/Right.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/Right.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/Right.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/Right.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[Either[L, R]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/Right.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/Right.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[Either[L, R]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/Right.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/Right.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/Right.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/Right.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/Right.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/Right.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/Right.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/Right.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Right.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Right.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/Right.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/Right.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/Right.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/Right.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/Right.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/Right.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/Right.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/Right.html", "kind" : "case class"}, {"name" : "bigglue.data.tester", "shortDescription" : "", "object" : "bigglue\/data\/tester$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "bigglue.data.tester.main", "link" : "bigglue\/data\/tester$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/tester$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/tester$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/tester$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/tester$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/tester$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/tester$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/tester$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/tester$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/tester$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/tester$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/tester$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/tester$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/tester$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/tester$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/tester$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/tester$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/tester$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/tester$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/tester$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.U", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/U.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/U.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (U[A]) ⇒ Boolean, msg: ⇒ Any): U[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/U.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (U[A]) ⇒ Boolean): U[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/U.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): U[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/U.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): U[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/U.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (U[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/U.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (U[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/U.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.data.U.toString", "link" : "bigglue\/data\/U.html#toString():String", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[U[A]]", "member" : "bigglue.data.U.mkIdentity", "link" : "bigglue\/data\/U.html#mkIdentity():bigglue.data.Identity[bigglue.data.U[A]]", "kind" : "def"}, {"label" : "u", "tail" : "(): A", "member" : "bigglue.data.U.u", "link" : "bigglue\/data\/U.html#u():A", "kind" : "def"}, {"member" : "bigglue.data.U#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "bigglue.data.U.a", "link" : "bigglue\/data\/U.html#a:A", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/data\/U.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/data\/U.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/data\/U.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/data\/U.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/data\/U.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[U[A]]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/data\/U.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/data\/U.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[U[A]]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/data\/U.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/U.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/U.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/U.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/U.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/U.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/U.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/U.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/U.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/U.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/U.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/U.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/U.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/U.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/U.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/U.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/U.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/U.html", "kind" : "case class"}, {"name" : "bigglue.data.VersionedIdentity", "shortDescription" : "An Identity with a version.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/VersionedIdentity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/VersionedIdentity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VersionedIdentity[A]) ⇒ Boolean, msg: ⇒ Any): VersionedIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/VersionedIdentity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VersionedIdentity[A]) ⇒ Boolean): VersionedIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/VersionedIdentity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): VersionedIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/VersionedIdentity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VersionedIdentity[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/VersionedIdentity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VersionedIdentity[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/VersionedIdentity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VersionedIdentity[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/VersionedIdentity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.data.VersionedIdentity.toString", "link" : "bigglue\/data\/VersionedIdentity.html#toString():String", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "bigglue.data.VersionedIdentity.serialize", "link" : "bigglue\/data\/VersionedIdentity.html#serialize():String", "kind" : "def"}, {"label" : "toJsonFormat", "tail" : "(): JsValue", "member" : "bigglue.data.VersionedIdentity.toJsonFormat", "link" : "bigglue\/data\/VersionedIdentity.html#toJsonFormat():spray.json.JsValue", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.VersionedIdentity.getId", "link" : "bigglue\/data\/VersionedIdentity.html#getId():String", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.VersionedIdentity.getVersion", "link" : "bigglue\/data\/VersionedIdentity.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "withVersion", "tail" : "(v: String): VersionedIdentity[A]", "member" : "bigglue.data.VersionedIdentity.withVersion", "link" : "bigglue\/data\/VersionedIdentity.html#withVersion(v:String):bigglue.data.VersionedIdentity[A]", "kind" : "def"}, {"label" : "dropVersion", "tail" : "(): BasicIdentity[A]", "member" : "bigglue.data.VersionedIdentity.dropVersion", "link" : "bigglue\/data\/VersionedIdentity.html#dropVersion():bigglue.data.BasicIdentity[A]", "kind" : "def"}, {"member" : "bigglue.data.VersionedIdentity#<init>", "error" : "unsupported entity"}, {"label" : "version", "tail" : ": String", "member" : "bigglue.data.VersionedIdentity.version", "link" : "bigglue\/data\/VersionedIdentity.html#version:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "bigglue.data.VersionedIdentity.id", "link" : "bigglue\/data\/VersionedIdentity.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/VersionedIdentity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/VersionedIdentity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/VersionedIdentity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/VersionedIdentity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/VersionedIdentity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/VersionedIdentity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/VersionedIdentity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/VersionedIdentity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/VersionedIdentity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/VersionedIdentity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/VersionedIdentity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/VersionedIdentity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/VersionedIdentity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/VersionedIdentity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/VersionedIdentity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/VersionedIdentity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/data\/VersionedIdentity.html", "kind" : "case class"}], "bigglue.configurations.instances" : [{"name" : "bigglue.configurations.instances.ThinActorPlatformBuilder", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html", "members_object" : [{"label" : "reducerPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.reducerPlatform", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#reducerPlatform[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "pairwiseComposerPlatform", "tail" : "(): BinaryPlatform[InputL, InputR, Output]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.pairwiseComposerPlatform", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#pairwiseComposerPlatform[InputL<:bigglue.data.Identifiable[InputL],InputR<:bigglue.data.Identifiable[InputR],Output<:bigglue.data.Identifiable[Output]]:bigglue.platforms.BinaryPlatform[InputL,InputR,Output]", "kind" : "def"}, {"label" : "mapperPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.mapperPlatform", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#mapperPlatform[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "errorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.errorCurator", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#errorCurator[Input<:bigglue.data.Identifiable[Input]]:bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "provenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.provenanceCurator", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#provenanceCurator[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]:bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "connector", "tail" : "(name: String): Connector[Data]", "member" : "bigglue.configurations.instances.ThinActorPlatformBuilder.connector", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#connector[Data<:bigglue.data.Identifiable[Data]](name:String):bigglue.connectors.Connector[Data]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/instances\/ThinActorPlatformBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "bigglue.computations" : [{"name" : "bigglue.computations.BinaryComputation", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/BinaryComputation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/BinaryComputation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryComputation[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): BinaryComputation[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/BinaryComputation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryComputation[InputL, InputR, Output]) ⇒ Boolean): BinaryComputation[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/BinaryComputation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BinaryComputation[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/BinaryComputation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BinaryComputation[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/BinaryComputation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BinaryComputation[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/BinaryComputation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BinaryComputation[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/BinaryComputation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMapL: DataStore[InputL], inputMapR: DataStore[InputR], outputMap: DataStore[Output], platform: BinaryPlatform[InputL, InputR, Output]): Unit", "member" : "bigglue.computations.BinaryComputation.init", "link" : "bigglue\/computations\/BinaryComputation.html#init(conf:bigglue.configurations.PipeConfig,inputMapL:bigglue.store.DataStore[InputL],inputMapR:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.BinaryPlatform[InputL,InputR,Output]):Unit", "kind" : "def"}, {"label" : "getBinaryPlatform", "tail" : "(): BinaryPlatform[InputL, InputR, Output]", "member" : "bigglue.computations.BinaryComputation.getBinaryPlatform", "link" : "bigglue\/computations\/BinaryComputation.html#getBinaryPlatform():bigglue.platforms.BinaryPlatform[InputL,InputR,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): BinaryComputation[InputL, InputR, Output]", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/BinaryComputation.html#name(newName:String):bigglue.computations.BinaryComputation[InputL,InputR,Output]", "kind" : "def"}, {"label" : "binaryPlatformOpt", "tail" : ": Option[BinaryPlatform[InputL, InputR, Output]]", "member" : "bigglue.computations.BinaryComputation.binaryPlatformOpt", "link" : "bigglue\/computations\/BinaryComputation.html#binaryPlatformOpt:Option[bigglue.platforms.BinaryPlatform[InputL,InputR,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/BinaryComputation.html#name:String", "kind" : "var"}, {"member" : "bigglue.computations.BinaryComputation#<init>", "error" : "unsupported entity"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/computations\/BinaryComputation.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/computations\/BinaryComputation.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/computations\/BinaryComputation.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/computations\/BinaryComputation.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/BinaryComputation.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/BinaryComputation.html#terminate():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.run", "link" : "bigglue\/computations\/BinaryComputation.html#run():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/BinaryComputation.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/BinaryComputation.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/BinaryComputation.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/BinaryComputation.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/BinaryComputation.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/BinaryComputation.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/BinaryComputation.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/BinaryComputation.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/BinaryComputation.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/BinaryComputation.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/BinaryComputation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/BinaryComputation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/BinaryComputation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/BinaryComputation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/BinaryComputation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/BinaryComputation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/BinaryComputation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/BinaryComputation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/BinaryComputation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/BinaryComputation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/BinaryComputation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/BinaryComputation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/BinaryComputation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/BinaryComputation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/BinaryComputation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/BinaryComputation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/BinaryComputation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/BinaryComputation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/BinaryComputation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/BinaryComputation.html", "kind" : "class"}, {"name" : "bigglue.computations.CartesianProduct", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/CartesianProduct.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/CartesianProduct.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CartesianProduct[InputL, InputR]) ⇒ Boolean, msg: ⇒ Any): CartesianProduct[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/CartesianProduct.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CartesianProduct[InputL, InputR]) ⇒ Boolean): CartesianProduct[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/CartesianProduct.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CartesianProduct[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/CartesianProduct.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CartesianProduct[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/CartesianProduct.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CartesianProduct[InputL, InputR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/CartesianProduct.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CartesianProduct[InputL, InputR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/CartesianProduct.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.computations.CartesianProduct#<init>", "error" : "unsupported entity"}, {"label" : "*->", "tail" : "(output: Pipe[Pair[InputL, InputR], End]): PartialComposerPipe[InputL, InputR, Pair[InputL, InputR], End]", "member" : "bigglue.computations.PairwiseComposer.*->", "link" : "bigglue\/computations\/CartesianProduct.html#*->[End<:bigglue.data.Identifiable[End]](output:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialComposerPipe[InputL,InputR,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.PairwiseComposer.run", "link" : "bigglue\/computations\/CartesianProduct.html#run():Unit", "kind" : "def"}, {"label" : "tryFilterAndCompose", "tail" : "(pair: Pair[InputL, InputR]): Option[Pair[InputL, InputR]]", "member" : "bigglue.computations.PairwiseComposer.tryFilterAndCompose", "link" : "bigglue\/computations\/CartesianProduct.html#tryFilterAndCompose(pair:bigglue.data.Pair[InputL,InputR]):Option[Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Pair[InputL, InputR]]): Unit", "member" : "bigglue.computations.PairwiseComposer.init", "link" : "bigglue\/computations\/CartesianProduct.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): PairwiseComposer[InputL, InputR, Pair[InputL, InputR]]", "member" : "bigglue.computations.PairwiseComposer.withConfig", "link" : "bigglue\/computations\/CartesianProduct.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.PairwiseComposer[InputL,InputR,Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMapL: DataStore[InputL], inputMapR: DataStore[InputR], outputMap: DataStore[Pair[InputL, InputR]], platform: BinaryPlatform[InputL, InputR, Pair[InputL, InputR]]): Unit", "member" : "bigglue.computations.BinaryComputation.init", "link" : "bigglue\/computations\/CartesianProduct.html#init(conf:bigglue.configurations.PipeConfig,inputMapL:bigglue.store.DataStore[InputL],inputMapR:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.BinaryPlatform[InputL,InputR,Output]):Unit", "kind" : "def"}, {"label" : "getBinaryPlatform", "tail" : "(): BinaryPlatform[InputL, InputR, Pair[InputL, InputR]]", "member" : "bigglue.computations.BinaryComputation.getBinaryPlatform", "link" : "bigglue\/computations\/CartesianProduct.html#getBinaryPlatform():bigglue.platforms.BinaryPlatform[InputL,InputR,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): BinaryComputation[InputL, InputR, Pair[InputL, InputR]]", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/CartesianProduct.html#name(newName:String):bigglue.computations.BinaryComputation[InputL,InputR,Output]", "kind" : "def"}, {"label" : "binaryPlatformOpt", "tail" : ": Option[BinaryPlatform[InputL, InputR, Pair[InputL, InputR]]]", "member" : "bigglue.computations.BinaryComputation.binaryPlatformOpt", "link" : "bigglue\/computations\/CartesianProduct.html#binaryPlatformOpt:Option[bigglue.platforms.BinaryPlatform[InputL,InputR,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/CartesianProduct.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Pair[InputL, InputR]]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/computations\/CartesianProduct.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Pair[InputL, InputR]]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/computations\/CartesianProduct.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/computations\/CartesianProduct.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/computations\/CartesianProduct.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/CartesianProduct.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/CartesianProduct.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/CartesianProduct.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/CartesianProduct.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/CartesianProduct.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/CartesianProduct.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/CartesianProduct.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/CartesianProduct.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/CartesianProduct.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/CartesianProduct.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/CartesianProduct.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/CartesianProduct.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/CartesianProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/CartesianProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/CartesianProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/CartesianProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/CartesianProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/CartesianProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/CartesianProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/CartesianProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/CartesianProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/CartesianProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/CartesianProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/CartesianProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/CartesianProduct.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/CartesianProduct.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/CartesianProduct.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/CartesianProduct.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/CartesianProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/CartesianProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/CartesianProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/CartesianProduct.html", "kind" : "class"}, {"name" : "bigglue.computations.Computation", "shortDescription" : "This is the superclass for Mapper, Reducer, and PairwiseComposer.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/Computation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/Computation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Computation) ⇒ Boolean, msg: ⇒ Any): Computation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Computation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Computation) ⇒ Boolean): Computation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Computation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Computation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Computation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Computation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Computation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Computation, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/Computation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Computation, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/Computation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/Computation.html#terminate():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.run", "link" : "bigglue\/computations\/Computation.html#run():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/Computation.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/Computation.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/Computation.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/Computation.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/Computation.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/Computation.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"member" : "bigglue.computations.Computation#<init>", "error" : "unsupported entity"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/Computation.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/Computation.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/Computation.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/Computation.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/Computation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/Computation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/Computation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/Computation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/Computation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/Computation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/Computation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Computation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Computation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Computation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/Computation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/Computation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/Computation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/Computation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/Computation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/Computation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/Computation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/Computation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/Computation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/Computation.html", "kind" : "class"}, {"name" : "bigglue.computations.Mapper", "shortDescription" : "The Mapper Computation, which is a subclass of UnaryComputation.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/Mapper.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/Mapper.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mapper[Input, Output]) ⇒ Boolean, msg: ⇒ Any): Mapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Mapper.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Mapper[Input, Output]) ⇒ Boolean): Mapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Mapper.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Mapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Mapper.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Mapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Mapper.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Mapper[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/Mapper.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Mapper[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/Mapper.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "-->", "tail" : "(p: Pipe[Output, End]): PartialMapperPipe[Input, Output, End]", "member" : "bigglue.computations.Mapper.-->", "link" : "bigglue\/computations\/Mapper.html#-->[End<:bigglue.data.Identifiable[End]](p:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialMapperPipe[Input,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Mapper.run", "link" : "bigglue\/computations\/Mapper.html#run():Unit", "kind" : "def"}, {"label" : "tryCompute", "tail" : "(input: Input): Option[List[Output]]", "member" : "bigglue.computations.Mapper.tryCompute", "link" : "bigglue\/computations\/Mapper.html#tryCompute(input:Input):Option[List[Output]]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.computations.Mapper.init", "link" : "bigglue\/computations\/Mapper.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): Mapper[Input, Output]", "member" : "bigglue.computations.Mapper.withConfig", "link" : "bigglue\/computations\/Mapper.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.Mapper[Input,Output]", "kind" : "def"}, {"label" : "getOp", "tail" : "(): (Input) ⇒ List[Output]", "member" : "bigglue.computations.Mapper.getOp", "link" : "bigglue\/computations\/Mapper.html#getOp:Input=>List[Output]", "kind" : "def"}, {"member" : "bigglue.computations.Mapper#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], platform: UnaryPlatform[Input, Output]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/computations\/Mapper.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/computations\/Mapper.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[Input, Output]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/Mapper.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[Input, Output]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/computations\/Mapper.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/Mapper.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/computations\/Mapper.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/computations\/Mapper.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/computations\/Mapper.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/Mapper.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/Mapper.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/Mapper.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/Mapper.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/Mapper.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/Mapper.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/Mapper.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/Mapper.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/Mapper.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/Mapper.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/Mapper.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/Mapper.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/Mapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/Mapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/Mapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/Mapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/Mapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/Mapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/Mapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Mapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Mapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Mapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/Mapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/Mapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/Mapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/Mapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/Mapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/Mapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/Mapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/Mapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/Mapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/Mapper.html", "kind" : "class"}, {"name" : "bigglue.computations.PairwiseComposer", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/PairwiseComposer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/PairwiseComposer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairwiseComposer[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): PairwiseComposer[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/PairwiseComposer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairwiseComposer[InputL, InputR, Output]) ⇒ Boolean): PairwiseComposer[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/PairwiseComposer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PairwiseComposer[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/PairwiseComposer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PairwiseComposer[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/PairwiseComposer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PairwiseComposer[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/PairwiseComposer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PairwiseComposer[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/PairwiseComposer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*->", "tail" : "(output: Pipe[Output, End]): PartialComposerPipe[InputL, InputR, Output, End]", "member" : "bigglue.computations.PairwiseComposer.*->", "link" : "bigglue\/computations\/PairwiseComposer.html#*->[End<:bigglue.data.Identifiable[End]](output:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialComposerPipe[InputL,InputR,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.PairwiseComposer.run", "link" : "bigglue\/computations\/PairwiseComposer.html#run():Unit", "kind" : "def"}, {"label" : "tryFilterAndCompose", "tail" : "(pair: Pair[InputL, InputR]): Option[Output]", "member" : "bigglue.computations.PairwiseComposer.tryFilterAndCompose", "link" : "bigglue\/computations\/PairwiseComposer.html#tryFilterAndCompose(pair:bigglue.data.Pair[InputL,InputR]):Option[Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.computations.PairwiseComposer.init", "link" : "bigglue\/computations\/PairwiseComposer.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): PairwiseComposer[InputL, InputR, Output]", "member" : "bigglue.computations.PairwiseComposer.withConfig", "link" : "bigglue\/computations\/PairwiseComposer.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.PairwiseComposer[InputL,InputR,Output]", "kind" : "def"}, {"member" : "bigglue.computations.PairwiseComposer#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMapL: DataStore[InputL], inputMapR: DataStore[InputR], outputMap: DataStore[Output], platform: BinaryPlatform[InputL, InputR, Output]): Unit", "member" : "bigglue.computations.BinaryComputation.init", "link" : "bigglue\/computations\/PairwiseComposer.html#init(conf:bigglue.configurations.PipeConfig,inputMapL:bigglue.store.DataStore[InputL],inputMapR:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.BinaryPlatform[InputL,InputR,Output]):Unit", "kind" : "def"}, {"label" : "getBinaryPlatform", "tail" : "(): BinaryPlatform[InputL, InputR, Output]", "member" : "bigglue.computations.BinaryComputation.getBinaryPlatform", "link" : "bigglue\/computations\/PairwiseComposer.html#getBinaryPlatform():bigglue.platforms.BinaryPlatform[InputL,InputR,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): BinaryComputation[InputL, InputR, Output]", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/PairwiseComposer.html#name(newName:String):bigglue.computations.BinaryComputation[InputL,InputR,Output]", "kind" : "def"}, {"label" : "binaryPlatformOpt", "tail" : ": Option[BinaryPlatform[InputL, InputR, Output]]", "member" : "bigglue.computations.BinaryComputation.binaryPlatformOpt", "link" : "bigglue\/computations\/PairwiseComposer.html#binaryPlatformOpt:Option[bigglue.platforms.BinaryPlatform[InputL,InputR,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.BinaryComputation.name", "link" : "bigglue\/computations\/PairwiseComposer.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/computations\/PairwiseComposer.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/computations\/PairwiseComposer.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/computations\/PairwiseComposer.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/computations\/PairwiseComposer.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/PairwiseComposer.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/PairwiseComposer.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/PairwiseComposer.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/PairwiseComposer.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/PairwiseComposer.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/PairwiseComposer.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/PairwiseComposer.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/PairwiseComposer.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/PairwiseComposer.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/PairwiseComposer.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/PairwiseComposer.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/PairwiseComposer.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/PairwiseComposer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/PairwiseComposer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/PairwiseComposer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/PairwiseComposer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/PairwiseComposer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/PairwiseComposer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/PairwiseComposer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/PairwiseComposer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/PairwiseComposer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/PairwiseComposer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/PairwiseComposer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/PairwiseComposer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/PairwiseComposer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/PairwiseComposer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/PairwiseComposer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/PairwiseComposer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/PairwiseComposer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/PairwiseComposer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/PairwiseComposer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/PairwiseComposer.html", "kind" : "class"}, {"name" : "bigglue.computations.Reducer", "shortDescription" : "The Reducer Computation, which is a subclass of UnaryComputationIn short, this takes an input, groups it together with an output, and then updates the output with the input.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/Reducer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/Reducer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Reducer[Input, Output]) ⇒ Boolean, msg: ⇒ Any): Reducer[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Reducer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Reducer[Input, Output]) ⇒ Boolean): Reducer[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Reducer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Reducer[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Reducer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Reducer[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/Reducer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Reducer[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/Reducer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Reducer[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/Reducer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "+->", "tail" : "(p: Pipe[Output, End]): PartialReducerPipe[Input, Output, End]", "member" : "bigglue.computations.Reducer.+->", "link" : "bigglue\/computations\/Reducer.html#+->[End<:bigglue.data.Identifiable[End]](p:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialReducerPipe[Input,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Reducer.run", "link" : "bigglue\/computations\/Reducer.html#run():Unit", "kind" : "def"}, {"label" : "tryZero", "tail" : "(): Option[Output]", "member" : "bigglue.computations.Reducer.tryZero", "link" : "bigglue\/computations\/Reducer.html#tryZero():Option[Output]", "kind" : "def"}, {"label" : "tryFold", "tail" : "(input: Input, output: Output): Option[Output]", "member" : "bigglue.computations.Reducer.tryFold", "link" : "bigglue\/computations\/Reducer.html#tryFold(input:Input,output:Output):Option[Output]", "kind" : "def"}, {"label" : "tryGroupBy", "tail" : "(input: Input): Option[Identity[Output]]", "member" : "bigglue.computations.Reducer.tryGroupBy", "link" : "bigglue\/computations\/Reducer.html#tryGroupBy(input:Input):Option[bigglue.data.Identity[Output]]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.computations.Reducer.init", "link" : "bigglue\/computations\/Reducer.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.computations.Reducer.checkOutput", "link" : "bigglue\/computations\/Reducer.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): Reducer[Input, Output]", "member" : "bigglue.computations.Reducer.withConfig", "link" : "bigglue\/computations\/Reducer.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.Reducer[Input,Output]", "kind" : "def"}, {"member" : "bigglue.computations.Reducer#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], platform: UnaryPlatform[Input, Output]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/computations\/Reducer.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/computations\/Reducer.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[Input, Output]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/Reducer.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[Input, Output]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/computations\/Reducer.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/Reducer.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/computations\/Reducer.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/computations\/Reducer.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/Reducer.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/Reducer.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/Reducer.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/Reducer.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/Reducer.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/Reducer.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/Reducer.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/Reducer.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/Reducer.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/Reducer.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/Reducer.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/Reducer.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/Reducer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/Reducer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/Reducer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/Reducer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/Reducer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/Reducer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/Reducer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Reducer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Reducer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/Reducer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/Reducer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/Reducer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/Reducer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/Reducer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/Reducer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/Reducer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/Reducer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/Reducer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/Reducer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/Reducer.html", "kind" : "class"}, {"name" : "bigglue.computations.UnaryComputation", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/computations\/UnaryComputation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/computations\/UnaryComputation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryComputation[Input, Output]) ⇒ Boolean, msg: ⇒ Any): UnaryComputation[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/UnaryComputation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryComputation[Input, Output]) ⇒ Boolean): UnaryComputation[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/UnaryComputation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UnaryComputation[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/UnaryComputation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnaryComputation[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/computations\/UnaryComputation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnaryComputation[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/computations\/UnaryComputation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnaryComputation[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/computations\/UnaryComputation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], platform: UnaryPlatform[Input, Output]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/computations\/UnaryComputation.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/computations\/UnaryComputation.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[Input, Output]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/UnaryComputation.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[Input, Output]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/computations\/UnaryComputation.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/computations\/UnaryComputation.html#name:String", "kind" : "var"}, {"member" : "bigglue.computations.UnaryComputation#<init>", "error" : "unsupported entity"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/computations\/UnaryComputation.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/computations\/UnaryComputation.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/computations\/UnaryComputation.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/computations\/UnaryComputation.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/computations\/UnaryComputation.html#terminate():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.run", "link" : "bigglue\/computations\/UnaryComputation.html#run():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/computations\/UnaryComputation.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/computations\/UnaryComputation.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/computations\/UnaryComputation.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/computations\/UnaryComputation.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/computations\/UnaryComputation.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/computations\/UnaryComputation.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/computations\/UnaryComputation.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/computations\/UnaryComputation.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/computations\/UnaryComputation.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/computations\/UnaryComputation.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/computations\/UnaryComputation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/computations\/UnaryComputation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/computations\/UnaryComputation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/computations\/UnaryComputation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/computations\/UnaryComputation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/computations\/UnaryComputation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/computations\/UnaryComputation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/UnaryComputation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/UnaryComputation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/computations\/UnaryComputation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/computations\/UnaryComputation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/computations\/UnaryComputation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/computations\/UnaryComputation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/computations\/UnaryComputation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/computations\/UnaryComputation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/computations\/UnaryComputation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/computations\/UnaryComputation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/computations\/UnaryComputation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/computations\/UnaryComputation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/computations\/UnaryComputation.html", "kind" : "class"}], "bigglue.store.instances.file" : [{"name" : "bigglue.store.instances.file.FileSystemDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemDataMap[Input, Output]) ⇒ Boolean, msg: ⇒ Any): FileSystemDataMap[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemDataMap[Input, Output]) ⇒ Boolean): FileSystemDataMap[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FileSystemDataMap[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FileSystemDataMap[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FileSystemDataMap[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FileSystemDataMap[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.file.FileSystemDataMap.size", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Output]", "member" : "bigglue.store.instances.file.FileSystemDataMap.extract", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#extract():Seq[Output]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Input): Boolean", "member" : "bigglue.store.instances.file.FileSystemDataMap.contains", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#contains(key:Input):Boolean", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Output]", "member" : "bigglue.store.instances.file.FileSystemDataMap.all", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#all():Seq[Output]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Input): Option[Output]", "member" : "bigglue.store.instances.file.FileSystemDataMap.get", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#get(key:Input):Option[Output]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Output]", "member" : "bigglue.store.instances.file.FileSystemDataMap.iterator", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#iterator():Iterator[Output]", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Input]): Unit", "member" : "bigglue.store.instances.file.FileSystemDataMap.remove", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#remove(keys:Seq[Input]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Input): Unit", "member" : "bigglue.store.instances.file.FileSystemDataMap.remove", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#remove(key:Input):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Input, data: Output): Unit", "member" : "bigglue.store.instances.file.FileSystemDataMap.put_", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#put_(key:Input,data:Output):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Output]): Unit", "member" : "bigglue.store.instances.file.FileSystemDataMap.put_", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#put_(data:Seq[Output]):Unit", "kind" : "def"}, {"member" : "bigglue.store.instances.file.FileSystemDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Input, default: Output): Output", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Input, data: Output): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Output): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Output): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Output]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Output): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Output]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Output): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Output]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Output]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Output]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/file\/FileSystemDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.file.FileSystemIdDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemIdDataMap) ⇒ Boolean, msg: ⇒ Any): FileSystemIdDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemIdDataMap) ⇒ Boolean): FileSystemIdDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FileSystemIdDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FileSystemIdDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FileSystemIdDataMap, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FileSystemIdDataMap, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.size", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[I[String]]", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.extract", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#extract():Seq[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Identity[I[String]]): Boolean", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.contains", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#contains(key:bigglue.data.Identity[bigglue.data.I[String]]):Boolean", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[I[String]]", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.all", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#all():Seq[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Identity[I[String]]): Option[I[String]]", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.get", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#get(key:bigglue.data.Identity[bigglue.data.I[String]]):Option[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[I[String]]", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.iterator", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#iterator():Iterator[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Identity[I[String]]]): Unit", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.remove", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#remove(keys:Seq[bigglue.data.Identity[bigglue.data.I[String]]]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Identity[I[String]]): Unit", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.remove", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#remove(key:bigglue.data.Identity[bigglue.data.I[String]]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Identity[I[String]], data: I[String]): Unit", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.put_", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#put_(key:bigglue.data.Identity[bigglue.data.I[String]],data:bigglue.data.I[String]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.put_", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#put_(data:Seq[bigglue.data.I[String]]):Unit", "kind" : "def"}, {"label" : "fileMap", "tail" : ": FileSystemDataMap[I[String], I[String]]", "member" : "bigglue.store.instances.file.FileSystemIdDataMap.fileMap", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#fileMap:bigglue.store.instances.file.FileSystemDataMap[bigglue.data.I[String],bigglue.data.I[String]]", "kind" : "val"}, {"member" : "bigglue.store.instances.file.FileSystemIdDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Identity[I[String]], default: I[String]): I[String]", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Identity[I[String]], data: I[String]): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: I[String]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: I[String]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: I[String]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: I[String]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[I[String]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/file\/FileSystemIdDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.file.FileSystemInstances", "shortDescription" : "Created by chanceroberts on 8\/29\/17.", "object" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemInstances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.store.instances.file.FileSystemIterator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemIterator[Output]) ⇒ Boolean, msg: ⇒ Any): FileSystemIterator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileSystemIterator[Output]) ⇒ Boolean): FileSystemIterator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FileSystemIterator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FileSystemIterator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FileSystemIterator[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FileSystemIterator[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.instances.file.FileSystemIterator.hasNext", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Output", "member" : "bigglue.store.instances.file.FileSystemIterator.next", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#next():Output", "kind" : "def"}, {"label" : "files", "tail" : ": List[String]", "member" : "bigglue.store.instances.file.FileSystemIterator.files", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#files:List[String]", "kind" : "var"}, {"member" : "bigglue.store.instances.file.FileSystemIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Output]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Output]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Output]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Output) ⇒ Boolean): Option[Output]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Output) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Output, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Output, B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Output, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Output, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Output) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Output, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Output, Col[Output]]): Col[Output]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Output]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Output]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Output]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Output]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Output) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Output, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Output) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Output, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/FileSystemIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/file\/FileSystemIterator.html", "kind" : "class"}, {"name" : "bigglue.store.instances.file.TextFileDataMap", "shortDescription" : "A Simple Data Map that takes the form of a Text FileIt's Line Number to String, so it the key is I[Int], and the value is I[String]", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TextFileDataMap) ⇒ Boolean, msg: ⇒ Any): TextFileDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TextFileDataMap) ⇒ Boolean): TextFileDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TextFileDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TextFileDataMap", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TextFileDataMap, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TextFileDataMap, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.file.TextFileDataMap.size", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[I[String]]", "member" : "bigglue.store.instances.file.TextFileDataMap.extract", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#extract():Seq[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: I[Int]): Boolean", "member" : "bigglue.store.instances.file.TextFileDataMap.contains", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#contains(key:bigglue.data.I[Int]):Boolean", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[I[String]]", "member" : "bigglue.store.instances.file.TextFileDataMap.all", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#all():Seq[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: I[Int]): Option[I[String]]", "member" : "bigglue.store.instances.file.TextFileDataMap.get", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#get(key:bigglue.data.I[Int]):Option[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[I[String]]", "member" : "bigglue.store.instances.file.TextFileDataMap.iterator", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#iterator():Iterator[bigglue.data.I[String]]", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[I[Int]]): Unit", "member" : "bigglue.store.instances.file.TextFileDataMap.remove", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#remove(keys:Seq[bigglue.data.I[Int]]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: I[Int]): Unit", "member" : "bigglue.store.instances.file.TextFileDataMap.remove", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#remove(key:bigglue.data.I[Int]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: I[Int], data: I[String]): Unit", "member" : "bigglue.store.instances.file.TextFileDataMap.put_", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#put_(key:bigglue.data.I[Int],data:bigglue.data.I[String]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.store.instances.file.TextFileDataMap.put_", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#put_(data:Seq[bigglue.data.I[String]]):Unit", "kind" : "def"}, {"label" : "file", "tail" : ": File", "member" : "bigglue.store.instances.file.TextFileDataMap.file", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#file:java.io.File", "kind" : "val"}, {"member" : "bigglue.store.instances.file.TextFileDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: I[Int], default: I[String]): I[String]", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: I[Int], data: I[String]): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: I[String]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: I[String]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: I[String]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: I[String]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[I[String]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[I[String]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/TextFileDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/file\/TextFileDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.file.TextFileIterator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TextFileIterator) ⇒ Boolean, msg: ⇒ Any): TextFileIterator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TextFileIterator) ⇒ Boolean): TextFileIterator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TextFileIterator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TextFileIterator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TextFileIterator, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TextFileIterator, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): I[String]", "member" : "bigglue.store.instances.file.TextFileIterator.next", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#next():bigglue.data.I[String]", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.instances.file.TextFileIterator.hasNext", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "trueIterator", "tail" : ": Iterator[String]", "member" : "bigglue.store.instances.file.TextFileIterator.trueIterator", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#trueIterator:Iterator[String]", "kind" : "val"}, {"label" : "file", "tail" : ": File", "member" : "bigglue.store.instances.file.TextFileIterator.file", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#file:java.io.File", "kind" : "val"}, {"member" : "bigglue.store.instances.file.TextFileIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[I[String]]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[I[String]]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[I[String]]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[I[String]], Iterator[I[String]])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[I[String]]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (I[String]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (I[String]) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (I[String]) ⇒ Boolean): Option[I[String]]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (I[String]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (I[String]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (I[String]) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(I[String], Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(I[String], B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (I[String]) ⇒ Boolean): Iterator[I[String]]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (I[String]) ⇒ Boolean): (Iterator[I[String]], Iterator[I[String]])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (I[String]) ⇒ Boolean): (Iterator[I[String]], Iterator[I[String]])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (I[String]) ⇒ Boolean): Iterator[I[String]]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (I[String], B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, I[String]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[I[String], B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (I[String]) ⇒ Boolean): Iterator[I[String]]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (I[String]) ⇒ Boolean): Iterator[I[String]]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (I[String], B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (I[String]) ⇒ Boolean): Iterator[I[String]]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (I[String]) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (I[String]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[I[String]]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[I[String]]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[I[String]]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[I[String]]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[I[String]]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[I[String], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, I[String], Col[I[String]]]): Col[I[String]]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[I[String]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[I[String]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[I[String]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[I[String]]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[I[String]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (I[String]) ⇒ B)(cmp: Ordering[B]): I[String]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (I[String]) ⇒ B)(cmp: Ordering[B]): I[String]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): I[String]", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): I[String]", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, I[String]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (I[String], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, I[String]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (I[String], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, I[String]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (I[String], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, I[String]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (I[String], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, I[String]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[I[String], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (I[String]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[I[String]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/file\/TextFileIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/file\/TextFileIterator.html", "kind" : "class"}], "bigglue.store.instances" : [{"name" : "bigglue.store.instances.BothDataIterator", "shortDescription" : "", "members_class" : [{"label" : "flatten", "tail" : "(): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.flattenTraversableOnce.flatten", "link" : "bigglue\/store\/instances\/BothDataIterator.html#flatten:Iterator[A]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/BothDataIterator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/BothDataIterator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BothDataIterator[DataL, DataR]) ⇒ Boolean, msg: ⇒ Any): BothDataIterator[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataIterator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BothDataIterator[DataL, DataR]) ⇒ Boolean): BothDataIterator[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataIterator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BothDataIterator[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataIterator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BothDataIterator[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataIterator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BothDataIterator[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/BothDataIterator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BothDataIterator[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/BothDataIterator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/instances\/BothDataIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.instances.BothDataIterator.hasNext", "link" : "bigglue\/store\/instances\/BothDataIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Either[DataL, DataR]", "member" : "bigglue.store.instances.BothDataIterator.next", "link" : "bigglue\/store\/instances\/BothDataIterator.html#next():bigglue.data.Either[DataL,DataR]", "kind" : "def"}, {"member" : "bigglue.store.instances.BothDataIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/instances\/BothDataIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/instances\/BothDataIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/instances\/BothDataIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Either[DataL, DataR]], Iterator[Either[DataL, DataR]])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/instances\/BothDataIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/instances\/BothDataIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/instances\/BothDataIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/instances\/BothDataIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/instances\/BothDataIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/BothDataIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/BothDataIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/BothDataIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/BothDataIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Option[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/instances\/BothDataIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/instances\/BothDataIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/instances\/BothDataIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/instances\/BothDataIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Either[DataL, DataR]) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/instances\/BothDataIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/instances\/BothDataIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Either[DataL, DataR], Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/instances\/BothDataIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/instances\/BothDataIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Either[DataL, DataR], B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/instances\/BothDataIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/instances\/BothDataIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): (Iterator[Either[DataL, DataR]], Iterator[Either[DataL, DataR]])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/instances\/BothDataIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): (Iterator[Either[DataL, DataR]], Iterator[Either[DataL, DataR]])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/instances\/BothDataIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/instances\/BothDataIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Either[DataL, DataR], B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/instances\/BothDataIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Either[DataL, DataR]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/instances\/BothDataIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Either[DataL, DataR], B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/instances\/BothDataIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/instances\/BothDataIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/instances\/BothDataIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Either[DataL, DataR], B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/instances\/BothDataIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/instances\/BothDataIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Either[DataL, DataR]) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/instances\/BothDataIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/instances\/BothDataIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Either[DataL, DataR]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/instances\/BothDataIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/instances\/BothDataIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/instances\/BothDataIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/instances\/BothDataIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/instances\/BothDataIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/instances\/BothDataIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/instances\/BothDataIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/instances\/BothDataIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Either[DataL, DataR]]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/instances\/BothDataIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/BothDataIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Either[DataL, DataR], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Either[DataL, DataR], Col[Either[DataL, DataR]]]): Col[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/instances\/BothDataIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/instances\/BothDataIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/BothDataIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/BothDataIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/instances\/BothDataIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Either[DataL, DataR]) ⇒ B)(cmp: Ordering[B]): Either[DataL, DataR]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/instances\/BothDataIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Either[DataL, DataR]) ⇒ B)(cmp: Ordering[B]): Either[DataL, DataR]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/instances\/BothDataIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Either[DataL, DataR]", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/instances\/BothDataIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Either[DataL, DataR]", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/instances\/BothDataIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/instances\/BothDataIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/instances\/BothDataIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Either[DataL, DataR]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/instances\/BothDataIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/instances\/BothDataIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Either[DataL, DataR], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Either[DataL, DataR]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Either[DataL, DataR], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Either[DataL, DataR]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Either[DataL, DataR], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/instances\/BothDataIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Either[DataL, DataR]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/instances\/BothDataIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Either[DataL, DataR], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/instances\/BothDataIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Either[DataL, DataR]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/instances\/BothDataIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Either[DataL, DataR], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/instances\/BothDataIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Either[DataL, DataR]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/instances\/BothDataIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/instances\/BothDataIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "bigglue\/store\/instances\/BothDataIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Either[DataL, DataR]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/instances\/BothDataIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/instances\/BothDataIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/BothDataIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/BothDataIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/BothDataIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/BothDataIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/BothDataIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/BothDataIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/BothDataIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/BothDataIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/BothDataIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/BothDataIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/BothDataIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/BothDataIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/BothDataIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/BothDataIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/BothDataIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/BothDataIterator.html", "kind" : "class"}, {"name" : "bigglue.store.instances.BothDataStore", "shortDescription" : "Created by edmundlam on 8\/10\/17.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/BothDataStore.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/BothDataStore.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BothDataStore[DataL, DataR]) ⇒ Boolean, msg: ⇒ Any): BothDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataStore.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BothDataStore[DataL, DataR]) ⇒ Boolean): BothDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataStore.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BothDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataStore.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BothDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/BothDataStore.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BothDataStore[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/BothDataStore.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BothDataStore[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/BothDataStore.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Either[DataL, DataR]]", "member" : "bigglue.store.instances.BothDataStore.iterator", "link" : "bigglue\/store\/instances\/BothDataStore.html#iterator():Iterator[bigglue.data.Either[DataL,DataR]]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.BothDataStore.size", "link" : "bigglue\/store\/instances\/BothDataStore.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Either[DataL, DataR]]", "member" : "bigglue.store.instances.BothDataStore.extract", "link" : "bigglue\/store\/instances\/BothDataStore.html#extract():Seq[bigglue.data.Either[DataL,DataR]]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Either[DataL, DataR]]", "member" : "bigglue.store.instances.BothDataStore.all", "link" : "bigglue\/store\/instances\/BothDataStore.html#all():Seq[bigglue.data.Either[DataL,DataR]]", "kind" : "def"}, {"label" : "put_", "tail" : "(ds: Seq[Either[DataL, DataR]]): Unit", "member" : "bigglue.store.instances.BothDataStore.put_", "link" : "bigglue\/store\/instances\/BothDataStore.html#put_(ds:Seq[bigglue.data.Either[DataL,DataR]]):Unit", "kind" : "def"}, {"label" : "partition", "tail" : "(ds: Seq[Either[DataL, DataR]]): (Seq[DataL], Seq[DataR])", "member" : "bigglue.store.instances.BothDataStore.partition", "link" : "bigglue\/store\/instances\/BothDataStore.html#partition(ds:Seq[bigglue.data.Either[DataL,DataR]]):(Seq[DataL],Seq[DataR])", "kind" : "def"}, {"member" : "bigglue.store.instances.BothDataStore#<init>", "error" : "unsupported entity"}, {"label" : "dStoreR", "tail" : ": DataStore[DataR]", "member" : "bigglue.store.instances.BothDataStore.dStoreR", "link" : "bigglue\/store\/instances\/BothDataStore.html#dStoreR:bigglue.store.DataStore[DataR]", "kind" : "val"}, {"label" : "dStoreL", "tail" : ": DataStore[DataL]", "member" : "bigglue.store.instances.BothDataStore.dStoreL", "link" : "bigglue\/store\/instances\/BothDataStore.html#dStoreL:bigglue.store.DataStore[DataL]", "kind" : "val"}, {"label" : "add", "tail" : "(data: Either[DataL, DataR]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/BothDataStore.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Either[DataL, DataR]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/BothDataStore.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Either[DataL, DataR]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/BothDataStore.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/BothDataStore.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/BothDataStore.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/BothDataStore.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/BothDataStore.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/BothDataStore.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/BothDataStore.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/BothDataStore.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/BothDataStore.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/BothDataStore.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/BothDataStore.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Either[DataL, DataR]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/BothDataStore.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Either[DataL, DataR]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/BothDataStore.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Either[DataL, DataR]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/BothDataStore.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Either[DataL, DataR]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/BothDataStore.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Either[DataL, DataR]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/BothDataStore.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Either[DataL, DataR]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/BothDataStore.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/BothDataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/BothDataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/BothDataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/BothDataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/BothDataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/BothDataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/BothDataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/BothDataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/BothDataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/BothDataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/BothDataStore.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/BothDataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/BothDataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/BothDataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/store\/instances\/BothDataStore.html", "kind" : "case class"}, {"name" : "bigglue.store.instances.InMemDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/InMemDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/InMemDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): InMemDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataMap[Key, Data]) ⇒ Boolean): InMemDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InMemDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InMemDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InMemDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/InMemDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InMemDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/InMemDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.InMemDataMap.iterator", "link" : "bigglue\/store\/instances\/InMemDataMap.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.InMemDataMap.size", "link" : "bigglue\/store\/instances\/InMemDataMap.html#size():Int", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.instances.InMemDataMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMap.html#remove(key:Key):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.instances.InMemDataMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMap.html#remove(keys:Seq[Key]):Unit", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemDataMap.extract", "link" : "bigglue\/store\/instances\/InMemDataMap.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key): Boolean", "member" : "bigglue.store.instances.InMemDataMap.contains", "link" : "bigglue\/store\/instances\/InMemDataMap.html#contains(key:Key):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Option[Data]", "member" : "bigglue.store.instances.InMemDataMap.get", "link" : "bigglue\/store\/instances\/InMemDataMap.html#get(key:Key):Option[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.instances.InMemDataMap.put_", "link" : "bigglue\/store\/instances\/InMemDataMap.html#put_(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemDataMap.all", "link" : "bigglue\/store\/instances\/InMemDataMap.html#all():Seq[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.InMemDataMap.put_", "link" : "bigglue\/store\/instances\/InMemDataMap.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "map", "tail" : ": Map[Key, Data]", "member" : "bigglue.store.instances.InMemDataMap.map", "link" : "bigglue\/store\/instances\/InMemDataMap.html#map:scala.collection.immutable.Map[Key,Data]", "kind" : "var"}, {"member" : "bigglue.store.instances.InMemDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Key, default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/InMemDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/InMemDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/InMemDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/InMemDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/InMemDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/InMemDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/InMemDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/InMemDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/InMemDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/InMemDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/InMemDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/InMemDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/InMemDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/InMemDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/InMemDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/InMemDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/InMemDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.InMemDataMultiMap", "shortDescription" : "", "members_class" : [{"label" : "toParArray", "tail" : "(): ParArray[T]", "member" : "scala.collection.parallel.CollectionsHaveToParArray.toParArray", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#toParArray:scala.collection.parallel.mutable.ParArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataMultiMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): InMemDataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataMultiMap[Key, Data]) ⇒ Boolean): InMemDataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InMemDataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InMemDataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InMemDataMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InMemDataMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "iterator", "tail" : "(key: Key): Iterator[Data]", "member" : "bigglue.store.instances.InMemDataMultiMap.iterator", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#iterator(key:Key):Iterator[Data]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Set[Data]]", "member" : "bigglue.store.instances.InMemDataMultiMap.iterator", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#iterator():Iterator[Set[Data]]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.InMemDataMultiMap.size", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#size():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.store.instances.InMemDataMultiMap.toString", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#toString():String", "kind" : "def"}, {"label" : "remove", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#remove(data:Set[Data]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#remove(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#remove(key:Key):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.remove", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#remove(keys:Seq[Key]):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key, data: Set[Data]): Boolean", "member" : "bigglue.store.instances.InMemDataMultiMap.contains", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#contains(key:Key,data:Set[Data]):Boolean", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.instances.InMemDataMultiMap.extract", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#extract():Seq[Set[Data]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Set[Data]", "member" : "bigglue.store.instances.InMemDataMultiMap.get", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#get(key:Key):Set[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.put_", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#put_(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.instances.InMemDataMultiMap.all", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#all():Seq[Set[Data]]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.instances.InMemDataMultiMap.put_", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#put_(data:Seq[Set[Data]]):Unit", "kind" : "def"}, {"label" : "map", "tail" : ": Map[Key, Set[Data]]", "member" : "bigglue.store.instances.InMemDataMultiMap.map", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#map:scala.collection.immutable.Map[Key,Set[Data]]", "kind" : "var"}, {"member" : "bigglue.store.instances.InMemDataMultiMap#<init>", "error" : "unsupported entity"}, {"label" : "contains", "tail" : "(key: Key, data: Data): Boolean", "member" : "bigglue.store.DataMultiMap.contains", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#contains(key:Key,data:Data):Boolean", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.put", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#put(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Set[Data]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataMultiMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/InMemDataMultiMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.InMemDataQueue", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataQueue[Data]) ⇒ Boolean, msg: ⇒ Any): InMemDataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemDataQueue[Data]) ⇒ Boolean): InMemDataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InMemDataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InMemDataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InMemDataQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InMemDataQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.InMemDataQueue.iterator", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.InMemDataQueue.size", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemDataQueue.extract", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): Option[Data]", "member" : "bigglue.store.instances.InMemDataQueue.dequeue", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#dequeue():Option[Data]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemDataQueue.all", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#all():Seq[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.InMemDataQueue.put_", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "ls", "tail" : ": Vector[Data]", "member" : "bigglue.store.instances.InMemDataQueue.ls", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ls:scala.collection.immutable.Vector[Data]", "kind" : "var"}, {"member" : "bigglue.store.instances.InMemDataQueue#<init>", "error" : "unsupported entity"}, {"label" : "enqueue", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#enqueue(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#enqueue(data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemDataQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/InMemDataQueue.html", "kind" : "class"}, {"name" : "bigglue.store.instances.InMemDataStore", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/store\/instances\/InMemDataStore$.html", "members_object" : [{"label" : "createLinearStore", "tail" : "(name: String): DataStore[Data]", "member" : "bigglue.store.instances.InMemDataStore.createLinearStore", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#createLinearStore[Data](name:String):bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "createDataMultiMap", "tail" : "(name: String): DataMultiMap[K, V]", "member" : "bigglue.store.instances.InMemDataStore.createDataMultiMap", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#createDataMultiMap[K,V](name:String):bigglue.store.DataMultiMap[K,V]", "kind" : "def"}, {"label" : "createIdDataMap", "tail" : "(name: String): DataStore[Data]", "member" : "bigglue.store.instances.InMemDataStore.createIdDataMap", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#createIdDataMap[Data<:bigglue.data.Identifiable[Data]](name:String):bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemDataStore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemDataStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.store.instances.InMemIdDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemIdDataMap[Data]) ⇒ Boolean, msg: ⇒ Any): InMemIdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemIdDataMap[Data]) ⇒ Boolean): InMemIdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InMemIdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InMemIdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InMemIdDataMap[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InMemIdDataMap[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.store.instances.InMemIdDataMap.toString", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#toString():String", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.InMemIdDataMap.iterator", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.InMemIdDataMap.size", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#size():Int", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Identity[Data]): Unit", "member" : "bigglue.store.instances.InMemIdDataMap.remove", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#remove(key:bigglue.data.Identity[Data]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Identity[Data]]): Unit", "member" : "bigglue.store.instances.InMemIdDataMap.remove", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#remove(keys:Seq[bigglue.data.Identity[Data]]):Unit", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemIdDataMap.extract", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Identity[Data]): Boolean", "member" : "bigglue.store.instances.InMemIdDataMap.contains", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#contains(key:bigglue.data.Identity[Data]):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(key: Identity[Data]): Option[Data]", "member" : "bigglue.store.instances.InMemIdDataMap.get", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#get(key:bigglue.data.Identity[Data]):Option[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Identity[Data], data: Data): Unit", "member" : "bigglue.store.instances.InMemIdDataMap.put_", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#put_(key:bigglue.data.Identity[Data],data:Data):Unit", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemIdDataMap.all", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#all():Seq[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.InMemIdDataMap.put_", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "map", "tail" : ": Map[Identity[Data], Data]", "member" : "bigglue.store.instances.InMemIdDataMap.map", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#map:scala.collection.immutable.Map[bigglue.data.Identity[Data],Data]", "kind" : "var"}, {"member" : "bigglue.store.instances.InMemIdDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Identity[Data], default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Identity[Data], data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemIdDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/InMemIdDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.InMemLinearStore", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemLinearStore[Data]) ⇒ Boolean, msg: ⇒ Any): InMemLinearStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InMemLinearStore[Data]) ⇒ Boolean): InMemLinearStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InMemLinearStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InMemLinearStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InMemLinearStore[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InMemLinearStore[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.store.instances.InMemLinearStore.toString", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#toString():String", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.InMemLinearStore.iterator", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.InMemLinearStore.size", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemLinearStore.extract", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.InMemLinearStore.all", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#all():Seq[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.InMemLinearStore.put_", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "ls", "tail" : ": List[Data]", "member" : "bigglue.store.instances.InMemLinearStore.ls", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ls:List[Data]", "kind" : "var"}, {"member" : "bigglue.store.instances.InMemLinearStore#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/InMemLinearStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/InMemLinearStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/InMemLinearStore.html", "kind" : "class"}], "akka.pattern" : [], "akka" : [], "bigglue.store" : [{"name" : "bigglue.store.DataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): DataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataMap[Key, Data]) ⇒ Boolean): DataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: Key, default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/DataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/DataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"member" : "bigglue.store.DataMap#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/DataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/DataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/DataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/DataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/DataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/DataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/DataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/DataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/DataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/DataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.DataMap.remove", "link" : "bigglue\/store\/DataMap.html#remove(key:Key):Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.DataMap.remove", "link" : "bigglue\/store\/DataMap.html#remove(keys:Seq[Key]):Unit", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(key: Key): Boolean", "member" : "bigglue.store.DataMap.contains", "link" : "bigglue\/store\/DataMap.html#contains(key:Key):Boolean", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: Key): Option[Data]", "member" : "bigglue.store.DataMap.get", "link" : "bigglue\/store\/DataMap.html#get(key:Key):Option[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.DataMap.put_", "link" : "bigglue\/store\/DataMap.html#put_(key:Key,data:Data):Unit", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.DataStore.iterator", "link" : "bigglue\/store\/DataMap.html#iterator():Iterator[Data]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStore.size", "link" : "bigglue\/store\/DataMap.html#size():Int", "kind" : "abstract def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.extract", "link" : "bigglue\/store\/DataMap.html#extract():Seq[Data]", "kind" : "abstract def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.all", "link" : "bigglue\/store\/DataMap.html#all():Seq[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put_", "link" : "bigglue\/store\/DataMap.html#put_(data:Seq[Data]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataMap.html", "kind" : "class"}, {"name" : "bigglue.store.DataMultiMap", "shortDescription" : "", "members_class" : [{"label" : "toParArray", "tail" : "(): ParArray[T]", "member" : "scala.collection.parallel.CollectionsHaveToParArray.toParArray", "link" : "bigglue\/store\/DataMultiMap.html#toParArray:scala.collection.parallel.mutable.ParArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataMultiMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataMultiMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataMultiMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): DataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMultiMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataMultiMap[Key, Data]) ⇒ Boolean): DataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMultiMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMultiMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataMultiMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataMultiMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataMultiMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key, data: Data): Boolean", "member" : "bigglue.store.DataMultiMap.contains", "link" : "bigglue\/store\/DataMultiMap.html#contains(key:Key,data:Data):Boolean", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.put", "link" : "bigglue\/store\/DataMultiMap.html#put(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"member" : "bigglue.store.DataMultiMap#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/DataMultiMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataMultiMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataMultiMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/DataMultiMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/DataMultiMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/DataMultiMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/DataMultiMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/DataMultiMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataMultiMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataMultiMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataMultiMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataMultiMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/DataMultiMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataMultiMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataMultiMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataMultiMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataMultiMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/DataMultiMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Set[Data]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/DataMultiMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataMultiMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataMultiMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataMultiMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataMultiMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataMultiMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataMultiMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataMultiMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMultiMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMultiMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataMultiMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataMultiMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataMultiMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/DataMultiMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataMultiMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataMultiMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataMultiMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataMultiMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataMultiMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataMultiMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "iterator", "tail" : "(key: Key): Iterator[Data]", "member" : "bigglue.store.DataMultiMap.iterator", "link" : "bigglue\/store\/DataMultiMap.html#iterator(key:Key):Iterator[Data]", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.remove", "link" : "bigglue\/store\/DataMultiMap.html#remove(data:Set[Data]):Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.remove", "link" : "bigglue\/store\/DataMultiMap.html#remove(key:Key,data:Set[Data]):Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.DataMultiMap.remove", "link" : "bigglue\/store\/DataMultiMap.html#remove(key:Key):Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.DataMultiMap.remove", "link" : "bigglue\/store\/DataMultiMap.html#remove(keys:Seq[Key]):Unit", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(key: Key, data: Set[Data]): Boolean", "member" : "bigglue.store.DataMultiMap.contains", "link" : "bigglue\/store\/DataMultiMap.html#contains(key:Key,data:Set[Data]):Boolean", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: Key): Set[Data]", "member" : "bigglue.store.DataMultiMap.get", "link" : "bigglue\/store\/DataMultiMap.html#get(key:Key):Set[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.put_", "link" : "bigglue\/store\/DataMultiMap.html#put_(key:Key,data:Set[Data]):Unit", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[Set[Data]]", "member" : "bigglue.store.DataStore.iterator", "link" : "bigglue\/store\/DataMultiMap.html#iterator():Iterator[Data]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStore.size", "link" : "bigglue\/store\/DataMultiMap.html#size():Int", "kind" : "abstract def"}, {"label" : "extract", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.DataStore.extract", "link" : "bigglue\/store\/DataMultiMap.html#extract():Seq[Data]", "kind" : "abstract def"}, {"label" : "all", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.DataStore.all", "link" : "bigglue\/store\/DataMultiMap.html#all():Seq[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.DataStore.put_", "link" : "bigglue\/store\/DataMultiMap.html#put_(data:Seq[Data]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataMultiMap.html", "kind" : "class"}, {"name" : "bigglue.store.DataQueue", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataQueue[Data]) ⇒ Boolean, msg: ⇒ Any): DataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataQueue[Data]) ⇒ Boolean): DataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/DataQueue.html#enqueue(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/DataQueue.html#enqueue(data:Data):Unit", "kind" : "def"}, {"member" : "bigglue.store.DataQueue#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/DataQueue.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataQueue.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataQueue.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/DataQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/DataQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/DataQueue.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/DataQueue.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/DataQueue.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataQueue.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataQueue.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataQueue.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataQueue.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/DataQueue.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataQueue.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataQueue.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataQueue.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataQueue.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/DataQueue.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/DataQueue.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/DataQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dequeue", "tail" : "(): Option[Data]", "member" : "bigglue.store.DataQueue.dequeue", "link" : "bigglue\/store\/DataQueue.html#dequeue():Option[Data]", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.DataStore.iterator", "link" : "bigglue\/store\/DataQueue.html#iterator():Iterator[Data]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStore.size", "link" : "bigglue\/store\/DataQueue.html#size():Int", "kind" : "abstract def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.extract", "link" : "bigglue\/store\/DataQueue.html#extract():Seq[Data]", "kind" : "abstract def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.all", "link" : "bigglue\/store\/DataQueue.html#all():Seq[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put_", "link" : "bigglue\/store\/DataQueue.html#put_(data:Seq[Data]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataQueue.html", "kind" : "class"}, {"name" : "bigglue.store.DataStore", "shortDescription" : "The Data Store is an abstraction for how you store your data in BigGlue.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataStore.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataStore.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStore[Data]) ⇒ Boolean, msg: ⇒ Any): DataStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStore.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStore[Data]) ⇒ Boolean): DataStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStore.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStore.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataStore[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStore.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataStore[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataStore.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataStore[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataStore.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/DataStore.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataStore.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/DataStore.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/DataStore.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/DataStore.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/DataStore.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/DataStore.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/DataStore.html#name:String", "kind" : "var"}, {"member" : "bigglue.store.DataStore#<init>", "error" : "unsupported entity"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataStore.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataStore.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataStore.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataStore.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/DataStore.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataStore.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/DataStore.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataStore.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/DataStore.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/DataStore.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/DataStore.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/DataStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.DataStore.iterator", "link" : "bigglue\/store\/DataStore.html#iterator():Iterator[Data]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStore.size", "link" : "bigglue\/store\/DataStore.html#size():Int", "kind" : "abstract def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.extract", "link" : "bigglue\/store\/DataStore.html#extract():Seq[Data]", "kind" : "abstract def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.all", "link" : "bigglue\/store\/DataStore.html#all():Seq[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put_", "link" : "bigglue\/store\/DataStore.html#put_(data:Seq[Data]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataStore.html", "kind" : "class"}, {"name" : "bigglue.store.DataStream", "shortDescription" : "Created by edmundlam on 8\/30\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataStream.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataStream.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStream[StreamData]) ⇒ Boolean, msg: ⇒ Any): DataStream[StreamData]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStream.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStream[StreamData]) ⇒ Boolean): DataStream[StreamData]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStream.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataStream[StreamData]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStream.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataStream[StreamData]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStream.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataStream[StreamData], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataStream.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataStream[StreamData], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataStream.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/DataStream.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): StreamData", "member" : "bigglue.store.DataStream.next", "link" : "bigglue\/store\/DataStream.html#next():StreamData", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.DataStream.hasNext", "link" : "bigglue\/store\/DataStream.html#hasNext:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStream.size", "link" : "bigglue\/store\/DataStream.html#size():Int", "kind" : "def"}, {"label" : "getBuffer", "tail" : "(): DataQueue[StreamData]", "member" : "bigglue.store.DataStream.getBuffer", "link" : "bigglue\/store\/DataStream.html#getBuffer():bigglue.store.DataQueue[StreamData]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStream.init", "link" : "bigglue\/store\/DataStream.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "bufferOpt", "tail" : ": Option[DataQueue[StreamData]]", "member" : "bigglue.store.DataStream.bufferOpt", "link" : "bigglue\/store\/DataStream.html#bufferOpt:Option[bigglue.store.DataQueue[StreamData]]", "kind" : "var"}, {"member" : "bigglue.store.DataStream#<init>", "error" : "unsupported entity"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataStream.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataStream.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataStream.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataStream.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/DataStream.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[StreamData]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/DataStream.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[StreamData]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/DataStream.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[StreamData]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/DataStream.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/DataStream.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/DataStream.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/DataStream.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[StreamData], Iterator[StreamData])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/DataStream.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/DataStream.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/DataStream.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/DataStream.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[StreamData]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/DataStream.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DataStream.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DataStream.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (StreamData) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DataStream.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (StreamData) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DataStream.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (StreamData) ⇒ Boolean): Option[StreamData]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/DataStream.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/DataStream.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (StreamData) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/DataStream.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (StreamData) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/DataStream.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (StreamData) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/DataStream.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/DataStream.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(StreamData, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/DataStream.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/DataStream.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(StreamData, B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/DataStream.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (StreamData) ⇒ Boolean): Iterator[StreamData]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/DataStream.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (StreamData) ⇒ Boolean): (Iterator[StreamData], Iterator[StreamData])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/DataStream.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (StreamData) ⇒ Boolean): (Iterator[StreamData], Iterator[StreamData])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/DataStream.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (StreamData) ⇒ Boolean): Iterator[StreamData]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/DataStream.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (StreamData, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/DataStream.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, StreamData) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/DataStream.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[StreamData, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/DataStream.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (StreamData) ⇒ Boolean): Iterator[StreamData]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/DataStream.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (StreamData) ⇒ Boolean): Iterator[StreamData]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/DataStream.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (StreamData, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/DataStream.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (StreamData) ⇒ Boolean): Iterator[StreamData]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/DataStream.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (StreamData) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/DataStream.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/DataStream.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (StreamData) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/DataStream.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[StreamData]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/DataStream.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[StreamData]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/DataStream.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[StreamData]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/DataStream.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[StreamData]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/DataStream.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/DataStream.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/DataStream.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/DataStream.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[StreamData]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/DataStream.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStream.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStream.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStream.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStream.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStream.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStream.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[StreamData, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/DataStream.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, StreamData, Col[StreamData]]): Col[StreamData]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/DataStream.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[StreamData]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/DataStream.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/DataStream.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/DataStream.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[StreamData]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/DataStream.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[StreamData]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/DataStream.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[StreamData]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/DataStream.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[StreamData]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/DataStream.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/DataStream.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DataStream.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DataStream.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/DataStream.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (StreamData) ⇒ B)(cmp: Ordering[B]): StreamData", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/DataStream.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (StreamData) ⇒ B)(cmp: Ordering[B]): StreamData", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/DataStream.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): StreamData", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/DataStream.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): StreamData", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/DataStream.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/DataStream.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/DataStream.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, StreamData) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/DataStream.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/DataStream.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/DataStream.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/DataStream.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (StreamData, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/DataStream.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, StreamData) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/DataStream.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (StreamData, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/DataStream.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, StreamData) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/DataStream.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (StreamData, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/DataStream.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, StreamData) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/DataStream.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (StreamData, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/DataStream.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, StreamData) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/DataStream.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[StreamData, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/DataStream.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (StreamData) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/DataStream.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/DataStream.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[StreamData]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/DataStream.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/DataStream.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "close", "tail" : "(): Unit", "member" : "bigglue.store.DataStream.close", "link" : "bigglue\/store\/DataStream.html#close():Unit", "kind" : "abstract def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.DataStream.pollForMore", "link" : "bigglue\/store\/DataStream.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataStream.html", "kind" : "class"}, {"name" : "bigglue.store.DataStreamAdapter", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DataStreamAdapter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DataStreamAdapter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStreamAdapter[Input, Output]) ⇒ Boolean, msg: ⇒ Any): DataStreamAdapter[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStreamAdapter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStreamAdapter[Input, Output]) ⇒ Boolean): DataStreamAdapter[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStreamAdapter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataStreamAdapter[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStreamAdapter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataStreamAdapter[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DataStreamAdapter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataStreamAdapter[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DataStreamAdapter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataStreamAdapter[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DataStreamAdapter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/DataStreamAdapter.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): Output", "member" : "bigglue.store.DataStreamAdapter.next", "link" : "bigglue\/store\/DataStreamAdapter.html#next():Output", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.DataStreamAdapter.hasNext", "link" : "bigglue\/store\/DataStreamAdapter.html#hasNext:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStreamAdapter.size", "link" : "bigglue\/store\/DataStreamAdapter.html#size():Int", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "bigglue.store.DataStreamAdapter.close", "link" : "bigglue\/store\/DataStreamAdapter.html#close():Unit", "kind" : "def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.DataStreamAdapter.pollForMore", "link" : "bigglue\/store\/DataStreamAdapter.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "def"}, {"member" : "bigglue.store.DataStreamAdapter#<init>", "error" : "unsupported entity"}, {"label" : "getBuffer", "tail" : "(): DataQueue[Output]", "member" : "bigglue.store.DataStream.getBuffer", "link" : "bigglue\/store\/DataStreamAdapter.html#getBuffer():bigglue.store.DataQueue[StreamData]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStream.init", "link" : "bigglue\/store\/DataStreamAdapter.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "bufferOpt", "tail" : ": Option[DataQueue[Output]]", "member" : "bigglue.store.DataStream.bufferOpt", "link" : "bigglue\/store\/DataStreamAdapter.html#bufferOpt:Option[bigglue.store.DataQueue[StreamData]]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DataStreamAdapter.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DataStreamAdapter.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DataStreamAdapter.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DataStreamAdapter.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/DataStreamAdapter.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Output]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/DataStreamAdapter.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/DataStreamAdapter.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Output]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/DataStreamAdapter.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/DataStreamAdapter.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/DataStreamAdapter.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/DataStreamAdapter.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/DataStreamAdapter.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/DataStreamAdapter.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/DataStreamAdapter.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/DataStreamAdapter.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Output]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/DataStreamAdapter.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DataStreamAdapter.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DataStreamAdapter.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DataStreamAdapter.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DataStreamAdapter.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Output) ⇒ Boolean): Option[Output]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/DataStreamAdapter.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/DataStreamAdapter.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/DataStreamAdapter.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/DataStreamAdapter.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Output) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/DataStreamAdapter.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/DataStreamAdapter.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Output, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/DataStreamAdapter.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/DataStreamAdapter.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Output, B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/DataStreamAdapter.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/DataStreamAdapter.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/DataStreamAdapter.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/DataStreamAdapter.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/DataStreamAdapter.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/DataStreamAdapter.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/DataStreamAdapter.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Output, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/DataStreamAdapter.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/DataStreamAdapter.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/DataStreamAdapter.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Output, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/DataStreamAdapter.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/DataStreamAdapter.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Output) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/DataStreamAdapter.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/DataStreamAdapter.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/DataStreamAdapter.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/DataStreamAdapter.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/DataStreamAdapter.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/DataStreamAdapter.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/DataStreamAdapter.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/DataStreamAdapter.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/DataStreamAdapter.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/DataStreamAdapter.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/DataStreamAdapter.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStreamAdapter.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStreamAdapter.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DataStreamAdapter.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStreamAdapter.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStreamAdapter.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DataStreamAdapter.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Output, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/DataStreamAdapter.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Output, Col[Output]]): Col[Output]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/DataStreamAdapter.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Output]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/DataStreamAdapter.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/DataStreamAdapter.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/DataStreamAdapter.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Output]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/DataStreamAdapter.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Output]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/DataStreamAdapter.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Output]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/DataStreamAdapter.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/DataStreamAdapter.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/DataStreamAdapter.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DataStreamAdapter.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DataStreamAdapter.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/DataStreamAdapter.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/DataStreamAdapter.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/DataStreamAdapter.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/DataStreamAdapter.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/DataStreamAdapter.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/DataStreamAdapter.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/DataStreamAdapter.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Output) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/DataStreamAdapter.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/DataStreamAdapter.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/DataStreamAdapter.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/DataStreamAdapter.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Output, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/DataStreamAdapter.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Output) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/DataStreamAdapter.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/DataStreamAdapter.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/DataStreamAdapter.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/DataStreamAdapter.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/DataStreamAdapter.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/DataStreamAdapter.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/DataStreamAdapter.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Output, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/DataStreamAdapter.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/DataStreamAdapter.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/DataStreamAdapter.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/DataStreamAdapter.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/DataStreamAdapter.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DataStreamAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DataStreamAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DataStreamAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DataStreamAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DataStreamAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DataStreamAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DataStreamAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStreamAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStreamAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DataStreamAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DataStreamAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DataStreamAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DataStreamAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DataStreamAdapter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DataStreamAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DataStreamAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DataStreamAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DataStreamAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toOutput", "tail" : "(input: Input): Output", "member" : "bigglue.store.DataStreamAdapter.toOutput", "link" : "bigglue\/store\/DataStreamAdapter.html#toOutput(input:Input):Output", "kind" : "abstract def"}], "class" : "bigglue\/store\/DataStreamAdapter.html", "kind" : "class"}, {"name" : "bigglue.store.DropLeftDataStreamAdaptor", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DropLeftDataStreamAdaptor[Output]) ⇒ Boolean, msg: ⇒ Any): DropLeftDataStreamAdaptor[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DropLeftDataStreamAdaptor[Output]) ⇒ Boolean): DropLeftDataStreamAdaptor[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DropLeftDataStreamAdaptor[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DropLeftDataStreamAdaptor[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DropLeftDataStreamAdaptor[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DropLeftDataStreamAdaptor[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "toOutput", "tail" : "(input: Tuple2[_, Output]): Output", "member" : "bigglue.store.DropLeftDataStreamAdaptor.toOutput", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toOutput(input:Tuple2[_,Output]):Output", "kind" : "def"}, {"member" : "bigglue.store.DropLeftDataStreamAdaptor#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : "(): Output", "member" : "bigglue.store.DataStreamAdapter.next", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#next():Output", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.DataStreamAdapter.hasNext", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#hasNext:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStreamAdapter.size", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#size():Int", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "bigglue.store.DataStreamAdapter.close", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#close():Unit", "kind" : "def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.DataStreamAdapter.pollForMore", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "def"}, {"label" : "getBuffer", "tail" : "(): DataQueue[Output]", "member" : "bigglue.store.DataStream.getBuffer", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#getBuffer():bigglue.store.DataQueue[StreamData]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStream.init", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "bufferOpt", "tail" : ": Option[DataQueue[Output]]", "member" : "bigglue.store.DataStream.bufferOpt", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#bufferOpt:Option[bigglue.store.DataQueue[StreamData]]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Output]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Output]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Output]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Output) ⇒ Boolean): Option[Output]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Output) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Output) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Output, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Output, B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Output) ⇒ Boolean): (Iterator[Output], Iterator[Output])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Output, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Output, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Output) ⇒ Boolean): Iterator[Output]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Output) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Output) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Output]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Output]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Output]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Output, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Output, Col[Output]]): Col[Output]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Output]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Output]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Output]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Output]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Output) ⇒ B)(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Output", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Output) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Output, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Output) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Output, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Output) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Output, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Output) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Output]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/DropLeftDataStreamAdaptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/DropLeftDataStreamAdaptor.html", "kind" : "class"}, {"name" : "bigglue.store.IdDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/IdDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/IdDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdDataMap[Data]) ⇒ Boolean, msg: ⇒ Any): IdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/IdDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdDataMap[Data]) ⇒ Boolean): IdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/IdDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/IdDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IdDataMap[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/IdDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IdDataMap[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/IdDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IdDataMap[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/IdDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.store.IdDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Identity[Data], default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/IdDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Identity[Data], data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/IdDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/IdDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/IdDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/IdDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/IdDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/IdDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/IdDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/IdDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/IdDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/IdDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/IdDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/IdDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/IdDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/IdDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/IdDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/IdDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/IdDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/IdDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/IdDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/IdDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/IdDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/IdDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/IdDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/IdDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/IdDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/IdDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/IdDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/IdDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/IdDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/IdDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/IdDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/IdDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/IdDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/IdDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/IdDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/IdDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/IdDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/IdDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/IdDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "remove", "tail" : "(key: Identity[Data]): Unit", "member" : "bigglue.store.DataMap.remove", "link" : "bigglue\/store\/IdDataMap.html#remove(key:Key):Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(keys: Seq[Identity[Data]]): Unit", "member" : "bigglue.store.DataMap.remove", "link" : "bigglue\/store\/IdDataMap.html#remove(keys:Seq[Key]):Unit", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(key: Identity[Data]): Boolean", "member" : "bigglue.store.DataMap.contains", "link" : "bigglue\/store\/IdDataMap.html#contains(key:Key):Boolean", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: Identity[Data]): Option[Data]", "member" : "bigglue.store.DataMap.get", "link" : "bigglue\/store\/IdDataMap.html#get(key:Key):Option[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(key: Identity[Data], data: Data): Unit", "member" : "bigglue.store.DataMap.put_", "link" : "bigglue\/store\/IdDataMap.html#put_(key:Key,data:Data):Unit", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.DataStore.iterator", "link" : "bigglue\/store\/IdDataMap.html#iterator():Iterator[Data]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStore.size", "link" : "bigglue\/store\/IdDataMap.html#size():Int", "kind" : "abstract def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.extract", "link" : "bigglue\/store\/IdDataMap.html#extract():Seq[Data]", "kind" : "abstract def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.DataStore.all", "link" : "bigglue\/store\/IdDataMap.html#all():Seq[Data]", "kind" : "abstract def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put_", "link" : "bigglue\/store\/IdDataMap.html#put_(data:Seq[Data]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/store\/IdDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.TupleDataMap", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/TupleDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/TupleDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TupleDataMap[KeyL, KeyR, DataL, DataR]) ⇒ Boolean, msg: ⇒ Any): TupleDataMap[KeyL, KeyR, DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TupleDataMap[KeyL, KeyR, DataL, DataR]) ⇒ Boolean): TupleDataMap[KeyL, KeyR, DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TupleDataMap[KeyL, KeyR, DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TupleDataMap[KeyL, KeyR, DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TupleDataMap[KeyL, KeyR, DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/TupleDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TupleDataMap[KeyL, KeyR, DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/TupleDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.TupleDataMap.size", "link" : "bigglue\/store\/TupleDataMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataMap.extract", "link" : "bigglue\/store\/TupleDataMap.html#extract():Seq[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: I[(KeyL, KeyR)]): Boolean", "member" : "bigglue.store.TupleDataMap.contains", "link" : "bigglue\/store\/TupleDataMap.html#contains(key:bigglue.data.I[(KeyL,KeyR)]):Boolean", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataMap.all", "link" : "bigglue\/store\/TupleDataMap.html#all():Seq[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: I[(KeyL, KeyR)]): Option[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataMap.get", "link" : "bigglue\/store\/TupleDataMap.html#get(key:bigglue.data.I[(KeyL,KeyR)]):Option[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataMap.iterator", "link" : "bigglue\/store\/TupleDataMap.html#iterator():Iterator[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "remove", "tail" : "(key: I[(KeyL, KeyR)]): Unit", "member" : "bigglue.store.TupleDataMap.remove", "link" : "bigglue\/store\/TupleDataMap.html#remove(key:bigglue.data.I[(KeyL,KeyR)]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[I[(KeyL, KeyR)]]): Unit", "member" : "bigglue.store.TupleDataMap.remove", "link" : "bigglue\/store\/TupleDataMap.html#remove(keys:Seq[bigglue.data.I[(KeyL,KeyR)]]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: I[(KeyL, KeyR)], data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.TupleDataMap.put_", "link" : "bigglue\/store\/TupleDataMap.html#put_(key:bigglue.data.I[(KeyL,KeyR)],data:bigglue.data.I[(DataL,DataR)]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.store.TupleDataMap.put_", "link" : "bigglue\/store\/TupleDataMap.html#put_(data:Seq[bigglue.data.I[(DataL,DataR)]]):Unit", "kind" : "def"}, {"member" : "bigglue.store.TupleDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: I[(KeyL, KeyR)], default: I[(DataL, DataR)]): I[(DataL, DataR)]", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/TupleDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: I[(KeyL, KeyR)], data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/TupleDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/TupleDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/TupleDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/TupleDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/TupleDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/TupleDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/TupleDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/TupleDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/TupleDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/TupleDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/TupleDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/TupleDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/TupleDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/TupleDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/TupleDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/TupleDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/TupleDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/TupleDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/TupleDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[I[(DataL, DataR)]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/TupleDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/TupleDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/TupleDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/TupleDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/TupleDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/TupleDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/TupleDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/TupleDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/TupleDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/TupleDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/TupleDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/TupleDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/TupleDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/TupleDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/TupleDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/TupleDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/TupleDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/TupleDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.TupleDataStore", "shortDescription" : "Created by chanceroberts on 1\/15\/18.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/TupleDataStore.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/TupleDataStore.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TupleDataStore[DataL, DataR]) ⇒ Boolean, msg: ⇒ Any): TupleDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataStore.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TupleDataStore[DataL, DataR]) ⇒ Boolean): TupleDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataStore.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TupleDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataStore.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TupleDataStore[DataL, DataR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/TupleDataStore.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TupleDataStore[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/TupleDataStore.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TupleDataStore[DataL, DataR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/TupleDataStore.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.TupleDataStore.size", "link" : "bigglue\/store\/TupleDataStore.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataStore.extract", "link" : "bigglue\/store\/TupleDataStore.html#extract():Seq[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataStore.all", "link" : "bigglue\/store\/TupleDataStore.html#all():Seq[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[I[(DataL, DataR)]]", "member" : "bigglue.store.TupleDataStore.iterator", "link" : "bigglue\/store\/TupleDataStore.html#iterator():Iterator[bigglue.data.I[(DataL,DataR)]]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.store.TupleDataStore.put_", "link" : "bigglue\/store\/TupleDataStore.html#put_(data:Seq[bigglue.data.I[(DataL,DataR)]]):Unit", "kind" : "def"}, {"member" : "bigglue.store.TupleDataStore#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/TupleDataStore.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/TupleDataStore.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/TupleDataStore.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/TupleDataStore.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/TupleDataStore.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/TupleDataStore.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/TupleDataStore.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/TupleDataStore.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/TupleDataStore.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/TupleDataStore.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/TupleDataStore.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/TupleDataStore.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/TupleDataStore.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/TupleDataStore.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/TupleDataStore.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: I[(DataL, DataR)]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/TupleDataStore.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/TupleDataStore.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[I[(DataL, DataR)]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/TupleDataStore.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[I[(DataL, DataR)]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/TupleDataStore.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/TupleDataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/TupleDataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/TupleDataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/TupleDataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/TupleDataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/TupleDataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/TupleDataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/TupleDataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/TupleDataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/TupleDataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/TupleDataStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/TupleDataStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/TupleDataStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/TupleDataStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/TupleDataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/TupleDataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/TupleDataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/TupleDataStore.html", "kind" : "class"}], "bigglue.pipes" : [{"name" : "bigglue.pipes.CompositionPipe", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/CompositionPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/CompositionPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]) ⇒ Boolean, msg: ⇒ Any): CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/CompositionPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]) ⇒ Boolean): CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/CompositionPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/CompositionPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/CompositionPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/CompositionPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CompositionPipe[HeadL, HeadR, InputL, InputR, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/CompositionPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.CompositionPipe.terminate", "link" : "bigglue\/pipes\/CompositionPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.CompositionPipe.end", "link" : "bigglue\/pipes\/CompositionPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "head", "tail" : "(): DataStore[Either[HeadL, HeadR]]", "member" : "bigglue.pipes.CompositionPipe.head", "link" : "bigglue\/pipes\/CompositionPipe.html#head():bigglue.store.DataStore[bigglue.data.Either[HeadL,HeadR]]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.CompositionPipe.persist", "link" : "bigglue\/pipes\/CompositionPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.CompositionPipe.init", "link" : "bigglue\/pipes\/CompositionPipe.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.CompositionPipe.check", "link" : "bigglue\/pipes\/CompositionPipe.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.CompositionPipe#<init>", "error" : "unsupported entity"}, {"label" : "o", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.CompositionPipe.o", "link" : "bigglue\/pipes\/CompositionPipe.html#o:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "p2", "tail" : ": Pipe[HeadR, InputR]", "member" : "bigglue.pipes.CompositionPipe.p2", "link" : "bigglue\/pipes\/CompositionPipe.html#p2:bigglue.pipes.Pipe[HeadR,InputR]", "kind" : "val"}, {"label" : "composer", "tail" : ": PairwiseComposer[InputL, InputR, Output]", "member" : "bigglue.pipes.CompositionPipe.composer", "link" : "bigglue\/pipes\/CompositionPipe.html#composer:bigglue.computations.PairwiseComposer[InputL,InputR,Output]", "kind" : "val"}, {"label" : "p1", "tail" : ": Pipe[HeadL, InputL]", "member" : "bigglue.pipes.CompositionPipe.p1", "link" : "bigglue\/pipes\/CompositionPipe.html#p1:bigglue.pipes.Pipe[HeadL,InputL]", "kind" : "val"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Either[HeadL, HeadR], OHead, End, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/CompositionPipe.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[End, Next]): Pipe[Either[HeadL, HeadR], Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/CompositionPipe.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[End, Mid, Next]): Pipe[Either[HeadL, HeadR], Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/CompositionPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[End, Mid, Next]): Pipe[Either[HeadL, HeadR], Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/CompositionPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/CompositionPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/CompositionPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/CompositionPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/CompositionPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/CompositionPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/CompositionPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/CompositionPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/CompositionPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/CompositionPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/CompositionPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/CompositionPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/CompositionPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/CompositionPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/CompositionPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/CompositionPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/CompositionPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/CompositionPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.Implicits", "shortDescription" : "", "object" : "bigglue\/pipes\/Implicits$.html", "members_object" : [{"label" : "TuplePipe", "tail" : "", "member" : "bigglue.pipes.Implicits.TuplePipe", "link" : "bigglue\/pipes\/Implicits$.html#TuplePipe[DataL<:bigglue.data.Identifiable[DataL],DataR<:bigglue.data.Identifiable[DataR],EndL<:bigglue.data.Identifiable[EndL],EndR<:bigglue.data.Identifiable[EndR]]extendsPipe[bigglue.data.I[(DataL,DataR)],bigglue.data.I[(EndL,EndR)]]", "kind" : "implicit class"}, {"label" : "PairPipes", "tail" : "", "member" : "bigglue.pipes.Implicits.PairPipes", "link" : "bigglue\/pipes\/Implicits$.html#PairPipes[HeadL<:bigglue.data.Identifiable[HeadL],HeadR<:bigglue.data.Identifiable[HeadR],EndL<:bigglue.data.Identifiable[EndL],EndR<:bigglue.data.Identifiable[EndR]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "DataNode", "tail" : "", "member" : "bigglue.pipes.Implicits.DataNode", "link" : "bigglue\/pipes\/Implicits$.html#DataNode[Data<:bigglue.data.Identifiable[Data]]extendsPipe[Data,Data]", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/Implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/Implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/Implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/Implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/Implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/Implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/Implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/Implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/Implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/pipes\/Implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/Implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/pipes\/Implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/pipes\/Implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/Implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/Implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/Implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.pipes.JunctionPipe", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/JunctionPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/JunctionPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JunctionPipe[Head, Mid, End]) ⇒ Boolean, msg: ⇒ Any): JunctionPipe[Head, Mid, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/JunctionPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JunctionPipe[Head, Mid, End]) ⇒ Boolean): JunctionPipe[Head, Mid, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/JunctionPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): JunctionPipe[Head, Mid, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/JunctionPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): JunctionPipe[Head, Mid, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/JunctionPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (JunctionPipe[Head, Mid, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/JunctionPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (JunctionPipe[Head, Mid, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/JunctionPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.JunctionPipe.terminate", "link" : "bigglue\/pipes\/JunctionPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.JunctionPipe.end", "link" : "bigglue\/pipes\/JunctionPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "head", "tail" : "(): DataStore[Head]", "member" : "bigglue.pipes.JunctionPipe.head", "link" : "bigglue\/pipes\/JunctionPipe.html#head():bigglue.store.DataStore[Head]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.JunctionPipe.persist", "link" : "bigglue\/pipes\/JunctionPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.JunctionPipe.init", "link" : "bigglue\/pipes\/JunctionPipe.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.JunctionPipe.check", "link" : "bigglue\/pipes\/JunctionPipe.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.JunctionPipe#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": PartialPipe[Mid, End]", "member" : "bigglue.pipes.JunctionPipe.p2", "link" : "bigglue\/pipes\/JunctionPipe.html#p2:bigglue.pipes.PartialPipe[Mid,End]", "kind" : "val"}, {"label" : "p1", "tail" : ": Pipe[Head, Mid]", "member" : "bigglue.pipes.JunctionPipe.p1", "link" : "bigglue\/pipes\/JunctionPipe.html#p1:bigglue.pipes.Pipe[Head,Mid]", "kind" : "val"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Head, OHead, End, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/JunctionPipe.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[End, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/JunctionPipe.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/JunctionPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/JunctionPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/JunctionPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/JunctionPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/JunctionPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/JunctionPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/JunctionPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/JunctionPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/JunctionPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/JunctionPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/JunctionPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/JunctionPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/JunctionPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/JunctionPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/JunctionPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/JunctionPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/JunctionPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/JunctionPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/JunctionPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.MapperPipe", "shortDescription" : "This is created with the call gitID:--Clone()-->clonedMap (and clonedMap:--CommitExtraction()-->commitInfoMap, but we'll focus on the former) within the example.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/MapperPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/MapperPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapperPipe[Head, Input, Output, End]) ⇒ Boolean, msg: ⇒ Any): MapperPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/MapperPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapperPipe[Head, Input, Output, End]) ⇒ Boolean): MapperPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/MapperPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MapperPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/MapperPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MapperPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/MapperPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MapperPipe[Head, Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/MapperPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MapperPipe[Head, Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/MapperPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.MapperPipe.terminate", "link" : "bigglue\/pipes\/MapperPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.MapperPipe.end", "link" : "bigglue\/pipes\/MapperPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "head", "tail" : "(): DataStore[Head]", "member" : "bigglue.pipes.MapperPipe.head", "link" : "bigglue\/pipes\/MapperPipe.html#head():bigglue.store.DataStore[Head]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.MapperPipe.persist", "link" : "bigglue\/pipes\/MapperPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.MapperPipe.init", "link" : "bigglue\/pipes\/MapperPipe.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.MapperPipe.check", "link" : "bigglue\/pipes\/MapperPipe.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.MapperPipe#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.MapperPipe.p2", "link" : "bigglue\/pipes\/MapperPipe.html#p2:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "mapper", "tail" : ": Mapper[Input, Output]", "member" : "bigglue.pipes.MapperPipe.mapper", "link" : "bigglue\/pipes\/MapperPipe.html#mapper:bigglue.computations.Mapper[Input,Output]", "kind" : "val"}, {"label" : "p1", "tail" : ": Pipe[Head, Input]", "member" : "bigglue.pipes.MapperPipe.p1", "link" : "bigglue\/pipes\/MapperPipe.html#p1:bigglue.pipes.Pipe[Head,Input]", "kind" : "val"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Head, OHead, End, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/MapperPipe.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[End, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/MapperPipe.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/MapperPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/MapperPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/MapperPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/MapperPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/MapperPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/MapperPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/MapperPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/MapperPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/MapperPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/MapperPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/MapperPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/MapperPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/MapperPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/MapperPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/MapperPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/MapperPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/MapperPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/MapperPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/MapperPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.ParallelPartialPipes", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelPartialPipes[Input, LEnd, REnd]) ⇒ Boolean, msg: ⇒ Any): ParallelPartialPipes[Input, LEnd, REnd]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelPartialPipes[Input, LEnd, REnd]) ⇒ Boolean): ParallelPartialPipes[Input, LEnd, REnd]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ParallelPartialPipes[Input, LEnd, REnd]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ParallelPartialPipes[Input, LEnd, REnd]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ParallelPartialPipes[Input, LEnd, REnd], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ParallelPartialPipes[Input, LEnd, REnd], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.ParallelPartialPipes.terminate", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[Either[LEnd, REnd]]", "member" : "bigglue.pipes.ParallelPartialPipes.end", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#end():bigglue.store.DataStore[bigglue.data.Either[LEnd,REnd]]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.ParallelPartialPipes.persist", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.ParallelPartialPipes.init", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#init(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.ParallelPartialPipes.check", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#check(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.ParallelPartialPipes#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": PartialPipe[Input, REnd]", "member" : "bigglue.pipes.ParallelPartialPipes.p2", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#p2:bigglue.pipes.PartialPipe[Input,REnd]", "kind" : "val"}, {"label" : "p1", "tail" : ": PartialPipe[Input, LEnd]", "member" : "bigglue.pipes.ParallelPartialPipes.p1", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#p1:bigglue.pipes.PartialPipe[Input,LEnd]", "kind" : "val"}, {"label" : ":-+", "tail" : "(other: PartialReducerPipe[Either[LEnd, REnd], Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:-+", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(other: PartialMapperPipe[Either[LEnd, REnd], Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:--", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : "~", "tail" : "(other: PartialPipe[Input, Other]): PartialPipe[Input, Either[Either[LEnd, REnd], Other]]", "member" : "bigglue.pipes.PartialPipe.~", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#~[Other<:bigglue.data.Identifiable[Other]](other:bigglue.pipes.PartialPipe[Input,Other]):bigglue.pipes.PartialPipe[Input,bigglue.data.Either[End,Other]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/ParallelPartialPipes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/ParallelPartialPipes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/ParallelPartialPipes.html", "kind" : "case class"}, {"name" : "bigglue.pipes.PartialComposerPipe", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/PartialComposerPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/PartialComposerPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialComposerPipe[InputL, InputR, Output, End]) ⇒ Boolean, msg: ⇒ Any): PartialComposerPipe[InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialComposerPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialComposerPipe[InputL, InputR, Output, End]) ⇒ Boolean): PartialComposerPipe[InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialComposerPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PartialComposerPipe[InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialComposerPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PartialComposerPipe[InputL, InputR, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialComposerPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PartialComposerPipe[InputL, InputR, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/PartialComposerPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PartialComposerPipe[InputL, InputR, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/PartialComposerPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.pipes.PartialComposerPipe#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.PartialComposerPipe.p", "link" : "bigglue\/pipes\/PartialComposerPipe.html#p:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "composer", "tail" : ": PairwiseComposer[InputL, InputR, Output]", "member" : "bigglue.pipes.PartialComposerPipe.composer", "link" : "bigglue\/pipes\/PartialComposerPipe.html#composer:bigglue.computations.PairwiseComposer[InputL,InputR,Output]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/PartialComposerPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/PartialComposerPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/PartialComposerPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/PartialComposerPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/PartialComposerPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/PartialComposerPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/PartialComposerPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialComposerPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialComposerPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialComposerPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/PartialComposerPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/PartialComposerPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/PartialComposerPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/PartialComposerPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/PartialComposerPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/PartialComposerPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/PartialComposerPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.PartialMapperPipe", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/PartialMapperPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/PartialMapperPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialMapperPipe[Input, Output, End]) ⇒ Boolean, msg: ⇒ Any): PartialMapperPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialMapperPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialMapperPipe[Input, Output, End]) ⇒ Boolean): PartialMapperPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialMapperPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PartialMapperPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialMapperPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PartialMapperPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialMapperPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PartialMapperPipe[Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/PartialMapperPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PartialMapperPipe[Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/PartialMapperPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialMapperPipe.terminate", "link" : "bigglue\/pipes\/PartialMapperPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.PartialMapperPipe.end", "link" : "bigglue\/pipes\/PartialMapperPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialMapperPipe.persist", "link" : "bigglue\/pipes\/PartialMapperPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialMapperPipe.init", "link" : "bigglue\/pipes\/PartialMapperPipe.html#init(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialMapperPipe.check", "link" : "bigglue\/pipes\/PartialMapperPipe.html#check(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.PartialMapperPipe#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.PartialMapperPipe.p", "link" : "bigglue\/pipes\/PartialMapperPipe.html#p:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "mapper", "tail" : ": Mapper[Input, Output]", "member" : "bigglue.pipes.PartialMapperPipe.mapper", "link" : "bigglue\/pipes\/PartialMapperPipe.html#mapper:bigglue.computations.Mapper[Input,Output]", "kind" : "val"}, {"label" : ":-+", "tail" : "(other: PartialReducerPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:-+", "link" : "bigglue\/pipes\/PartialMapperPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(other: PartialMapperPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:--", "link" : "bigglue\/pipes\/PartialMapperPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : "~", "tail" : "(other: PartialPipe[Input, Other]): PartialPipe[Input, Either[End, Other]]", "member" : "bigglue.pipes.PartialPipe.~", "link" : "bigglue\/pipes\/PartialMapperPipe.html#~[Other<:bigglue.data.Identifiable[Other]](other:bigglue.pipes.PartialPipe[Input,Other]):bigglue.pipes.PartialPipe[Input,bigglue.data.Either[End,Other]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/PartialMapperPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/PartialMapperPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/PartialMapperPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/PartialMapperPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/PartialMapperPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/PartialMapperPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/PartialMapperPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialMapperPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialMapperPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialMapperPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/PartialMapperPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/PartialMapperPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/PartialMapperPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/PartialMapperPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/PartialMapperPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/PartialMapperPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/PartialMapperPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.PartialPipe", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/PartialPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/PartialPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialPipe[Input, End]) ⇒ Boolean, msg: ⇒ Any): PartialPipe[Input, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialPipe[Input, End]) ⇒ Boolean): PartialPipe[Input, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PartialPipe[Input, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PartialPipe[Input, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PartialPipe[Input, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/PartialPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PartialPipe[Input, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/PartialPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : ":-+", "tail" : "(other: PartialReducerPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:-+", "link" : "bigglue\/pipes\/PartialPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(other: PartialMapperPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:--", "link" : "bigglue\/pipes\/PartialPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : "~", "tail" : "(other: PartialPipe[Input, Other]): PartialPipe[Input, Either[End, Other]]", "member" : "bigglue.pipes.PartialPipe.~", "link" : "bigglue\/pipes\/PartialPipe.html#~[Other<:bigglue.data.Identifiable[Other]](other:bigglue.pipes.PartialPipe[Input,Other]):bigglue.pipes.PartialPipe[Input,bigglue.data.Either[End,Other]]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialPipe.persist", "link" : "bigglue\/pipes\/PartialPipe.html#persist():Unit", "kind" : "def"}, {"member" : "bigglue.pipes.PartialPipe#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/PartialPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/PartialPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/PartialPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/PartialPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/PartialPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/PartialPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/PartialPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/PartialPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/PartialPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/pipes\/PartialPipe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/PartialPipe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/pipes\/PartialPipe.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/pipes\/PartialPipe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/PartialPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/PartialPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/PartialPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialPipe.terminate", "link" : "bigglue\/pipes\/PartialPipe.html#terminate():Unit", "kind" : "abstract def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.PartialPipe.end", "link" : "bigglue\/pipes\/PartialPipe.html#end():bigglue.store.DataStore[End]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialPipe.init", "link" : "bigglue\/pipes\/PartialPipe.html#init(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "abstract def"}, {"label" : "check", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialPipe.check", "link" : "bigglue\/pipes\/PartialPipe.html#check(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/pipes\/PartialPipe.html", "kind" : "class"}, {"name" : "bigglue.pipes.PartialReducerPipe", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/PartialReducerPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/PartialReducerPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialReducerPipe[Input, Output, End]) ⇒ Boolean, msg: ⇒ Any): PartialReducerPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialReducerPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PartialReducerPipe[Input, Output, End]) ⇒ Boolean): PartialReducerPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialReducerPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PartialReducerPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialReducerPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PartialReducerPipe[Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/PartialReducerPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PartialReducerPipe[Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/PartialReducerPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PartialReducerPipe[Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/PartialReducerPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialReducerPipe.terminate", "link" : "bigglue\/pipes\/PartialReducerPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.PartialReducerPipe.end", "link" : "bigglue\/pipes\/PartialReducerPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.PartialReducerPipe.persist", "link" : "bigglue\/pipes\/PartialReducerPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialReducerPipe.init", "link" : "bigglue\/pipes\/PartialReducerPipe.html#init(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.PartialReducerPipe.check", "link" : "bigglue\/pipes\/PartialReducerPipe.html#check(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.PartialReducerPipe#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.PartialReducerPipe.p", "link" : "bigglue\/pipes\/PartialReducerPipe.html#p:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "reducer", "tail" : ": Reducer[Input, Output]", "member" : "bigglue.pipes.PartialReducerPipe.reducer", "link" : "bigglue\/pipes\/PartialReducerPipe.html#reducer:bigglue.computations.Reducer[Input,Output]", "kind" : "val"}, {"label" : ":-+", "tail" : "(other: PartialReducerPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:-+", "link" : "bigglue\/pipes\/PartialReducerPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(other: PartialMapperPipe[End, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:--", "link" : "bigglue\/pipes\/PartialReducerPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : "~", "tail" : "(other: PartialPipe[Input, Other]): PartialPipe[Input, Either[End, Other]]", "member" : "bigglue.pipes.PartialPipe.~", "link" : "bigglue\/pipes\/PartialReducerPipe.html#~[Other<:bigglue.data.Identifiable[Other]](other:bigglue.pipes.PartialPipe[Input,Other]):bigglue.pipes.PartialPipe[Input,bigglue.data.Either[End,Other]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/PartialReducerPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/PartialReducerPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/PartialReducerPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/PartialReducerPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/PartialReducerPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/PartialReducerPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/PartialReducerPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialReducerPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialReducerPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/PartialReducerPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/PartialReducerPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/PartialReducerPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/PartialReducerPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/PartialReducerPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/PartialReducerPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/PartialReducerPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/PartialReducerPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.Pipe", "shortDescription" : "This is the superclass to MapperPipe and ReducerPipe.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/Pipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/Pipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pipe[Head, End]) ⇒ Boolean, msg: ⇒ Any): Pipe[Head, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/Pipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pipe[Head, End]) ⇒ Boolean): Pipe[Head, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/Pipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Pipe[Head, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/Pipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Pipe[Head, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/Pipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Pipe[Head, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/Pipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Pipe[Head, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/Pipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Head, OHead, End, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/Pipe.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[End, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/Pipe.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/Pipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/Pipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.Pipe.persist", "link" : "bigglue\/pipes\/Pipe.html#persist():Unit", "kind" : "def"}, {"member" : "bigglue.pipes.Pipe#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/Pipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/Pipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/Pipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/Pipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/Pipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/Pipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/Pipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Pipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Pipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/Pipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/Pipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/Pipe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/pipes\/Pipe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/Pipe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/pipes\/Pipe.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/pipes\/Pipe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/Pipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/Pipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/Pipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.Pipe.terminate", "link" : "bigglue\/pipes\/Pipe.html#terminate():Unit", "kind" : "abstract def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.Pipe.end", "link" : "bigglue\/pipes\/Pipe.html#end():bigglue.store.DataStore[End]", "kind" : "abstract def"}, {"label" : "head", "tail" : "(): DataStore[Head]", "member" : "bigglue.pipes.Pipe.head", "link" : "bigglue\/pipes\/Pipe.html#head():bigglue.store.DataStore[Head]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.Pipe.init", "link" : "bigglue\/pipes\/Pipe.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "abstract def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.Pipe.check", "link" : "bigglue\/pipes\/Pipe.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "abstract def"}], "class" : "bigglue\/pipes\/Pipe.html", "kind" : "class"}, {"name" : "bigglue.pipes.ReducerPipe", "shortDescription" : "In the example, this is created with the call commitInfoMap:-+FindAuthor()+->authorMap within theval pipe = gitID:--Clone()-->clonedMap:--CommitExtraction()-->commitInfoMap:-+FindAuthor()+->authorMap line.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/ReducerPipe.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/ReducerPipe.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReducerPipe[Head, Input, Output, End]) ⇒ Boolean, msg: ⇒ Any): ReducerPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ReducerPipe.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReducerPipe[Head, Input, Output, End]) ⇒ Boolean): ReducerPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ReducerPipe.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ReducerPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ReducerPipe.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ReducerPipe[Head, Input, Output, End]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/ReducerPipe.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ReducerPipe[Head, Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/ReducerPipe.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ReducerPipe[Head, Input, Output, End], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/ReducerPipe.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.ReducerPipe.terminate", "link" : "bigglue\/pipes\/ReducerPipe.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[End]", "member" : "bigglue.pipes.ReducerPipe.end", "link" : "bigglue\/pipes\/ReducerPipe.html#end():bigglue.store.DataStore[End]", "kind" : "def"}, {"label" : "head", "tail" : "(): DataStore[Head]", "member" : "bigglue.pipes.ReducerPipe.head", "link" : "bigglue\/pipes\/ReducerPipe.html#head():bigglue.store.DataStore[Head]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.ReducerPipe.persist", "link" : "bigglue\/pipes\/ReducerPipe.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.ReducerPipe.init", "link" : "bigglue\/pipes\/ReducerPipe.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.ReducerPipe.check", "link" : "bigglue\/pipes\/ReducerPipe.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.ReducerPipe#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": Pipe[Output, End]", "member" : "bigglue.pipes.ReducerPipe.p2", "link" : "bigglue\/pipes\/ReducerPipe.html#p2:bigglue.pipes.Pipe[Output,End]", "kind" : "val"}, {"label" : "reducer", "tail" : ": Reducer[Input, Output]", "member" : "bigglue.pipes.ReducerPipe.reducer", "link" : "bigglue\/pipes\/ReducerPipe.html#reducer:bigglue.computations.Reducer[Input,Output]", "kind" : "val"}, {"label" : "p1", "tail" : ": Pipe[Head, Input]", "member" : "bigglue.pipes.ReducerPipe.p1", "link" : "bigglue\/pipes\/ReducerPipe.html#p1:bigglue.pipes.Pipe[Head,Input]", "kind" : "val"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Head, OHead, End, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/ReducerPipe.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[End, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/ReducerPipe.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/ReducerPipe.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[End, Mid, Next]): Pipe[Head, Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/ReducerPipe.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/ReducerPipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/ReducerPipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/ReducerPipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/ReducerPipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/ReducerPipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/ReducerPipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/ReducerPipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ReducerPipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ReducerPipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/ReducerPipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/ReducerPipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/ReducerPipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/ReducerPipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/ReducerPipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/ReducerPipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/ReducerPipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/ReducerPipe.html", "kind" : "case class"}, {"name" : "bigglue.pipes.SequencedPartialPipes", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequencedPartialPipes[Input, Mid, Output]) ⇒ Boolean, msg: ⇒ Any): SequencedPartialPipes[Input, Mid, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequencedPartialPipes[Input, Mid, Output]) ⇒ Boolean): SequencedPartialPipes[Input, Mid, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SequencedPartialPipes[Input, Mid, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SequencedPartialPipes[Input, Mid, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SequencedPartialPipes[Input, Mid, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SequencedPartialPipes[Input, Mid, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.SequencedPartialPipes.terminate", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[Output]", "member" : "bigglue.pipes.SequencedPartialPipes.end", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#end():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.SequencedPartialPipes.persist", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.SequencedPartialPipes.init", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#init(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, input: DataStore[Input]): Unit", "member" : "bigglue.pipes.SequencedPartialPipes.check", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#check(conf:bigglue.configurations.PipeConfig,input:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"member" : "bigglue.pipes.SequencedPartialPipes#<init>", "error" : "unsupported entity"}, {"label" : "po", "tail" : ": PartialPipe[Mid, Output]", "member" : "bigglue.pipes.SequencedPartialPipes.po", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#po:bigglue.pipes.PartialPipe[Mid,Output]", "kind" : "val"}, {"label" : "pi", "tail" : ": PartialPipe[Input, Mid]", "member" : "bigglue.pipes.SequencedPartialPipes.pi", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#pi:bigglue.pipes.PartialPipe[Input,Mid]", "kind" : "val"}, {"label" : ":-+", "tail" : "(other: PartialReducerPipe[Output, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:-+", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(other: PartialMapperPipe[Output, Mid, Next]): PartialPipe[Input, Next]", "member" : "bigglue.pipes.PartialPipe.:--", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](other:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.PartialPipe[Input,Next]", "kind" : "def"}, {"label" : "~", "tail" : "(other: PartialPipe[Input, Other]): PartialPipe[Input, Either[Output, Other]]", "member" : "bigglue.pipes.PartialPipe.~", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#~[Other<:bigglue.data.Identifiable[Other]](other:bigglue.pipes.PartialPipe[Input,Other]):bigglue.pipes.PartialPipe[Input,bigglue.data.Either[End,Other]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/SequencedPartialPipes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/SequencedPartialPipes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/SequencedPartialPipes.html", "kind" : "case class"}, {"name" : "bigglue.pipes.St", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/pipes\/St.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/pipes\/St.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (St[Data]) ⇒ Boolean, msg: ⇒ Any): St[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/St.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (St[Data]) ⇒ Boolean): St[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/St.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): St[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/St.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): St[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/pipes\/St.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (St[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/pipes\/St.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (St[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/pipes\/St.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.pipes.St.terminate", "link" : "bigglue\/pipes\/St.html#terminate():Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): DataStore[Data]", "member" : "bigglue.pipes.St.end", "link" : "bigglue\/pipes\/St.html#end():bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "head", "tail" : "(): DataStore[Data]", "member" : "bigglue.pipes.St.head", "link" : "bigglue\/pipes\/St.html#head():bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.St.init", "link" : "bigglue\/pipes\/St.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.pipes.St.check", "link" : "bigglue\/pipes\/St.html#check(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.pipes.St.toString", "link" : "bigglue\/pipes\/St.html#toString():String", "kind" : "def"}, {"member" : "bigglue.pipes.St#<init>", "error" : "unsupported entity"}, {"label" : "store", "tail" : ": DataStore[Data]", "member" : "bigglue.pipes.St.store", "link" : "bigglue\/pipes\/St.html#store:bigglue.store.DataStore[Data]", "kind" : "val"}, {"label" : "||", "tail" : "(o: Pipe[OHead, OEnd]): PairPipes[Data, OHead, Data, OEnd]", "member" : "bigglue.pipes.Pipe.||", "link" : "bigglue\/pipes\/St.html#||[OHead<:bigglue.data.Identifiable[OHead],OEnd<:bigglue.data.Identifiable[OEnd]](o:bigglue.pipes.Pipe[OHead,OEnd]):bigglue.pipes.Implicits.PairPipes[Head,OHead,End,OEnd]", "kind" : "def"}, {"label" : ":<", "tail" : "(parPipes: PartialPipe[Data, Next]): Pipe[Data, Next]", "member" : "bigglue.pipes.Pipe.:<", "link" : "bigglue\/pipes\/St.html#:<[Next<:bigglue.data.Identifiable[Next]](parPipes:bigglue.pipes.PartialPipe[End,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":-+", "tail" : "(headReducer: PartialReducerPipe[Data, Mid, Next]): Pipe[Data, Next]", "member" : "bigglue.pipes.Pipe.:-+", "link" : "bigglue\/pipes\/St.html#:-+[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headReducer:bigglue.pipes.PartialReducerPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : ":--", "tail" : "(headMapper: PartialMapperPipe[Data, Mid, Next]): Pipe[Data, Next]", "member" : "bigglue.pipes.Pipe.:--", "link" : "bigglue\/pipes\/St.html#:--[Next<:bigglue.data.Identifiable[Next],Mid<:bigglue.data.Identifiable[Mid]](headMapper:bigglue.pipes.PartialMapperPipe[End,Mid,Next]):bigglue.pipes.Pipe[Head,Next]", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.pipes.Pipe.persist", "link" : "bigglue\/pipes\/St.html#persist():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/pipes\/St.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/pipes\/St.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/pipes\/St.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/pipes\/St.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/pipes\/St.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/pipes\/St.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/pipes\/St.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/St.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/St.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/pipes\/St.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/pipes\/St.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/pipes\/St.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/pipes\/St.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/pipes\/St.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/pipes\/St.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/pipes\/St.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/pipes\/St.html", "kind" : "case class"}], "bigglue.store.instances.kafka" : [{"name" : "bigglue.store.instances.kafka.KafkaConfig", "shortDescription" : "Created by edmundlam on 8\/20\/17.", "object" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html", "members_object" : [{"label" : "resolveKafkaConfig", "tail" : "(pipeLabel: String, config: PipeConfig): KafkaConfig", "member" : "bigglue.store.instances.kafka.KafkaConfig.resolveKafkaConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#resolveKafkaConfig(pipeLabel:String,config:bigglue.configurations.PipeConfig):bigglue.store.instances.kafka.KafkaConfig", "kind" : "def"}, {"label" : "defaultStreamConfig", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.defaultStreamConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#defaultStreamConfig():java.util.Properties", "kind" : "def"}, {"label" : "defaultProducerConfig", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.defaultProducerConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#defaultProducerConfig():java.util.Properties", "kind" : "def"}, {"label" : "defaultConsumerConfig", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.defaultConsumerConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#defaultConsumerConfig():java.util.Properties", "kind" : "def"}, {"label" : "STREAM", "tail" : ": String", "member" : "bigglue.store.instances.kafka.KafkaConfig.STREAM", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#STREAM:String", "kind" : "final val"}, {"label" : "PRODUCER", "tail" : ": String", "member" : "bigglue.store.instances.kafka.KafkaConfig.PRODUCER", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#PRODUCER:String", "kind" : "final val"}, {"label" : "CONSUMER", "tail" : ": String", "member" : "bigglue.store.instances.kafka.KafkaConfig.CONSUMER", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#CONSUMER:String", "kind" : "final val"}, {"label" : "KAFKA", "tail" : ": String", "member" : "bigglue.store.instances.kafka.KafkaConfig.KAFKA", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#KAFKA:String", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaConfig) ⇒ Boolean, msg: ⇒ Any): KafkaConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaConfig) ⇒ Boolean): KafkaConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaConfig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaConfig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.store.instances.kafka.KafkaConfig#<init>", "error" : "unsupported entity"}, {"label" : "streamProps", "tail" : ": Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.streamProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#streamProps:java.util.Properties", "kind" : "val"}, {"label" : "producerProps", "tail" : ": Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.producerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#producerProps:java.util.Properties", "kind" : "val"}, {"label" : "consumerProps", "tail" : ": Properties", "member" : "bigglue.store.instances.kafka.KafkaConfig.consumerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#consumerProps:java.util.Properties", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/store\/instances\/kafka\/KafkaConfig.html", "kind" : "object"}, {"name" : "bigglue.store.instances.kafka.KafkaDataMap", "shortDescription" : "Created by edmundlam on 8\/23\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaDataMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): KafkaDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaDataMap[Key, Data]) ⇒ Boolean): KafkaDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): Option[(Key, Data)]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.dequeue", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#dequeue():Option[(Key,Data)]", "kind" : "def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.instances.kafka.KafkaDataMap.pollForMore", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.registerConnector", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.iterator", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.remove", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#remove(key:Key):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.remove", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#remove(keys:Seq[Key]):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key): Boolean", "member" : "bigglue.store.instances.kafka.KafkaDataMap.contains", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#contains(key:Key):Boolean", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.extract", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.all", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#all():Seq[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.kafka.KafkaDataMap.size", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#size():Int", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Option[Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.get", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#get(key:Key):Option[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.put_", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#put_(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.put_", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.instances.kafka.KafkaDataMap.init", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "topic", "tail" : "(topicName: String): KafkaDataMap[Key, Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.topic", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#topic(topicName:String):bigglue.store.instances.kafka.KafkaDataMap[Key,Data]", "kind" : "def"}, {"label" : "getMap", "tail" : "(): DataMap[Key, Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getMap", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getMap():bigglue.store.DataMap[Key,Data]", "kind" : "def"}, {"label" : "getProducerProps", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getProducerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getProducerProps:java.util.Properties", "kind" : "def"}, {"label" : "getConsumerProps", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getConsumerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getConsumerProps:java.util.Properties", "kind" : "def"}, {"label" : "getTopic", "tail" : "(): String", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getTopic", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getTopic:String", "kind" : "def"}, {"label" : "getProducer", "tail" : "(): KafkaProducer[Key, String]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getProducer", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getProducer:org.apache.kafka.clients.producer.KafkaProducer[Key,String]", "kind" : "def"}, {"label" : "getStream", "tail" : "(): KafkaStream[Key, Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.getStream", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getStream:bigglue.store.instances.kafka.KafkaStream[Key,Data]", "kind" : "def"}, {"label" : "mapOpt", "tail" : ": Option[DataMap[Key, Data]]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.mapOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#mapOpt:Option[bigglue.store.DataMap[Key,Data]]", "kind" : "var"}, {"label" : "prodPropsOpt", "tail" : ": Option[Properties]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.prodPropsOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#prodPropsOpt:Option[java.util.Properties]", "kind" : "var"}, {"label" : "consPropsOpt", "tail" : ": Option[Properties]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.consPropsOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#consPropsOpt:Option[java.util.Properties]", "kind" : "var"}, {"label" : "topicOpt", "tail" : ": Option[String]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.topicOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#topicOpt:Option[String]", "kind" : "var"}, {"label" : "producerOpt", "tail" : ": Option[KafkaProducer[Key, String]]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.producerOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#producerOpt:Option[org.apache.kafka.clients.producer.KafkaProducer[Key,String]]", "kind" : "var"}, {"label" : "streamOpt", "tail" : ": Option[KafkaStream[Key, Data]]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.streamOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#streamOpt:Option[bigglue.store.instances.kafka.KafkaStream[Key,Data]]", "kind" : "var"}, {"member" : "bigglue.store.instances.kafka.KafkaDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Key, default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "serializer", "tail" : ": BasicSerializer[Data]", "member" : "bigglue.store.instances.kafka.KafkaDataMap.serializer", "link" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html#serializer:bigglue.data.serializers.BasicSerializer[Data]", "kind" : "abstract val"}], "class" : "bigglue\/store\/instances\/kafka\/KafkaDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.kafka.KafkaQueue", "shortDescription" : "Created by edmundlam on 8\/19\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaQueue[Data]) ⇒ Boolean, msg: ⇒ Any): KafkaQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaQueue[Data]) ⇒ Boolean): KafkaQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.instances.kafka.KafkaQueue.pollForMore", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.store.instances.kafka.KafkaQueue.registerConnector", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.kafka.KafkaQueue.size", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.extract", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.all", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#all():Seq[Data]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.iterator", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): Option[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.dequeue", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#dequeue():Option[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.kafka.KafkaQueue.put_", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.instances.kafka.KafkaQueue.init", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "topic", "tail" : "(topicName: String): KafkaQueue[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.topic", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#topic(topicName:String):bigglue.store.instances.kafka.KafkaQueue[Data]", "kind" : "def"}, {"label" : "getProducerProps", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaQueue.getProducerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getProducerProps:java.util.Properties", "kind" : "def"}, {"label" : "getConsumerProps", "tail" : "(): Properties", "member" : "bigglue.store.instances.kafka.KafkaQueue.getConsumerProps", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getConsumerProps:java.util.Properties", "kind" : "def"}, {"label" : "getTopic", "tail" : "(): String", "member" : "bigglue.store.instances.kafka.KafkaQueue.getTopic", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getTopic:String", "kind" : "def"}, {"label" : "getProducer", "tail" : "(): KafkaProducer[String, String]", "member" : "bigglue.store.instances.kafka.KafkaQueue.getProducer", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getProducer:org.apache.kafka.clients.producer.KafkaProducer[String,String]", "kind" : "def"}, {"label" : "getStream", "tail" : "(): KafkaStream[String, Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.getStream", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getStream:bigglue.store.instances.kafka.KafkaStream[String,Data]", "kind" : "def"}, {"label" : "prodPropsOpt", "tail" : ": Option[Properties]", "member" : "bigglue.store.instances.kafka.KafkaQueue.prodPropsOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#prodPropsOpt:Option[java.util.Properties]", "kind" : "var"}, {"label" : "consPropsOpt", "tail" : ": Option[Properties]", "member" : "bigglue.store.instances.kafka.KafkaQueue.consPropsOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#consPropsOpt:Option[java.util.Properties]", "kind" : "var"}, {"label" : "topicOpt", "tail" : ": Option[String]", "member" : "bigglue.store.instances.kafka.KafkaQueue.topicOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#topicOpt:Option[String]", "kind" : "var"}, {"label" : "producerOpt", "tail" : ": Option[KafkaProducer[String, String]]", "member" : "bigglue.store.instances.kafka.KafkaQueue.producerOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#producerOpt:Option[org.apache.kafka.clients.producer.KafkaProducer[String,String]]", "kind" : "var"}, {"label" : "streamOpt", "tail" : ": Option[KafkaStream[String, Data]]", "member" : "bigglue.store.instances.kafka.KafkaQueue.streamOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#streamOpt:Option[bigglue.store.instances.kafka.KafkaStream[String,Data]]", "kind" : "var"}, {"member" : "bigglue.store.instances.kafka.KafkaQueue#<init>", "error" : "unsupported entity"}, {"label" : "enqueue", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#enqueue(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataQueue.enqueue", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#enqueue(data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "serializer", "tail" : ": BasicSerializer[Data]", "member" : "bigglue.store.instances.kafka.KafkaQueue.serializer", "link" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html#serializer:bigglue.data.serializers.BasicSerializer[Data]", "kind" : "abstract val"}], "class" : "bigglue\/store\/instances\/kafka\/KafkaQueue.html", "kind" : "class"}, {"name" : "bigglue.store.instances.kafka.KafkaStream", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStream[Key, Data]) ⇒ Boolean, msg: ⇒ Any): KafkaStream[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStream[Key, Data]) ⇒ Boolean): KafkaStream[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaStream[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaStream[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaStream[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaStream[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "close", "tail" : "(): Unit", "member" : "bigglue.store.instances.kafka.KafkaStream.close", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#close():Unit", "kind" : "def"}, {"label" : "pollForMore", "tail" : "(tries: Int, timeout: Int): Boolean", "member" : "bigglue.store.instances.kafka.KafkaStream.pollForMore", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#pollForMore(tries:Int,timeout:Int):Boolean", "kind" : "def"}, {"label" : "consumer", "tail" : ": KafkaConsumer[Key, String]", "member" : "bigglue.store.instances.kafka.KafkaStream.consumer", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#consumer:org.apache.kafka.clients.consumer.KafkaConsumer[Key,String]", "kind" : "val"}, {"member" : "bigglue.store.instances.kafka.KafkaStream#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : "(): (Key, Data)", "member" : "bigglue.store.DataStream.next", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#next():StreamData", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.DataStream.hasNext", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#hasNext:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.DataStream.size", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#size():Int", "kind" : "def"}, {"label" : "getBuffer", "tail" : "(): DataQueue[(Key, Data)]", "member" : "bigglue.store.DataStream.getBuffer", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#getBuffer():bigglue.store.DataQueue[StreamData]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStream.init", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "bufferOpt", "tail" : ": Option[DataQueue[(Key, Data)]]", "member" : "bigglue.store.DataStream.bufferOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#bufferOpt:Option[bigglue.store.DataQueue[StreamData]]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(Key, Data)]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(Key, Data)]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[(Key, Data)], Iterator[(Key, Data)])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[(Key, Data)]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: ((Key, Data)) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Option[(Key, Data)]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((Key, Data)) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[((Key, Data), Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[((Key, Data), B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((Key, Data)) ⇒ Boolean): (Iterator[(Key, Data)], Iterator[(Key, Data)])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((Key, Data)) ⇒ Boolean): (Iterator[(Key, Data)], Iterator[(Key, Data)])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((Key, Data), B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (Key, Data)) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Key, Data), B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: ((Key, Data), B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((Key, Data)) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((Key, Data)) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[(Key, Data)]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(Key, Data), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (Key, Data), Col[(Key, Data)]]): Col[(Key, Data)]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(Key, Data)]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(Key, Data)]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(Key, Data)]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(Key, Data)]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(Key, Data)]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((Key, Data)) ⇒ B)(cmp: Ordering[B]): (Key, Data)", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((Key, Data)) ⇒ B)(cmp: Ordering[B]): (Key, Data)", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (Key, Data)", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (Key, Data)", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (Key, Data)) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((Key, Data), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (Key, Data)) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((Key, Data), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (Key, Data)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((Key, Data), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (Key, Data)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((Key, Data), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (Key, Data)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(Key, Data), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((Key, Data)) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(Key, Data)]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/kafka\/KafkaStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/kafka\/KafkaStream.html", "kind" : "class"}], "bigglue.platforms.instances.kafkastreams" : [{"name" : "bigglue.platforms.instances.kafkastreams.KafkaStreamMapperPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStreamMapperPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): KafkaStreamMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStreamMapperPlatform[Input, Output]) ⇒ Boolean): KafkaStreamMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaStreamMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaStreamMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaStreamMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaStreamMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "start", "tail" : "(computation: Computation): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamMapperPlatform.start", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#start(computation:bigglue.computations.Computation):Unit", "kind" : "def"}, {"member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamMapperPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.terminate", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.wake", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.init", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.check", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "getStream", "tail" : "(): KafkaStreams", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getStream", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getStream:org.apache.kafka.streams.KafkaStreams", "kind" : "def"}, {"label" : "getStreamBuilder", "tail" : "(): KStreamBuilder", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getStreamBuilder", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getStreamBuilder:org.apache.kafka.streams.kstream.KStreamBuilder", "kind" : "def"}, {"label" : "getOutputTopic", "tail" : "(): String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getOutputTopic", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getOutputTopic:String", "kind" : "def"}, {"label" : "getInputTopic", "tail" : "(): String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getInputTopic", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getInputTopic:String", "kind" : "def"}, {"label" : "streamOpt", "tail" : ": Option[KafkaStreams]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.streamOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#streamOpt:Option[org.apache.kafka.streams.KafkaStreams]", "kind" : "var"}, {"label" : "streamBuilderOpt", "tail" : ": Option[KStreamBuilder]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.streamBuilderOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#streamBuilderOpt:Option[org.apache.kafka.streams.kstream.KStreamBuilder]", "kind" : "var"}, {"label" : "outputTopicOpt", "tail" : ": Option[String]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.outputTopicOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#outputTopicOpt:Option[String]", "kind" : "var"}, {"label" : "inputTopicOpt", "tail" : ": Option[String]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.inputTopicOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#inputTopicOpt:Option[String]", "kind" : "var"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamMapperPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform", "shortDescription" : "Created by edmundlam on 9\/6\/17.", "object" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStreamPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): KafkaStreamPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaStreamPlatform[Input, Output]) ⇒ Boolean): KafkaStreamPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaStreamPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaStreamPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaStreamPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaStreamPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.terminate", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.wake", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.init", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.check", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "getStream", "tail" : "(): KafkaStreams", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getStream", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getStream:org.apache.kafka.streams.KafkaStreams", "kind" : "def"}, {"label" : "getStreamBuilder", "tail" : "(): KStreamBuilder", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getStreamBuilder", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getStreamBuilder:org.apache.kafka.streams.kstream.KStreamBuilder", "kind" : "def"}, {"label" : "getOutputTopic", "tail" : "(): String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getOutputTopic", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getOutputTopic:String", "kind" : "def"}, {"label" : "getInputTopic", "tail" : "(): String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.getInputTopic", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getInputTopic:String", "kind" : "def"}, {"label" : "streamOpt", "tail" : ": Option[KafkaStreams]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.streamOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#streamOpt:Option[org.apache.kafka.streams.KafkaStreams]", "kind" : "var"}, {"label" : "streamBuilderOpt", "tail" : ": Option[KStreamBuilder]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.streamBuilderOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#streamBuilderOpt:Option[org.apache.kafka.streams.kstream.KStreamBuilder]", "kind" : "var"}, {"label" : "outputTopicOpt", "tail" : ": Option[String]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.outputTopicOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#outputTopicOpt:Option[String]", "kind" : "var"}, {"label" : "inputTopicOpt", "tail" : ": Option[String]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.inputTopicOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#inputTopicOpt:Option[String]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform#<init>", "error" : "unsupported entity"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "start", "tail" : "(computation: Computation): Unit", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.start", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html#start(computation:bigglue.computations.Computation):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "extractKafkaTopic", "tail" : "(store: DataStore[Data]): String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.extractKafkaTopic", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#extractKafkaTopic[Data<:bigglue.data.Identifiable[Data]](store:bigglue.store.DataStore[Data]):String", "kind" : "def"}, {"label" : "NAME", "tail" : ": String", "member" : "bigglue.platforms.instances.kafkastreams.KafkaStreamPlatform.NAME", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#NAME:String", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaStreamPlatform.html", "kind" : "object"}, {"name" : "bigglue.platforms.instances.kafkastreams.KafkaValueMapper", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaValueMapper[Input, Output]) ⇒ Boolean, msg: ⇒ Any): KafkaValueMapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KafkaValueMapper[Input, Output]) ⇒ Boolean): KafkaValueMapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KafkaValueMapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KafkaValueMapper[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KafkaValueMapper[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KafkaValueMapper[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String): List[String]", "member" : "bigglue.platforms.instances.kafkastreams.KafkaValueMapper.apply", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#apply(value:String):java.util.List[String]", "kind" : "def"}, {"member" : "bigglue.platforms.instances.kafkastreams.KafkaValueMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/kafkastreams\/KafkaValueMapper.html", "kind" : "class"}], "bigglue.data.serializers" : [{"name" : "bigglue.data.serializers.BasicSerializer", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BasicSerializer[A]) ⇒ Boolean, msg: ⇒ Any): BasicSerializer[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BasicSerializer[A]) ⇒ Boolean): BasicSerializer[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BasicSerializer[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BasicSerializer[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BasicSerializer[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BasicSerializer[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): A", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: A): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/serializers\/BasicSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deserialize_", "tail" : "(s: String): A", "member" : "bigglue.data.serializers.BasicSerializer.deserialize_", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#deserialize_(s:String):A", "kind" : "abstract def"}, {"label" : "serialize_", "tail" : "(a: A): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize_", "link" : "bigglue\/data\/serializers\/BasicSerializer.html#serialize_(a:A):String", "kind" : "abstract def"}], "shortDescription" : "Created by edmundlam on 8\/21\/17.", "object" : "bigglue\/data\/serializers\/BasicSerializer$.html", "members_object" : [{"label" : "escapeAString", "tail" : "(s: String): String", "member" : "bigglue.data.serializers.BasicSerializer.escapeAString", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#escapeAString(s:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/serializers\/BasicSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "bigglue\/data\/serializers\/BasicSerializer.html", "kind" : "trait"}, {"name" : "bigglue.data.serializers.IIntBasicSerializer", "shortDescription" : "", "object" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html", "members_object" : [{"label" : "deserialize_", "tail" : "(s: String): I[Int]", "member" : "bigglue.data.serializers.IIntBasicSerializer.deserialize_", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#deserialize_(s:String):bigglue.data.I[Int]", "kind" : "def"}, {"label" : "serialize_", "tail" : "(a: I[Int]): String", "member" : "bigglue.data.serializers.IIntBasicSerializer.serialize_", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#serialize_(a:bigglue.data.I[Int]):String", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): I[Int]", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: I[Int]): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/serializers\/IIntBasicSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.serializers.IStringBasicSerializer", "shortDescription" : "", "object" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html", "members_object" : [{"label" : "deserialize_", "tail" : "(s: String): I[String]", "member" : "bigglue.data.serializers.IStringBasicSerializer.deserialize_", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#deserialize_(s:String):bigglue.data.I[String]", "kind" : "def"}, {"label" : "serialize_", "tail" : "(a: I[String]): String", "member" : "bigglue.data.serializers.IStringBasicSerializer.serialize_", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#serialize_(a:bigglue.data.I[String]):String", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): I[String]", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: I[String]): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/serializers\/IStringBasicSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.data.serializers.JsonSerializer", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JsonSerializer[Data]) ⇒ Boolean, msg: ⇒ Any): JsonSerializer[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JsonSerializer[Data]) ⇒ Boolean): JsonSerializer[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): JsonSerializer[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): JsonSerializer[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (JsonSerializer[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (JsonSerializer[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(str: String): Data", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#deserialize_(str:String):Data", "kind" : "def"}, {"label" : "serialize_", "tail" : "(d: Data): String", "member" : "bigglue.data.serializers.JsonSerializer.serialize_", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#serialize_(d:Data):String", "kind" : "def"}, {"label" : "serializeToJson", "tail" : "(d: Data): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#serializeToJson(d:Data):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): Data", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: Data): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/data\/serializers\/JsonSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deserialize_", "tail" : "(json: JsObject): Data", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#deserialize_(json:spray.json.JsObject):Data", "kind" : "abstract def"}, {"label" : "serializeToJson_", "tail" : "(d: Data): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson_", "link" : "bigglue\/data\/serializers\/JsonSerializer.html#serializeToJson_(d:Data):spray.json.JsObject", "kind" : "abstract def"}], "shortDescription" : "A simple serializer for flattened Json Identifiables.", "trait" : "bigglue\/data\/serializers\/JsonSerializer.html", "kind" : "trait"}], "bigglue.platforms.instances.thinactors" : [{"name" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorBinaryPlatform[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): ThinActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorBinaryPlatform[InputL, InputR, Output]) ⇒ Boolean): ThinActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorBinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorBinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnectors", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.initConnectors", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#initConnectors(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.init", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.getActor", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.actorSystem", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.actorRefOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.BinaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): (Seq[InputL], Seq[InputR], Seq[Pair[InputL, InputR]])", "member" : "bigglue.platforms.BinaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getInputs():(Seq[InputL],Seq[InputR],Seq[bigglue.data.Pair[InputL,InputR]])", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.BinaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputRMap", "tail" : "(): DataStore[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getInputRMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getInputRMap():bigglue.store.DataStore[InputR]", "kind" : "def"}, {"label" : "getInputLMap", "tail" : "(): DataStore[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getInputLMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getInputLMap():bigglue.store.DataStore[InputL]", "kind" : "def"}, {"label" : "getPairErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getPairErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getRightErrorCurator", "tail" : "(): ErrorCurator[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getRightErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getRightErrorCurator():bigglue.curators.ErrorCurator[InputR]", "kind" : "def"}, {"label" : "getLeftErrorCurator", "tail" : "(): ErrorCurator[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getLeftErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getLeftErrorCurator():bigglue.curators.ErrorCurator[InputL]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.BinaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Pair[InputL, InputR], Output]", "member" : "bigglue.platforms.BinaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]", "kind" : "def"}, {"label" : "getPairConnector", "tail" : "(): Connector[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getPairConnector():bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getUpstreamRConnector", "tail" : "(): Connector[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamRConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getUpstreamRConnector():bigglue.connectors.Connector[InputR]", "kind" : "def"}, {"label" : "getUpstreamLConnector", "tail" : "(): Connector[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamLConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getUpstreamLConnector():bigglue.connectors.Connector[InputL]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.BinaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputRMapOpt", "tail" : ": Option[DataStore[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.inputRMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#inputRMapOpt:Option[bigglue.store.DataStore[InputR]]", "kind" : "var"}, {"label" : "inputLMapOpt", "tail" : ": Option[DataStore[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.inputLMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#inputLMapOpt:Option[bigglue.store.DataStore[InputL]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.BinaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorPairCuratorOpt", "tail" : ": Option[ErrorCurator[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.errorPairCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#errorPairCuratorOpt:Option[bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "errorRightCuratorOpt", "tail" : ": Option[ErrorCurator[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.errorRightCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#errorRightCuratorOpt:Option[bigglue.curators.ErrorCurator[InputR]]", "kind" : "var"}, {"label" : "errorLeftCuratorOpt", "tail" : ": Option[ErrorCurator[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.errorLeftCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#errorLeftCuratorOpt:Option[bigglue.curators.ErrorCurator[InputL]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Pair[InputL, InputR], Output]]", "member" : "bigglue.platforms.BinaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]]", "kind" : "var"}, {"label" : "pairConnectorOpt", "tail" : ": Option[Connector[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.pairConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#pairConnectorOpt:Option[bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "upstreamRConnectorOpt", "tail" : ": Option[Connector[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamRConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#upstreamRConnectorOpt:Option[bigglue.connectors.Connector[InputR]]", "kind" : "var"}, {"label" : "upstreamLConnectorOpt", "tail" : ": Option[Connector[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamLConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#upstreamLConnectorOpt:Option[bigglue.connectors.Connector[InputL]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorBinaryPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorMapperPlatform", "shortDescription" : "Created by edmundlam on 8\/11\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorMapperPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): ThinActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorMapperPlatform[Input, Output]) ⇒ Boolean): ThinActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.platforms.instances.thinactors.ThinActorMapperPlatform.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#toString():String", "kind" : "def"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorMapperPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.getActor", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorSystem", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorRefOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorMapperPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorPairwiseComposerPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorPairwiseComposerPlatform[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): ThinActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorPairwiseComposerPlatform[InputL, InputR, Output]) ⇒ Boolean): ThinActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorPairwiseComposerPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorPairwiseComposerPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorPairwiseComposerPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnectors", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.initConnectors", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#initConnectors(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.init", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.getActor", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.actorSystem", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.thinactors.ThinActorBinaryPlatform.actorRefOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.BinaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): (Seq[InputL], Seq[InputR], Seq[Pair[InputL, InputR]])", "member" : "bigglue.platforms.BinaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getInputs():(Seq[InputL],Seq[InputR],Seq[bigglue.data.Pair[InputL,InputR]])", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.BinaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputRMap", "tail" : "(): DataStore[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getInputRMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getInputRMap():bigglue.store.DataStore[InputR]", "kind" : "def"}, {"label" : "getInputLMap", "tail" : "(): DataStore[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getInputLMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getInputLMap():bigglue.store.DataStore[InputL]", "kind" : "def"}, {"label" : "getPairErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getPairErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getRightErrorCurator", "tail" : "(): ErrorCurator[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getRightErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getRightErrorCurator():bigglue.curators.ErrorCurator[InputR]", "kind" : "def"}, {"label" : "getLeftErrorCurator", "tail" : "(): ErrorCurator[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getLeftErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getLeftErrorCurator():bigglue.curators.ErrorCurator[InputL]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.BinaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Pair[InputL, InputR], Output]", "member" : "bigglue.platforms.BinaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]", "kind" : "def"}, {"label" : "getPairConnector", "tail" : "(): Connector[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getPairConnector():bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getUpstreamRConnector", "tail" : "(): Connector[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamRConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getUpstreamRConnector():bigglue.connectors.Connector[InputR]", "kind" : "def"}, {"label" : "getUpstreamLConnector", "tail" : "(): Connector[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamLConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getUpstreamLConnector():bigglue.connectors.Connector[InputL]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.BinaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputRMapOpt", "tail" : ": Option[DataStore[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.inputRMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#inputRMapOpt:Option[bigglue.store.DataStore[InputR]]", "kind" : "var"}, {"label" : "inputLMapOpt", "tail" : ": Option[DataStore[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.inputLMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#inputLMapOpt:Option[bigglue.store.DataStore[InputL]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.BinaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorPairCuratorOpt", "tail" : ": Option[ErrorCurator[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.errorPairCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#errorPairCuratorOpt:Option[bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "errorRightCuratorOpt", "tail" : ": Option[ErrorCurator[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.errorRightCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#errorRightCuratorOpt:Option[bigglue.curators.ErrorCurator[InputR]]", "kind" : "var"}, {"label" : "errorLeftCuratorOpt", "tail" : ": Option[ErrorCurator[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.errorLeftCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#errorLeftCuratorOpt:Option[bigglue.curators.ErrorCurator[InputL]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Pair[InputL, InputR], Output]]", "member" : "bigglue.platforms.BinaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]]", "kind" : "var"}, {"label" : "pairConnectorOpt", "tail" : ": Option[Connector[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.pairConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#pairConnectorOpt:Option[bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "upstreamRConnectorOpt", "tail" : ": Option[Connector[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamRConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#upstreamRConnectorOpt:Option[bigglue.connectors.Connector[InputR]]", "kind" : "var"}, {"label" : "upstreamLConnectorOpt", "tail" : ": Option[Connector[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamLConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#upstreamLConnectorOpt:Option[bigglue.connectors.Connector[InputL]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPairwiseComposerPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorPlatform", "shortDescription" : "Created by edmundlam on 8\/11\/17.", "object" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html", "members_object" : [{"label" : "Wake", "tail" : "", "member" : "bigglue.platforms.instances.thinactors.ThinActorPlatform.Wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#WakeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "NAME", "tail" : ": String", "member" : "bigglue.platforms.instances.thinactors.ThinActorPlatform.NAME", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#NAME:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorPlatformActor", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorPlatformActor) ⇒ Boolean, msg: ⇒ Any): ThinActorPlatformActor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorPlatformActor) ⇒ Boolean): ThinActorPlatformActor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorPlatformActor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorPlatformActor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorPlatformActor, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorPlatformActor, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.platforms.instances.thinactors.ThinActorPlatformActor.receive", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#receive:ThinActorPlatformActor.this.Receive", "kind" : "def"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorPlatformActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorPlatformActor.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorReducerPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorReducerPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): ThinActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorReducerPlatform[Input, Output]) ⇒ Boolean): ThinActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorReducerPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorReducerPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorReducerPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.getActor", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorSystem", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorRefOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorReducerPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorUnaryPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): ThinActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThinActorUnaryPlatform[Input, Output]) ⇒ Boolean): ThinActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ThinActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThinActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThinActorUnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThinActorUnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.getActor", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorSystem", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit val"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform.actorRefOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.thinactors.ThinActorUnaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/thinactors\/ThinActorUnaryPlatform.html", "kind" : "class"}], "bigglue.checkers" : [{"name" : "bigglue.checkers.BinaryChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/BinaryChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/BinaryChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryChecker[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): BinaryChecker[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/BinaryChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryChecker[InputL, InputR, Output]) ⇒ Boolean): BinaryChecker[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/BinaryChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BinaryChecker[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/BinaryChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BinaryChecker[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/BinaryChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BinaryChecker[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/BinaryChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BinaryChecker[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/BinaryChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/checkers\/BinaryChecker.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/checkers\/BinaryChecker.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/checkers\/BinaryChecker.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/checkers\/BinaryChecker.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/checkers\/BinaryChecker.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/BinaryChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/BinaryChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/BinaryChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/BinaryChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/BinaryChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/BinaryChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/BinaryChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/BinaryChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/BinaryChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/BinaryChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/BinaryChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/BinaryChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/BinaryChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/BinaryChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/BinaryChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/BinaryChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/BinaryChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/BinaryChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/BinaryChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/checkers\/BinaryChecker.html", "kind" : "trait"}, {"name" : "bigglue.checkers.ConfigChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/ConfigChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/ConfigChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigChecker) ⇒ Boolean, msg: ⇒ Any): ConfigChecker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/ConfigChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigChecker) ⇒ Boolean): ConfigChecker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/ConfigChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigChecker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/ConfigChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigChecker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/ConfigChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigChecker, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/ConfigChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigChecker, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/ConfigChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/checkers\/ConfigChecker.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/ConfigChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/ConfigChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/ConfigChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/ConfigChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/ConfigChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/ConfigChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/ConfigChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/ConfigChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/ConfigChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/ConfigChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/ConfigChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/ConfigChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/ConfigChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/ConfigChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/ConfigChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/ConfigChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/ConfigChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/ConfigChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/ConfigChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Created by edmundlam on 8\/18\/17.", "trait" : "bigglue\/checkers\/ConfigChecker.html", "kind" : "trait"}, {"name" : "bigglue.checkers.InputStoreChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/InputStoreChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/InputStoreChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InputStoreChecker[Input]) ⇒ Boolean, msg: ⇒ Any): InputStoreChecker[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoreChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InputStoreChecker[Input]) ⇒ Boolean): InputStoreChecker[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoreChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InputStoreChecker[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoreChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InputStoreChecker[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoreChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InputStoreChecker[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/InputStoreChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InputStoreChecker[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/InputStoreChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/checkers\/InputStoreChecker.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/InputStoreChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/InputStoreChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/InputStoreChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/InputStoreChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/InputStoreChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/InputStoreChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/InputStoreChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoreChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoreChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoreChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/InputStoreChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/InputStoreChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/InputStoreChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/InputStoreChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/InputStoreChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/InputStoreChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/InputStoreChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/InputStoreChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/InputStoreChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/checkers\/InputStoreChecker.html", "kind" : "trait"}, {"name" : "bigglue.checkers.InputStoresChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/InputStoresChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/InputStoresChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InputStoresChecker[InputL, InputR]) ⇒ Boolean, msg: ⇒ Any): InputStoresChecker[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoresChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InputStoresChecker[InputL, InputR]) ⇒ Boolean): InputStoresChecker[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoresChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InputStoresChecker[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoresChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InputStoresChecker[InputL, InputR]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/InputStoresChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InputStoresChecker[InputL, InputR], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/InputStoresChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InputStoresChecker[InputL, InputR], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/InputStoresChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/checkers\/InputStoresChecker.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/checkers\/InputStoresChecker.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/InputStoresChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/InputStoresChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/InputStoresChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/InputStoresChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/InputStoresChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/InputStoresChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/InputStoresChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoresChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoresChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/InputStoresChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/InputStoresChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/InputStoresChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/InputStoresChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/InputStoresChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/InputStoresChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/InputStoresChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/InputStoresChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/InputStoresChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/InputStoresChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/checkers\/InputStoresChecker.html", "kind" : "trait"}, {"name" : "bigglue.checkers.OutputStoreChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/OutputStoreChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/OutputStoreChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OutputStoreChecker[Output]) ⇒ Boolean, msg: ⇒ Any): OutputStoreChecker[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/OutputStoreChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OutputStoreChecker[Output]) ⇒ Boolean): OutputStoreChecker[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/OutputStoreChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): OutputStoreChecker[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/OutputStoreChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OutputStoreChecker[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/OutputStoreChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OutputStoreChecker[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/OutputStoreChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OutputStoreChecker[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/OutputStoreChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/checkers\/OutputStoreChecker.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/OutputStoreChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/OutputStoreChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/OutputStoreChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/OutputStoreChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/OutputStoreChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/OutputStoreChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/OutputStoreChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/OutputStoreChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/OutputStoreChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/OutputStoreChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/OutputStoreChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/OutputStoreChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/OutputStoreChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/OutputStoreChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/OutputStoreChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/OutputStoreChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/OutputStoreChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/OutputStoreChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/OutputStoreChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/checkers\/OutputStoreChecker.html", "kind" : "trait"}, {"name" : "bigglue.checkers.UnaryChecker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/checkers\/UnaryChecker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/checkers\/UnaryChecker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryChecker[Input, Output]) ⇒ Boolean, msg: ⇒ Any): UnaryChecker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/UnaryChecker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryChecker[Input, Output]) ⇒ Boolean): UnaryChecker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/UnaryChecker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UnaryChecker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/UnaryChecker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnaryChecker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/checkers\/UnaryChecker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnaryChecker[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/checkers\/UnaryChecker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnaryChecker[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/checkers\/UnaryChecker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/checkers\/UnaryChecker.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/checkers\/UnaryChecker.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/checkers\/UnaryChecker.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/checkers\/UnaryChecker.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/checkers\/UnaryChecker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/checkers\/UnaryChecker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/checkers\/UnaryChecker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/checkers\/UnaryChecker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/checkers\/UnaryChecker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/checkers\/UnaryChecker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/checkers\/UnaryChecker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/UnaryChecker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/UnaryChecker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/checkers\/UnaryChecker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/checkers\/UnaryChecker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/checkers\/UnaryChecker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/checkers\/UnaryChecker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/checkers\/UnaryChecker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/checkers\/UnaryChecker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/checkers\/UnaryChecker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/checkers\/UnaryChecker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/checkers\/UnaryChecker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/checkers\/UnaryChecker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/checkers\/UnaryChecker.html", "kind" : "trait"}], "bigglue.platforms.instances.bigactors" : [{"name" : "bigglue.platforms.instances.bigactors.BigActor", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActor[Input]) ⇒ Boolean, msg: ⇒ Any): BigActor[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActor[Input]) ⇒ Boolean): BigActor[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActor[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActor[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActor[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActor[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute_", "tail" : "(input: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#compute_(input:Input):Unit", "kind" : "def"}, {"label" : "compute", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.instances.bigactors.BigActor.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "bigglue\/platforms\/instances\/bigactors\/BigActor.html", "kind" : "trait"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorBinaryPlatform[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorBinaryPlatform[InputL, InputR, Output]) ⇒ Boolean): BigActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorBinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorBinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorBinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnectors", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.initConnectors", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#initConnectors(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.run", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "compute_", "tail" : "(input: Pair[InputL, InputR]): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#compute_(input:bigglue.data.Pair[InputL,InputR]):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.init", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.supervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#supervisor:akka.actor.ActorRef", "kind" : "def"}, {"label" : "superActorOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.superActorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#superActorOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "inputROccurrences", "tail" : ": Map[InputR, Integer]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.inputROccurrences", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#inputROccurrences:Map[InputR,Integer]", "kind" : "var"}, {"label" : "inputLOccurrences", "tail" : ": Map[InputL, Integer]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.inputLOccurrences", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#inputLOccurrences:Map[InputL,Integer]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute", "tail" : "(job: Pair[InputL, InputR]): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.BinaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): (Seq[InputL], Seq[InputR], Seq[Pair[InputL, InputR]])", "member" : "bigglue.platforms.BinaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getInputs():(Seq[InputL],Seq[InputR],Seq[bigglue.data.Pair[InputL,InputR]])", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.BinaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputRMap", "tail" : "(): DataStore[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getInputRMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getInputRMap():bigglue.store.DataStore[InputR]", "kind" : "def"}, {"label" : "getInputLMap", "tail" : "(): DataStore[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getInputLMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getInputLMap():bigglue.store.DataStore[InputL]", "kind" : "def"}, {"label" : "getPairErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getPairErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getRightErrorCurator", "tail" : "(): ErrorCurator[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getRightErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getRightErrorCurator():bigglue.curators.ErrorCurator[InputR]", "kind" : "def"}, {"label" : "getLeftErrorCurator", "tail" : "(): ErrorCurator[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getLeftErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getLeftErrorCurator():bigglue.curators.ErrorCurator[InputL]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.BinaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Pair[InputL, InputR], Output]", "member" : "bigglue.platforms.BinaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]", "kind" : "def"}, {"label" : "getPairConnector", "tail" : "(): Connector[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getPairConnector():bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getUpstreamRConnector", "tail" : "(): Connector[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamRConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getUpstreamRConnector():bigglue.connectors.Connector[InputR]", "kind" : "def"}, {"label" : "getUpstreamLConnector", "tail" : "(): Connector[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamLConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getUpstreamLConnector():bigglue.connectors.Connector[InputL]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.BinaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputRMapOpt", "tail" : ": Option[DataStore[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.inputRMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#inputRMapOpt:Option[bigglue.store.DataStore[InputR]]", "kind" : "var"}, {"label" : "inputLMapOpt", "tail" : ": Option[DataStore[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.inputLMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#inputLMapOpt:Option[bigglue.store.DataStore[InputL]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.BinaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorPairCuratorOpt", "tail" : ": Option[ErrorCurator[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.errorPairCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#errorPairCuratorOpt:Option[bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "errorRightCuratorOpt", "tail" : ": Option[ErrorCurator[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.errorRightCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#errorRightCuratorOpt:Option[bigglue.curators.ErrorCurator[InputR]]", "kind" : "var"}, {"label" : "errorLeftCuratorOpt", "tail" : ": Option[ErrorCurator[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.errorLeftCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#errorLeftCuratorOpt:Option[bigglue.curators.ErrorCurator[InputL]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Pair[InputL, InputR], Output]]", "member" : "bigglue.platforms.BinaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]]", "kind" : "var"}, {"label" : "pairConnectorOpt", "tail" : ": Option[Connector[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.pairConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#pairConnectorOpt:Option[bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "upstreamRConnectorOpt", "tail" : ": Option[Connector[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamRConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#upstreamRConnectorOpt:Option[bigglue.connectors.Connector[InputR]]", "kind" : "var"}, {"label" : "upstreamLConnectorOpt", "tail" : ": Option[Connector[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamLConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#upstreamLConnectorOpt:Option[bigglue.connectors.Connector[InputL]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorBinaryPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorMapperPlatform", "shortDescription" : "This is the default platform for the mapper.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorMapperPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorMapperPlatform[Input, Output]) ⇒ Boolean): BigActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorMapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorMapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "compute_", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorMapperPlatform.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#compute_(job:Input):Unit", "kind" : "def"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorMapperPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.run", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#run():Unit", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.supervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#supervisor:akka.actor.ActorRef", "kind" : "def"}, {"label" : "superActorOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.superActorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#superActorOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorMapperPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorPairwiseComposerPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorPairwiseComposerPlatform[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorPairwiseComposerPlatform[InputL, InputR, Output]) ⇒ Boolean): BigActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorPairwiseComposerPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorPairwiseComposerPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorPairwiseComposerPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "compute_", "tail" : "(input: Pair[InputL, InputR]): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorPairwiseComposerPlatform.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#compute_(input:bigglue.data.Pair[InputL,InputR]):Unit", "kind" : "def"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorPairwiseComposerPlatform#<init>", "error" : "unsupported entity"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnectors", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.initConnectors", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#initConnectors(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.run", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#run():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.init", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.supervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#supervisor:akka.actor.ActorRef", "kind" : "def"}, {"label" : "superActorOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.superActorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#superActorOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "inputROccurrences", "tail" : ": Map[InputR, Integer]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.inputROccurrences", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#inputROccurrences:Map[InputR,Integer]", "kind" : "var"}, {"label" : "inputLOccurrences", "tail" : ": Map[InputL, Integer]", "member" : "bigglue.platforms.instances.bigactors.BigActorBinaryPlatform.inputLOccurrences", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#inputLOccurrences:Map[InputL,Integer]", "kind" : "var"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute", "tail" : "(job: Pair[InputL, InputR]): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.BinaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): (Seq[InputL], Seq[InputR], Seq[Pair[InputL, InputR]])", "member" : "bigglue.platforms.BinaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getInputs():(Seq[InputL],Seq[InputR],Seq[bigglue.data.Pair[InputL,InputR]])", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.BinaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputRMap", "tail" : "(): DataStore[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getInputRMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getInputRMap():bigglue.store.DataStore[InputR]", "kind" : "def"}, {"label" : "getInputLMap", "tail" : "(): DataStore[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getInputLMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getInputLMap():bigglue.store.DataStore[InputL]", "kind" : "def"}, {"label" : "getPairErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getPairErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getRightErrorCurator", "tail" : "(): ErrorCurator[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getRightErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getRightErrorCurator():bigglue.curators.ErrorCurator[InputR]", "kind" : "def"}, {"label" : "getLeftErrorCurator", "tail" : "(): ErrorCurator[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getLeftErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getLeftErrorCurator():bigglue.curators.ErrorCurator[InputL]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.BinaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Pair[InputL, InputR], Output]", "member" : "bigglue.platforms.BinaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]", "kind" : "def"}, {"label" : "getPairConnector", "tail" : "(): Connector[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getPairConnector():bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getUpstreamRConnector", "tail" : "(): Connector[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamRConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getUpstreamRConnector():bigglue.connectors.Connector[InputR]", "kind" : "def"}, {"label" : "getUpstreamLConnector", "tail" : "(): Connector[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamLConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getUpstreamLConnector():bigglue.connectors.Connector[InputL]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.BinaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputRMapOpt", "tail" : ": Option[DataStore[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.inputRMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#inputRMapOpt:Option[bigglue.store.DataStore[InputR]]", "kind" : "var"}, {"label" : "inputLMapOpt", "tail" : ": Option[DataStore[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.inputLMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#inputLMapOpt:Option[bigglue.store.DataStore[InputL]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.BinaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorPairCuratorOpt", "tail" : ": Option[ErrorCurator[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.errorPairCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#errorPairCuratorOpt:Option[bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "errorRightCuratorOpt", "tail" : ": Option[ErrorCurator[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.errorRightCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#errorRightCuratorOpt:Option[bigglue.curators.ErrorCurator[InputR]]", "kind" : "var"}, {"label" : "errorLeftCuratorOpt", "tail" : ": Option[ErrorCurator[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.errorLeftCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#errorLeftCuratorOpt:Option[bigglue.curators.ErrorCurator[InputL]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Pair[InputL, InputR], Output]]", "member" : "bigglue.platforms.BinaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]]", "kind" : "var"}, {"label" : "pairConnectorOpt", "tail" : ": Option[Connector[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.pairConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#pairConnectorOpt:Option[bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "upstreamRConnectorOpt", "tail" : ": Option[Connector[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamRConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#upstreamRConnectorOpt:Option[bigglue.connectors.Connector[InputR]]", "kind" : "var"}, {"label" : "upstreamLConnectorOpt", "tail" : ": Option[Connector[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamLConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#upstreamLConnectorOpt:Option[bigglue.connectors.Connector[InputL]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorPairwiseComposerPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorPlatform", "shortDescription" : "", "object" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html", "members_object" : [{"label" : "Terminate", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.Terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#TerminateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "DoNotAlertSupervisor", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.DoNotAlertSupervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#DoNotAlertSupervisorextendsProductwithSerializable", "kind" : "case class"}, {"label" : "AddedJobs", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.AddedJobs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#AddedJobsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Crashed", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.Crashed", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#CrashedextendsProductwithSerializable", "kind" : "case class"}, {"label" : "AddedWorker", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.AddedWorker", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#AddedWorkerextendsProductwithSerializable", "kind" : "case class"}, {"label" : "AskForJob", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.AskForJob", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#AskForJobextendsProductwithSerializable", "kind" : "case class"}, {"label" : "PostWake", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.PostWake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#PostWakeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Wake", "tail" : "", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.Wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#WakeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "NAME", "tail" : ": String", "member" : "bigglue.platforms.instances.bigactors.BigActorPlatform.NAME", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#NAME:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorPlatform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorReducerPlatform", "shortDescription" : "This is the default platform for the reducer.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorReducerPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorReducerPlatform[Input, Output]) ⇒ Boolean): BigActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorReducerPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorReducerPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorReducerPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "compute_", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorReducerPlatform.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#compute_(job:Input):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorReducerPlatform.init", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "mergals", "tail" : ": Map[Identity[Output], Seq[Input]]", "member" : "bigglue.platforms.instances.bigactors.BigActorReducerPlatform.mergals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#mergals:scala.collection.immutable.Map[bigglue.data.Identity[Output],Seq[Input]]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorReducerPlatform#<init>", "error" : "unsupported entity"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.run", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#run():Unit", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.supervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#supervisor:akka.actor.ActorRef", "kind" : "def"}, {"label" : "superActorOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.superActorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#superActorOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorReducerPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorSupervisorActor", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorSupervisorActor[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorSupervisorActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorSupervisorActor[Input, Output]) ⇒ Boolean): BigActorSupervisorActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorSupervisorActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorSupervisorActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorSupervisorActor[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorSupervisorActor[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "giveJobsToWorkers", "tail" : "(jobs: List[Input], workers: List[ActorRef], isWorking: Map[ActorRef, Boolean]): (List[Input], Map[ActorRef, Boolean])", "member" : "bigglue.platforms.instances.bigactors.BigActorSupervisorActor.giveJobsToWorkers", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#giveJobsToWorkers(jobs:List[Input],workers:List[akka.actor.ActorRef],isWorking:Map[akka.actor.ActorRef,Boolean]):(List[Input],Map[akka.actor.ActorRef,Boolean])", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.platforms.instances.bigactors.BigActorSupervisorActor.receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#receive():BigActorSupervisorActor.this.Receive", "kind" : "def"}, {"label" : "state", "tail" : "(jobsLeft: List[Input], workerList: List[ActorRef], isWorking: Map[ActorRef, Boolean], gettingUp: Boolean): Receive", "member" : "bigglue.platforms.instances.bigactors.BigActorSupervisorActor.state", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#state(jobsLeft:List[Input],workerList:List[akka.actor.ActorRef],isWorking:Map[akka.actor.ActorRef,Boolean],gettingUp:Boolean):BigActorSupervisorActor.this.Receive", "kind" : "def"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorSupervisorActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorSupervisorActor.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform", "shortDescription" : "This is the default platform of computation.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorUnaryPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorUnaryPlatform[Input, Output]) ⇒ Boolean): BigActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorUnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorUnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorUnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.terminate", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.wake", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#wake():Unit", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.run", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.supervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#supervisor:akka.actor.ActorRef", "kind" : "def"}, {"label" : "superActorOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform.superActorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#superActorOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorUnaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "updateConfigAndGetActorNames", "tail" : "(conf: Config, name: String): List[String]", "member" : "bigglue.platforms.instances.bigactors.BigActor.updateConfigAndGetActorNames", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#updateConfigAndGetActorNames(conf:com.typesafe.config.Config,name:String):List[String]", "kind" : "def"}, {"label" : "actorSystem", "tail" : "(): ActorSystem", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystem", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#actorSystem:akka.actor.ActorSystem", "kind" : "implicit def"}, {"label" : "compute_", "tail" : "(input: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute_", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#compute_(input:Input):Unit", "kind" : "def"}, {"label" : "compute", "tail" : "(job: Input): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActor.compute", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#compute(job:Input):Unit", "kind" : "def"}, {"label" : "computer", "tail" : "(): ActorRef", "member" : "bigglue.platforms.instances.bigactors.BigActor.computer", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#computer:akka.actor.ActorRef", "kind" : "def"}, {"label" : "computerOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.platforms.instances.bigactors.BigActor.computerOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#computerOpt:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "actorSystemOpt", "tail" : ": Option[ActorSystem]", "member" : "bigglue.platforms.instances.bigactors.BigActor.actorSystemOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#actorSystemOpt:Option[akka.actor.ActorSystem]", "kind" : "implicit val"}, {"label" : "infoConfig", "tail" : ": Config", "member" : "bigglue.platforms.instances.bigactors.BigActor.infoConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#infoConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorUnaryPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorWorker", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorWorker[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorWorker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorWorker[Input, Output]) ⇒ Boolean): BigActorWorker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorWorker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorWorker[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorWorker[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorWorker[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.platforms.instances.bigactors.BigActorWorker.receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#receive:BigActorWorker.this.Receive", "kind" : "def"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorWorker#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorker.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor", "shortDescription" : "The actors that actually do the work of computing the tasks.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorWorkerActor[Input, Output]) ⇒ Boolean, msg: ⇒ Any): BigActorWorkerActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigActorWorkerActor[Input, Output]) ⇒ Boolean): BigActorWorkerActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigActorWorkerActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigActorWorkerActor[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigActorWorkerActor[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigActorWorkerActor[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor.receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#receive:BigActorWorkerActor.this.Receive", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor.postStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#postStop():Unit", "kind" : "def"}, {"label" : "longestTimeWaiting", "tail" : ": Duration", "member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor.longestTimeWaiting", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#longestTimeWaiting:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "currInput", "tail" : ": Option[Input]", "member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor.currInput", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#currInput:Option[Input]", "kind" : "var"}, {"label" : "alertSupervisor", "tail" : ": Boolean", "member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor.alertSupervisor", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#alertSupervisor:Boolean", "kind" : "var"}, {"member" : "bigglue.platforms.instances.bigactors.BigActorWorkerActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/platforms\/instances\/bigactors\/BigActorWorkerActor.html", "kind" : "class"}, {"name" : "bigglue.platforms.instances.bigactors.ConfigHelper", "shortDescription" : "Created by chanceroberts on 8\/10\/17.", "object" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html", "members_object" : [{"label" : "possiblyHasObject", "tail" : "(config: Config, path: String): Option[ConfigObject]", "member" : "bigglue.platforms.instances.bigactors.ConfigHelper.possiblyHasObject", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#possiblyHasObject(config:com.typesafe.config.Config,path:String):Option[com.typesafe.config.ConfigObject]", "kind" : "def"}, {"label" : "possiblyAConfig", "tail" : "(config: Config, path: String): Option[Config]", "member" : "bigglue.platforms.instances.bigactors.ConfigHelper.possiblyAConfig", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#possiblyAConfig(config:com.typesafe.config.Config,path:String):Option[com.typesafe.config.Config]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/bigactors\/ConfigHelper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "bigglue.curators" : [{"name" : "bigglue.curators.ErrorCurator", "shortDescription" : "Created by edmundlam on 8\/13\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/ErrorCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/ErrorCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ErrorCurator[Input]) ⇒ Boolean, msg: ⇒ Any): ErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ErrorCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ErrorCurator[Input]) ⇒ Boolean): ErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ErrorCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ErrorCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ErrorCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/ErrorCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/ErrorCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.curators.ErrorCurator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/ErrorCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/ErrorCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/ErrorCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/ErrorCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/ErrorCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/ErrorCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/ErrorCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ErrorCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ErrorCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ErrorCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/ErrorCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/ErrorCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/ErrorCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/ErrorCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/ErrorCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/ErrorCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/ErrorCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/ErrorCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/ErrorCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportError", "tail" : "(src: Input, exception: Exception, extraInfo: Option[String]): Unit", "member" : "bigglue.curators.ErrorCurator.reportError", "link" : "bigglue\/curators\/ErrorCurator.html#reportError(src:Input,exception:Exception,extraInfo:Option[String]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/curators\/ErrorCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.IdleErrorCurator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/IdleErrorCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/IdleErrorCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleErrorCurator[Input]) ⇒ Boolean, msg: ⇒ Any): IdleErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleErrorCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleErrorCurator[Input]) ⇒ Boolean): IdleErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleErrorCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IdleErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleErrorCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IdleErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleErrorCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IdleErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/IdleErrorCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IdleErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/IdleErrorCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "reportError", "tail" : "(src: Nothing, exception: Exception, extraInfo: Option[String]): Unit", "member" : "bigglue.curators.IdleErrorCurator.reportError", "link" : "bigglue\/curators\/IdleErrorCurator.html#reportError(src:Nothing,exception:Exception,extraInfo:Option[String]):Unit", "kind" : "def"}, {"member" : "bigglue.curators.IdleErrorCurator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/IdleErrorCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/IdleErrorCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/IdleErrorCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/IdleErrorCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/IdleErrorCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/IdleErrorCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/IdleErrorCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleErrorCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleErrorCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleErrorCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/IdleErrorCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/IdleErrorCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/IdleErrorCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/IdleErrorCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/IdleErrorCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/IdleErrorCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/IdleErrorCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/IdleErrorCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/IdleErrorCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/IdleErrorCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.IdleProvenanceCurator", "shortDescription" : "This does absolutely nothing.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleProvenanceCurator[Input, Output]) ⇒ Boolean, msg: ⇒ Any): IdleProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleProvenanceCurator[Input, Output]) ⇒ Boolean): IdleProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IdleProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IdleProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IdleProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IdleProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "reportProvenance", "tail" : "(src: Input, targets: List[Output]): Unit", "member" : "bigglue.curators.IdleProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#reportProvenance(src:Input,targets:List[Output]):Unit", "kind" : "def"}, {"member" : "bigglue.curators.IdleProvenanceCurator#<init>", "error" : "unsupported entity"}, {"label" : "reportProvenance", "tail" : "(src: Input, target: Output): Unit", "member" : "bigglue.curators.ProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#reportProvenance(src:Input,target:Output):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/IdleProvenanceCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/IdleProvenanceCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/IdleProvenanceCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.IdleVersionCurator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/IdleVersionCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/IdleVersionCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleVersionCurator[Output]) ⇒ Boolean, msg: ⇒ Any): IdleVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleVersionCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IdleVersionCurator[Output]) ⇒ Boolean): IdleVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleVersionCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IdleVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleVersionCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IdleVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/IdleVersionCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IdleVersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/IdleVersionCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IdleVersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/IdleVersionCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(id: Identity[Output]): Identity[Output]", "member" : "bigglue.curators.IdleVersionCurator.stampVersion", "link" : "bigglue\/curators\/IdleVersionCurator.html#stampVersion(id:bigglue.data.Identity[Output]):bigglue.data.Identity[Output]", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(output: Output): Output", "member" : "bigglue.curators.IdleVersionCurator.stampVersion", "link" : "bigglue\/curators\/IdleVersionCurator.html#stampVersion(output:Output):Output", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(outputs: List[Output]): List[Output]", "member" : "bigglue.curators.IdleVersionCurator.stampVersion", "link" : "bigglue\/curators\/IdleVersionCurator.html#stampVersion(outputs:List[Output]):List[Output]", "kind" : "def"}, {"member" : "bigglue.curators.IdleVersionCurator#<init>", "error" : "unsupported entity"}, {"label" : "thisVersion", "tail" : ": String", "member" : "bigglue.curators.VersionCurator.thisVersion", "link" : "bigglue\/curators\/IdleVersionCurator.html#thisVersion:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/IdleVersionCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/IdleVersionCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/IdleVersionCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/IdleVersionCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/IdleVersionCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/IdleVersionCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/IdleVersionCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleVersionCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleVersionCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/IdleVersionCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/IdleVersionCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/IdleVersionCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/IdleVersionCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/IdleVersionCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/IdleVersionCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/IdleVersionCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/IdleVersionCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/IdleVersionCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/IdleVersionCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/IdleVersionCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.Provenance", "shortDescription" : "The Provenance Information", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/Provenance.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/Provenance.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Provenance) ⇒ Boolean, msg: ⇒ Any): Provenance", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/Provenance.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Provenance) ⇒ Boolean): Provenance", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/Provenance.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Provenance", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/Provenance.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Provenance", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/Provenance.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Provenance, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/Provenance.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Provenance, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/Provenance.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.curators.Provenance#<init>", "error" : "unsupported entity"}, {"label" : "time", "tail" : ": String", "member" : "bigglue.curators.Provenance.time", "link" : "bigglue\/curators\/Provenance.html#time:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "bigglue.curators.Provenance.id", "link" : "bigglue\/curators\/Provenance.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/Provenance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/Provenance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/Provenance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/Provenance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/Provenance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/Provenance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/Provenance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/Provenance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/Provenance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/Provenance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/Provenance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/Provenance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/Provenance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/Provenance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/Provenance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/Provenance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/curators\/Provenance.html", "kind" : "case class"}, {"name" : "bigglue.curators.ProvenanceCurator", "shortDescription" : "This ends up keeping track of the Provenance.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/ProvenanceCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/ProvenanceCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProvenanceCurator[Input, Output]) ⇒ Boolean, msg: ⇒ Any): ProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ProvenanceCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProvenanceCurator[Input, Output]) ⇒ Boolean): ProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ProvenanceCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ProvenanceCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/ProvenanceCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/ProvenanceCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/ProvenanceCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "reportProvenance", "tail" : "(src: Input, target: Output): Unit", "member" : "bigglue.curators.ProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/ProvenanceCurator.html#reportProvenance(src:Input,target:Output):Unit", "kind" : "def"}, {"member" : "bigglue.curators.ProvenanceCurator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/ProvenanceCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/ProvenanceCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/ProvenanceCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/ProvenanceCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/ProvenanceCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/ProvenanceCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/ProvenanceCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ProvenanceCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ProvenanceCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/ProvenanceCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/ProvenanceCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/ProvenanceCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/ProvenanceCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/ProvenanceCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/ProvenanceCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/ProvenanceCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/ProvenanceCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/ProvenanceCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/ProvenanceCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportProvenance", "tail" : "(src: Input, targets: List[Output]): Unit", "member" : "bigglue.curators.ProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/ProvenanceCurator.html#reportProvenance(src:Input,targets:List[Output]):Unit", "kind" : "abstract def"}], "class" : "bigglue\/curators\/ProvenanceCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.StandardErrorCurator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/StandardErrorCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/StandardErrorCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardErrorCurator[Input]) ⇒ Boolean, msg: ⇒ Any): StandardErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardErrorCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardErrorCurator[Input]) ⇒ Boolean): StandardErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardErrorCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StandardErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardErrorCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StandardErrorCurator[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardErrorCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StandardErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/StandardErrorCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StandardErrorCurator[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/StandardErrorCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "reportError", "tail" : "(src: Input, exception: Exception, extraInfo: Option[String]): Unit", "member" : "bigglue.curators.StandardErrorCurator.reportError", "link" : "bigglue\/curators\/StandardErrorCurator.html#reportError(src:Input,exception:Exception,extraInfo:Option[String]):Unit", "kind" : "def"}, {"label" : "errorMsg", "tail" : "(exception: Exception, extraInfo: Option[String]): String", "member" : "bigglue.curators.StandardErrorCurator.errorMsg", "link" : "bigglue\/curators\/StandardErrorCurator.html#errorMsg(exception:Exception,extraInfo:Option[String]):String", "kind" : "def"}, {"label" : "errorMap", "tail" : ": DataMap[Identity[Input], String]", "member" : "bigglue.curators.StandardErrorCurator.errorMap", "link" : "bigglue\/curators\/StandardErrorCurator.html#errorMap:bigglue.store.DataMap[bigglue.data.Identity[Input],String]", "kind" : "val"}, {"member" : "bigglue.curators.StandardErrorCurator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/StandardErrorCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/StandardErrorCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/StandardErrorCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/StandardErrorCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/StandardErrorCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/StandardErrorCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/StandardErrorCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardErrorCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardErrorCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardErrorCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/StandardErrorCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/StandardErrorCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/StandardErrorCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/StandardErrorCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/StandardErrorCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/StandardErrorCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/StandardErrorCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/StandardErrorCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/StandardErrorCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/StandardErrorCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.StandardProvenanceCurator", "shortDescription" : "The default provenance tracker; This is in charge of keeping track of the inputs that let to each output,and at what time the provenance had been computed.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardProvenanceCurator[Input, Output]) ⇒ Boolean, msg: ⇒ Any): StandardProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardProvenanceCurator[Input, Output]) ⇒ Boolean): StandardProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StandardProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StandardProvenanceCurator[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StandardProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StandardProvenanceCurator[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bigglue.curators.StandardProvenanceCurator.toString", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#toString():String", "kind" : "def"}, {"label" : "reportProvenance", "tail" : "(src: Input, targets: List[Output]): Unit", "member" : "bigglue.curators.StandardProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#reportProvenance(src:Input,targets:List[Output]):Unit", "kind" : "def"}, {"label" : "provenance", "tail" : "(src: Input, target: Output): Any", "member" : "bigglue.curators.StandardProvenanceCurator.provenance", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#provenance(src:Input,target:Output):Any", "kind" : "def"}, {"label" : "provMap", "tail" : ": DataMap[Identity[Output], Any]", "member" : "bigglue.curators.StandardProvenanceCurator.provMap", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#provMap:bigglue.store.DataMap[bigglue.data.Identity[Output],Any]", "kind" : "val"}, {"member" : "bigglue.curators.StandardProvenanceCurator#<init>", "error" : "unsupported entity"}, {"label" : "reportProvenance", "tail" : "(src: Input, target: Output): Unit", "member" : "bigglue.curators.ProvenanceCurator.reportProvenance", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#reportProvenance(src:Input,target:Output):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/StandardProvenanceCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/StandardProvenanceCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/StandardProvenanceCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.StandardVersionCurator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/StandardVersionCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/StandardVersionCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardVersionCurator[Output]) ⇒ Boolean, msg: ⇒ Any): StandardVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardVersionCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StandardVersionCurator[Output]) ⇒ Boolean): StandardVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardVersionCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StandardVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardVersionCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StandardVersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/StandardVersionCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StandardVersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/StandardVersionCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StandardVersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/StandardVersionCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(id: Identity[Output]): Identity[Output]", "member" : "bigglue.curators.StandardVersionCurator.stampVersion", "link" : "bigglue\/curators\/StandardVersionCurator.html#stampVersion(id:bigglue.data.Identity[Output]):bigglue.data.Identity[Output]", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(output: Output): Output", "member" : "bigglue.curators.StandardVersionCurator.stampVersion", "link" : "bigglue\/curators\/StandardVersionCurator.html#stampVersion(output:Output):Output", "kind" : "def"}, {"label" : "stampVersion", "tail" : "(outputs: List[Output]): List[Output]", "member" : "bigglue.curators.StandardVersionCurator.stampVersion", "link" : "bigglue\/curators\/StandardVersionCurator.html#stampVersion(outputs:List[Output]):List[Output]", "kind" : "def"}, {"member" : "bigglue.curators.StandardVersionCurator#<init>", "error" : "unsupported entity"}, {"label" : "thisVersion", "tail" : ": String", "member" : "bigglue.curators.VersionCurator.thisVersion", "link" : "bigglue\/curators\/StandardVersionCurator.html#thisVersion:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/StandardVersionCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/StandardVersionCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/StandardVersionCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/StandardVersionCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/StandardVersionCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/StandardVersionCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/StandardVersionCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardVersionCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardVersionCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/StandardVersionCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/StandardVersionCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/StandardVersionCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/StandardVersionCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/StandardVersionCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/StandardVersionCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/StandardVersionCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/StandardVersionCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/StandardVersionCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/StandardVersionCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/curators\/StandardVersionCurator.html", "kind" : "class"}, {"name" : "bigglue.curators.VersionCurator", "shortDescription" : "This curator appends a version to the Identifiable.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/curators\/VersionCurator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/curators\/VersionCurator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VersionCurator[Output]) ⇒ Boolean, msg: ⇒ Any): VersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/VersionCurator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VersionCurator[Output]) ⇒ Boolean): VersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/VersionCurator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): VersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/VersionCurator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VersionCurator[Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/curators\/VersionCurator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/curators\/VersionCurator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VersionCurator[Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/curators\/VersionCurator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "thisVersion", "tail" : ": String", "member" : "bigglue.curators.VersionCurator.thisVersion", "link" : "bigglue\/curators\/VersionCurator.html#thisVersion:String", "kind" : "val"}, {"member" : "bigglue.curators.VersionCurator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/curators\/VersionCurator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/curators\/VersionCurator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/curators\/VersionCurator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/curators\/VersionCurator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/curators\/VersionCurator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/curators\/VersionCurator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/curators\/VersionCurator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/VersionCurator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/VersionCurator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/curators\/VersionCurator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/curators\/VersionCurator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/curators\/VersionCurator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/curators\/VersionCurator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/curators\/VersionCurator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/curators\/VersionCurator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/curators\/VersionCurator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/curators\/VersionCurator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/curators\/VersionCurator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/curators\/VersionCurator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stampVersion", "tail" : "(id: Identity[Output]): Identity[Output]", "member" : "bigglue.curators.VersionCurator.stampVersion", "link" : "bigglue\/curators\/VersionCurator.html#stampVersion(id:bigglue.data.Identity[Output]):bigglue.data.Identity[Output]", "kind" : "abstract def"}, {"label" : "stampVersion", "tail" : "(output: Output): Output", "member" : "bigglue.curators.VersionCurator.stampVersion", "link" : "bigglue\/curators\/VersionCurator.html#stampVersion(output:Output):Output", "kind" : "abstract def"}, {"label" : "stampVersion", "tail" : "(outputs: List[Output]): List[Output]", "member" : "bigglue.curators.VersionCurator.stampVersion", "link" : "bigglue\/curators\/VersionCurator.html#stampVersion(outputs:List[Output]):List[Output]", "kind" : "abstract def"}], "class" : "bigglue\/curators\/VersionCurator.html", "kind" : "class"}], "bigglue.connectors" : [{"name" : "bigglue.connectors.Connector", "shortDescription" : "", "object" : "bigglue\/connectors\/Connector$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/Connector.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/Connector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Connector[Input]) ⇒ Boolean, msg: ⇒ Any): Connector[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Connector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Connector[Input]) ⇒ Boolean): Connector[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Connector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Connector[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Connector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Connector[Input]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Connector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Connector[Input], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/Connector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Connector[Input], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/Connector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "+>", "tail" : "(connector: Connector[Input]): Connector[Input]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/Connector.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Input): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/Connector.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Input): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/Connector.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Input): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/Connector.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.Connector.signalDown", "link" : "bigglue\/connectors\/Connector.html#signalDown():Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Input]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/Connector.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Input]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/Connector.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Input]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/Connector.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/Connector.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Input]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/Connector.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Input]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/Connector.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/Connector.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/Connector.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"member" : "bigglue.connectors.Connector#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/Connector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/Connector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/Connector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/Connector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/Connector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/Connector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/Connector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/Connector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/Connector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/Connector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/Connector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/Connector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/Connector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/Connector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/Connector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/Connector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.Connector.size", "link" : "bigglue\/connectors\/Connector.html#size():Int", "kind" : "abstract def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Input]): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/Connector.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Input]):Unit", "kind" : "abstract def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Input]", "member" : "bigglue.connectors.Connector.retrieveUp", "link" : "bigglue\/connectors\/Connector.html#retrieveUp():Seq[Input]", "kind" : "abstract def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Input]): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/Connector.html#sendDownModified(data:Seq[Input]):Unit", "kind" : "abstract def"}, {"label" : "sendDown", "tail" : "(data: Seq[Input]): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/Connector.html#sendDown(data:Seq[Input]):Unit", "kind" : "abstract def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.Connector.terminate", "link" : "bigglue\/connectors\/Connector.html#terminate():Unit", "kind" : "abstract def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.Connector.init", "link" : "bigglue\/connectors\/Connector.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "incr", "tail" : "(id: Id): Id", "member" : "bigglue.connectors.Connector.incr", "link" : "bigglue\/connectors\/Connector$.html#incr(id:bigglue.connectors.Connector.Id):bigglue.connectors.Connector.Id", "kind" : "def"}, {"label" : "Id", "tail" : "", "member" : "bigglue.connectors.Connector.Id", "link" : "bigglue\/connectors\/Connector$.html#Id=Long", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/Connector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/Connector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/Connector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/Connector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/Connector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/Connector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/Connector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Connector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/Connector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/Connector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/Connector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/Connector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/Connector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/Connector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/Connector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/Connector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/Connector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/Connector.html", "kind" : "object"}, {"name" : "bigglue.connectors.Event", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/connectors\/Event$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "bigglue\/connectors\/Event$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "bigglue\/connectors\/Event$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Event$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Modified", "tail" : ": Value", "member" : "bigglue.connectors.Event.Modified", "link" : "bigglue\/connectors\/Event$.html#Modified:bigglue.connectors.Event.Value", "kind" : "val"}, {"label" : "Added", "tail" : ": Value", "member" : "bigglue.connectors.Event.Added", "link" : "bigglue\/connectors\/Event$.html#Added:bigglue.connectors.Event.Value", "kind" : "val"}, {"label" : "Event", "tail" : "", "member" : "bigglue.connectors.Event.Event", "link" : "bigglue\/connectors\/Event$.html#Event=bigglue.connectors.Event.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Event$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Event$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Event$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Event$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "bigglue\/connectors\/Event$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "bigglue\/connectors\/Event$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "bigglue\/connectors\/Event$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "bigglue\/connectors\/Event$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "bigglue\/connectors\/Event$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "bigglue\/connectors\/Event$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "bigglue\/connectors\/Event$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "bigglue\/connectors\/Event$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/Event$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/Event$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/Event$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/Event$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/Event$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/Event$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/Event$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Event$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Event$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Event$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/Event$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/Event$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/Event$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/Event$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/Event$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/Event$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/Event$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/Event$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.connectors.Status", "shortDescription" : "", "object" : "bigglue\/connectors\/Status$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "bigglue\/connectors\/Status$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "bigglue\/connectors\/Status$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Status$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Error", "tail" : ": Value", "member" : "bigglue.connectors.Status.Error", "link" : "bigglue\/connectors\/Status$.html#Error:bigglue.connectors.Status.Value", "kind" : "val"}, {"label" : "Modified", "tail" : ": Value", "member" : "bigglue.connectors.Status.Modified", "link" : "bigglue\/connectors\/Status$.html#Modified:bigglue.connectors.Status.Value", "kind" : "val"}, {"label" : "NotDone", "tail" : ": Value", "member" : "bigglue.connectors.Status.NotDone", "link" : "bigglue\/connectors\/Status$.html#NotDone:bigglue.connectors.Status.Value", "kind" : "val"}, {"label" : "Done", "tail" : ": Value", "member" : "bigglue.connectors.Status.Done", "link" : "bigglue\/connectors\/Status$.html#Done:bigglue.connectors.Status.Value", "kind" : "val"}, {"label" : "Status", "tail" : "", "member" : "bigglue.connectors.Status.Status", "link" : "bigglue\/connectors\/Status$.html#Status=bigglue.connectors.Status.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Status$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Status$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Status$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "bigglue\/connectors\/Status$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "bigglue\/connectors\/Status$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "bigglue\/connectors\/Status$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "bigglue\/connectors\/Status$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "bigglue\/connectors\/Status$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "bigglue\/connectors\/Status$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "bigglue\/connectors\/Status$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "bigglue\/connectors\/Status$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "bigglue\/connectors\/Status$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/Status$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/Status$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/Status$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/Status$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/Status$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/Status$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/Status$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Status$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Status$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Status$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/Status$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/Status$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/Status$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/Status$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/Status$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/Status$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/Status$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/Status$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.connectors.Upstream", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/Upstream.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/Upstream.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Upstream[Data]) ⇒ Boolean, msg: ⇒ Any): Upstream[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Upstream.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Upstream[Data]) ⇒ Boolean): Upstream[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Upstream.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Upstream[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Upstream.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Upstream[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/Upstream.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Upstream[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/Upstream.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Upstream[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/Upstream.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/connectors\/Upstream.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/connectors\/Upstream.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/connectors\/Upstream.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/connectors\/Upstream.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/connectors\/Upstream.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/connectors\/Upstream.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/Upstream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/Upstream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/Upstream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/Upstream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/Upstream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/Upstream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/Upstream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Upstream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Upstream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/Upstream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/Upstream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/Upstream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/Upstream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/Upstream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/Upstream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/Upstream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/Upstream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/Upstream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/Upstream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/connectors\/Upstream.html", "kind" : "trait"}], "bigglue.connectors.instances" : [{"name" : "bigglue.connectors.instances.Accumulator", "shortDescription" : "Created by edmundlam on 8\/10\/17.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/Accumulator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/Accumulator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Accumulator[Data]) ⇒ Boolean, msg: ⇒ Any): Accumulator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Accumulator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Accumulator[Data]) ⇒ Boolean): Accumulator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Accumulator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Accumulator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Accumulator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Accumulator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Accumulator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Accumulator[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/Accumulator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Accumulator[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/Accumulator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.Accumulator.size", "link" : "bigglue\/connectors\/instances\/Accumulator.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.Accumulator.reportUp", "link" : "bigglue\/connectors\/instances\/Accumulator.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.Accumulator.retrieveUp", "link" : "bigglue\/connectors\/instances\/Accumulator.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.Accumulator.sendDownModified", "link" : "bigglue\/connectors\/instances\/Accumulator.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.Accumulator.sendDown", "link" : "bigglue\/connectors\/instances\/Accumulator.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.Accumulator.signalDown", "link" : "bigglue\/connectors\/instances\/Accumulator.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.Accumulator.terminate", "link" : "bigglue\/connectors\/instances\/Accumulator.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.Accumulator.init", "link" : "bigglue\/connectors\/instances\/Accumulator.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "dataStore", "tail" : ": DataStore[Data]", "member" : "bigglue.connectors.instances.Accumulator.dataStore", "link" : "bigglue\/connectors\/instances\/Accumulator.html#dataStore:bigglue.store.DataStore[Data]", "kind" : "val"}, {"member" : "bigglue.connectors.instances.Accumulator#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Int", "member" : "bigglue.connectors.instances.Accumulator.limit", "link" : "bigglue\/connectors\/instances\/Accumulator.html#limit:Int", "kind" : "val"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/Accumulator.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/Accumulator.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/Accumulator.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/Accumulator.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/Accumulator.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/Accumulator.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/Accumulator.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/instances\/Accumulator.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/Accumulator.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/Accumulator.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/Accumulator.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/Accumulator.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/Accumulator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/Accumulator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/Accumulator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/Accumulator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/Accumulator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/Accumulator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/Accumulator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Accumulator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Accumulator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Accumulator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/Accumulator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/Accumulator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/Accumulator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/Accumulator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/Accumulator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/Accumulator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/connectors\/instances\/Accumulator.html", "kind" : "case class"}, {"name" : "bigglue.connectors.instances.ActorConnector", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorConnector[Data]) ⇒ Boolean, msg: ⇒ Any): ActorConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorConnector[Data]) ⇒ Boolean): ActorConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActorConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActorConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActorConnector[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActorConnector[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.persist", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#persist(dataStore:bigglue.store.DataStore[Data]):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.ActorConnector.size", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.reportUp", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.ActorConnector.retrieveUp", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.sendDownModified", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.sendDown", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ActorConnector.signalDown", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ActorConnector.terminate", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#terminate():Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.ActorConnector.registerPlatform", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.ActorConnector.init", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.connectors.instances.ActorConnector.getActor", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "bigglue.connectors.instances.ActorConnector.getName", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#getName():String", "kind" : "def"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.connectors.instances.ActorConnector.actorRefOpt", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"member" : "bigglue.connectors.instances.ActorConnector#<init>", "error" : "unsupported entity"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/ActorConnector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "innerConnector", "tail" : ": Connector[Data]", "member" : "bigglue.connectors.instances.ActorConnector.innerConnector", "link" : "bigglue\/connectors\/instances\/ActorConnector.html#innerConnector:bigglue.connectors.Connector[Data]", "kind" : "abstract val"}], "class" : "bigglue\/connectors\/instances\/ActorConnector.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.ActorConnectorActor", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorConnectorActor[Data]) ⇒ Boolean, msg: ⇒ Any): ActorConnectorActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorConnectorActor[Data]) ⇒ Boolean): ActorConnectorActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActorConnectorActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActorConnectorActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActorConnectorActor[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActorConnectorActor[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.connectors.instances.ActorConnectorActor.receive", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#receive:ActorConnectorActor.this.Receive", "kind" : "def"}, {"member" : "bigglue.connectors.instances.ActorConnectorActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Persist", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.Persist", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#Persist[_]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Size", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.Size", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#SizeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ReportUp", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.ReportUp", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#ReportUp[Data]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "RetrieveUp", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.RetrieveUp", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#RetrieveUpextendsProductwithSerializable", "kind" : "case class"}, {"label" : "SendDownModified", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.SendDownModified", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#SendDownModified[Data]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "SendDown", "tail" : "", "member" : "bigglue.connectors.instances.ActorConnectorActor.SendDown", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#SendDown[Data]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "NAME", "tail" : ": String", "member" : "bigglue.connectors.instances.ActorConnectorActor.NAME", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#NAME:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorConnectorActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/ActorConnectorActor.html", "kind" : "object"}, {"name" : "bigglue.connectors.instances.ActorIncrTrackerJobQueue", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorIncrTrackerJobQueue[Data]) ⇒ Boolean, msg: ⇒ Any): ActorIncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActorIncrTrackerJobQueue[Data]) ⇒ Boolean): ActorIncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActorIncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActorIncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActorIncrTrackerJobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActorIncrTrackerJobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "innerConnector", "tail" : ": Connector[Data]", "member" : "bigglue.connectors.instances.ActorIncrTrackerJobQueue.innerConnector", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#innerConnector:bigglue.connectors.Connector[Data]", "kind" : "val"}, {"member" : "bigglue.connectors.instances.ActorIncrTrackerJobQueue#<init>", "error" : "unsupported entity"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.persist", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#persist(dataStore:bigglue.store.DataStore[Data]):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.ActorConnector.size", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.reportUp", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.ActorConnector.retrieveUp", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.sendDownModified", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ActorConnector.sendDown", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ActorConnector.signalDown", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ActorConnector.terminate", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.ActorConnector.registerPlatform", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.ActorConnector.init", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "getActor", "tail" : "(): ActorRef", "member" : "bigglue.connectors.instances.ActorConnector.getActor", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#getActor():akka.actor.ActorRef", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "bigglue.connectors.instances.ActorConnector.getName", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#getName():String", "kind" : "def"}, {"label" : "actorRefOpt", "tail" : ": Option[ActorRef]", "member" : "bigglue.connectors.instances.ActorConnector.actorRefOpt", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#actorRefOpt:Option[akka.actor.ActorRef]", "kind" : "var"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/ActorIncrTrackerJobQueue.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.Adaptor", "shortDescription" : "Created by edmundlam on 8\/30\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/Adaptor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/Adaptor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Adaptor[Source, Target]) ⇒ Boolean, msg: ⇒ Any): Adaptor[Source, Target]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Adaptor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Adaptor[Source, Target]) ⇒ Boolean): Adaptor[Source, Target]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Adaptor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Adaptor[Source, Target]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Adaptor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Adaptor[Source, Target]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/Adaptor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Adaptor[Source, Target], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/Adaptor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Adaptor[Source, Target], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/Adaptor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.Adaptor.size", "link" : "bigglue\/connectors\/instances\/Adaptor.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Target]): Unit", "member" : "bigglue.connectors.instances.Adaptor.reportUp", "link" : "bigglue\/connectors\/instances\/Adaptor.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Target]", "member" : "bigglue.connectors.instances.Adaptor.retrieveUp", "link" : "bigglue\/connectors\/instances\/Adaptor.html#retrieveUp():Seq[Target]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Target]): Unit", "member" : "bigglue.connectors.instances.Adaptor.sendDownModified", "link" : "bigglue\/connectors\/instances\/Adaptor.html#sendDownModified(data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Target]): Unit", "member" : "bigglue.connectors.instances.Adaptor.sendDown", "link" : "bigglue\/connectors\/instances\/Adaptor.html#sendDown(data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.Adaptor.terminate", "link" : "bigglue\/connectors\/instances\/Adaptor.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.Adaptor.init", "link" : "bigglue\/connectors\/instances\/Adaptor.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.connectors.instances.Adaptor#<init>", "error" : "unsupported entity"}, {"label" : "+>", "tail" : "(connector: Connector[Target]): Connector[Target]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/Adaptor.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Target): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/Adaptor.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Target): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/Adaptor.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Target): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/Adaptor.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.Connector.signalDown", "link" : "bigglue\/connectors\/instances\/Adaptor.html#signalDown():Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Target]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/Adaptor.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Target]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/Adaptor.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Target]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/Adaptor.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/instances\/Adaptor.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Target]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/Adaptor.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Target]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/Adaptor.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Target]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/Adaptor.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Target]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/Adaptor.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/Adaptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/Adaptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/Adaptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/Adaptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/Adaptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/Adaptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/Adaptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Adaptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Adaptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/Adaptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/Adaptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/Adaptor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/Adaptor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/Adaptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/Adaptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/Adaptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/Adaptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/Adaptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/Adaptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toSource", "tail" : "(target: Target): Source", "member" : "bigglue.connectors.instances.Adaptor.toSource", "link" : "bigglue\/connectors\/instances\/Adaptor.html#toSource(target:Target):Source", "kind" : "abstract def"}, {"label" : "toTarget", "tail" : "(source: Source): Target", "member" : "bigglue.connectors.instances.Adaptor.toTarget", "link" : "bigglue\/connectors\/instances\/Adaptor.html#toTarget(source:Source):Target", "kind" : "abstract def"}], "class" : "bigglue\/connectors\/instances\/Adaptor.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.IgnoreKeyAdaptor", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IgnoreKeyAdaptor[Key, Source]) ⇒ Boolean, msg: ⇒ Any): IgnoreKeyAdaptor[Key, Source]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IgnoreKeyAdaptor[Key, Source]) ⇒ Boolean): IgnoreKeyAdaptor[Key, Source]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IgnoreKeyAdaptor[Key, Source]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IgnoreKeyAdaptor[Key, Source]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IgnoreKeyAdaptor[Key, Source], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IgnoreKeyAdaptor[Key, Source], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toTarget", "tail" : "(source: Source): (Key, Source)", "member" : "bigglue.connectors.instances.IgnoreKeyAdaptor.toTarget", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#toTarget(source:Source):(Key,Source)", "kind" : "def"}, {"label" : "toSource", "tail" : "(target: (Key, Source)): Source", "member" : "bigglue.connectors.instances.IgnoreKeyAdaptor.toSource", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#toSource(target:(Key,Source)):Source", "kind" : "def"}, {"member" : "bigglue.connectors.instances.IgnoreKeyAdaptor#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.Adaptor.size", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[(Key, Source)]): Unit", "member" : "bigglue.connectors.instances.Adaptor.reportUp", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[(Key, Source)]", "member" : "bigglue.connectors.instances.Adaptor.retrieveUp", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#retrieveUp():Seq[Target]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[(Key, Source)]): Unit", "member" : "bigglue.connectors.instances.Adaptor.sendDownModified", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#sendDownModified(data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[(Key, Source)]): Unit", "member" : "bigglue.connectors.instances.Adaptor.sendDown", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#sendDown(data:Seq[Target]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.Adaptor.terminate", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.Adaptor.init", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "+>", "tail" : "(connector: Connector[(Key, Source)]): Connector[(Key, Source)]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: (Key, Source)): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: (Key, Source)): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: (Key, Source)): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.Connector.signalDown", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#signalDown():Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[(Key, Source)]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[(Key, Source)]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[(Key, Source)]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[(Key, Source)]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[(Key, Source)]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[(Key, Source)]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[(Key, Source)]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/IgnoreKeyAdaptor.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.IncrTrackerJobQueue", "shortDescription" : "This is a Connector that has a status map attached to it.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IncrTrackerJobQueue[Data]) ⇒ Boolean, msg: ⇒ Any): IncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IncrTrackerJobQueue[Data]) ⇒ Boolean): IncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IncrTrackerJobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IncrTrackerJobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IncrTrackerJobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.reportUp", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.retrieveUp", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.persist", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#persist(dataStore:bigglue.store.DataStore[Data]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.registerPlatform", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.sendDownModified", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.sendDown", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "getStatusMap", "tail" : "(): DataMultiMap[Status, Data]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.getStatusMap", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#getStatusMap():bigglue.store.DataMultiMap[bigglue.connectors.Status.Status,Data]", "kind" : "def"}, {"label" : "iMap", "tail" : "(): DataStore[Data]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.iMap", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#iMap:bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "textMap", "tail" : "(): TextFileDataMap", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.textMap", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#textMap:bigglue.store.instances.file.TextFileDataMap", "kind" : "def"}, {"label" : "ver", "tail" : ": Option[String]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.ver", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ver:Option[String]", "kind" : "var"}, {"label" : "iMapOpt", "tail" : ": Option[DataStore[Data]]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.iMapOpt", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#iMapOpt:Option[bigglue.store.DataStore[Data]]", "kind" : "var"}, {"label" : "textMapOpt", "tail" : ": Option[TextFileDataMap]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.textMapOpt", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#textMapOpt:Option[bigglue.store.instances.file.TextFileDataMap]", "kind" : "var"}, {"label" : "statusMap", "tail" : ": DataMultiMap[Status, Data]", "member" : "bigglue.connectors.instances.IncrTrackerJobQueue.statusMap", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#statusMap:bigglue.store.DataMultiMap[bigglue.connectors.Status.Status,Data]", "kind" : "val"}, {"member" : "bigglue.connectors.instances.IncrTrackerJobQueue#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.JobQueue.size", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#size():Int", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.JobQueue.signalDown", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.JobQueue.terminate", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.JobQueue.init", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "queue", "tail" : ": DataQueue[Data]", "member" : "bigglue.connectors.instances.JobQueue.queue", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#queue:bigglue.store.DataQueue[Data]", "kind" : "var"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/IncrTrackerJobQueue.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.JobQueue", "shortDescription" : "This is a Connector that's the superclass to IncrTrackerJobQueue.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/JobQueue.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/JobQueue.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JobQueue[Data]) ⇒ Boolean, msg: ⇒ Any): JobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/JobQueue.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JobQueue[Data]) ⇒ Boolean): JobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/JobQueue.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): JobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/JobQueue.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): JobQueue[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/JobQueue.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (JobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/JobQueue.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (JobQueue[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/JobQueue.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.JobQueue.size", "link" : "bigglue\/connectors\/instances\/JobQueue.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.JobQueue.reportUp", "link" : "bigglue\/connectors\/instances\/JobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.JobQueue.retrieveUp", "link" : "bigglue\/connectors\/instances\/JobQueue.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.JobQueue.sendDownModified", "link" : "bigglue\/connectors\/instances\/JobQueue.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.JobQueue.sendDown", "link" : "bigglue\/connectors\/instances\/JobQueue.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.JobQueue.signalDown", "link" : "bigglue\/connectors\/instances\/JobQueue.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.JobQueue.terminate", "link" : "bigglue\/connectors\/instances\/JobQueue.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.JobQueue.init", "link" : "bigglue\/connectors\/instances\/JobQueue.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "queue", "tail" : ": DataQueue[Data]", "member" : "bigglue.connectors.instances.JobQueue.queue", "link" : "bigglue\/connectors\/instances\/JobQueue.html#queue:bigglue.store.DataQueue[Data]", "kind" : "var"}, {"member" : "bigglue.connectors.instances.JobQueue#<init>", "error" : "unsupported entity"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/JobQueue.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/JobQueue.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/JobQueue.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/JobQueue.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/JobQueue.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/JobQueue.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/JobQueue.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/instances\/JobQueue.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/JobQueue.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/JobQueue.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/JobQueue.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/JobQueue.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/JobQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/JobQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/JobQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/JobQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/JobQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/JobQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/JobQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/JobQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/JobQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/JobQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/JobQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/JobQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/JobQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/JobQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/JobQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/JobQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/JobQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/JobQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/JobQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/JobQueue.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.OpenTheFloodGates", "shortDescription" : "Created by chanceroberts on 11\/16\/17.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OpenTheFloodGates) ⇒ Boolean, msg: ⇒ Any): OpenTheFloodGates", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OpenTheFloodGates) ⇒ Boolean): OpenTheFloodGates", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): OpenTheFloodGates", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OpenTheFloodGates", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OpenTheFloodGates, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OpenTheFloodGates, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.connectors.instances.OpenTheFloodGates#<init>", "error" : "unsupported entity"}, {"label" : "send", "tail" : ": Int", "member" : "bigglue.connectors.instances.OpenTheFloodGates.send", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#send:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/connectors\/instances\/OpenTheFloodGates.html", "kind" : "case class"}, {"name" : "bigglue.connectors.instances.ParallelConnectors", "shortDescription" : "Created by edmundlam on 8\/13\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelConnectors[Data]) ⇒ Boolean, msg: ⇒ Any): ParallelConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelConnectors[Data]) ⇒ Boolean): ParallelConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ParallelConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ParallelConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ParallelConnectors[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ParallelConnectors[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.ParallelConnectors.size", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.reportUp", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.ParallelConnectors.retrieveUp", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.sendDownModified", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.sendDown", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.signalDown", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#signalDown():Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.registerPlatform", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.terminate", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.ParallelConnectors.init", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.connectors.instances.ParallelConnectors#<init>", "error" : "unsupported entity"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/ParallelConnectors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/ParallelConnectors.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.PlatformStub", "shortDescription" : "This is a wrapper for the platform as a connector.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PlatformStub[Data]) ⇒ Boolean, msg: ⇒ Any): PlatformStub[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PlatformStub[Data]) ⇒ Boolean): PlatformStub[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PlatformStub[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PlatformStub[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PlatformStub[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PlatformStub[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.PlatformStub.size", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, ids: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.PlatformStub.reportUp", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#reportUp(status:bigglue.connectors.Status.Status,ids:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.PlatformStub.retrieveUp", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.PlatformStub.sendDownModified", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.PlatformStub.sendDown", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.PlatformStub.signalDown", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#signalDown():Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.PlatformStub.terminate", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.PlatformStub.init", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.connectors.instances.PlatformStub#<init>", "error" : "unsupported entity"}, {"label" : "platform", "tail" : ": Platform", "member" : "bigglue.connectors.instances.PlatformStub.platform", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#platform:bigglue.platforms.Platform", "kind" : "val"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.Connector.registerPlatform", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/PlatformStub.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/PlatformStub.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/connectors\/instances\/PlatformStub.html", "kind" : "case class"}, {"name" : "bigglue.connectors.instances.SequencedConnectors", "shortDescription" : "Created by edmundlam on 8\/9\/17.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequencedConnectors[Data]) ⇒ Boolean, msg: ⇒ Any): SequencedConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequencedConnectors[Data]) ⇒ Boolean): SequencedConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SequencedConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SequencedConnectors[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SequencedConnectors[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SequencedConnectors[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.SequencedConnectors.size", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.reportUp", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.SequencedConnectors.retrieveUp", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.sendDownModified", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.sendDown", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.signalDown", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#signalDown():Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.registerPlatform", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.terminate", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.SequencedConnectors.init", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"member" : "bigglue.connectors.instances.SequencedConnectors#<init>", "error" : "unsupported entity"}, {"label" : "endConnector", "tail" : ": Connector[Data]", "member" : "bigglue.connectors.instances.SequencedConnectors.endConnector", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#endConnector:bigglue.connectors.Connector[Data]", "kind" : "val"}, {"label" : "headConnector", "tail" : ": Connector[Data]", "member" : "bigglue.connectors.instances.SequencedConnectors.headConnector", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#headConnector:bigglue.connectors.Connector[Data]", "kind" : "val"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Connector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/SequencedConnectors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/connectors\/instances\/SequencedConnectors.html", "kind" : "case class"}, {"name" : "bigglue.connectors.instances.WaitingActor", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaitingActor[Data]) ⇒ Boolean, msg: ⇒ Any): WaitingActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaitingActor[Data]) ⇒ Boolean): WaitingActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): WaitingActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): WaitingActor[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (WaitingActor[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (WaitingActor[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "bigglue.connectors.instances.WaitingActor.receive", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#receive:WaitingActor.this.Receive", "kind" : "def"}, {"member" : "bigglue.connectors.instances.WaitingActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/WaitingActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/WaitingActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/WaitingActor.html", "kind" : "class"}, {"name" : "bigglue.connectors.instances.WaitingConnector", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaitingConnector[Data]) ⇒ Boolean, msg: ⇒ Any): WaitingConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaitingConnector[Data]) ⇒ Boolean): WaitingConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): WaitingConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): WaitingConnector[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (WaitingConnector[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (WaitingConnector[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.terminate", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#terminate():Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.connectors.instances.WaitingConnector.size", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#size():Int", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.reportUp", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#reportUp(status:bigglue.connectors.Status.Status,data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "signalDown", "tail" : "(): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.signalDown", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#signalDown():Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.sendDown", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#sendDown(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.sendDownModified", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#sendDownModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "reallySendDown", "tail" : "(send: Int): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.reallySendDown", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#reallySendDown(send:Int):Unit", "kind" : "def"}, {"label" : "registerUpstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.registerUpstreamConnector", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#registerUpstreamConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "registerDownstreamConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.registerDownstreamConnector", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#registerDownstreamConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "registerPlatform", "tail" : "(platform: Platform): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.registerPlatform", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#registerPlatform(platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "retrieveUp", "tail" : "(): Seq[Data]", "member" : "bigglue.connectors.instances.WaitingConnector.retrieveUp", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#retrieveUp():Seq[Data]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.connectors.instances.WaitingConnector.init", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.connectors.instances.WaitingConnector.name", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#name:String", "kind" : "var"}, {"label" : "uniqueOpt", "tail" : ": Option[Boolean]", "member" : "bigglue.connectors.instances.WaitingConnector.uniqueOpt", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#uniqueOpt:Option[Boolean]", "kind" : "var"}, {"label" : "floodGates", "tail" : ": ActorRef", "member" : "bigglue.connectors.instances.WaitingConnector.floodGates", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#floodGates:akka.actor.ActorRef", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": ExecutionContextExecutor", "member" : "bigglue.connectors.instances.WaitingConnector.dispatcher", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#dispatcher:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit val"}, {"label" : "actorSystem", "tail" : ": ActorSystem", "member" : "bigglue.connectors.instances.WaitingConnector.actorSystem", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#actorSystem:akka.actor.ActorSystem", "kind" : "val"}, {"label" : "floodList", "tail" : ": InMemDataQueue[(Boolean, Data)]", "member" : "bigglue.connectors.instances.WaitingConnector.floodList", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#floodList:bigglue.store.instances.InMemDataQueue[(Boolean,Data)]", "kind" : "val"}, {"label" : "unique", "tail" : "(): Boolean", "member" : "bigglue.connectors.instances.WaitingConnector.unique", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#unique:Boolean", "kind" : "def"}, {"label" : "connector", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.instances.WaitingConnector.connector", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#connector:bigglue.connectors.Connector[Data]", "kind" : "def"}, {"label" : "connectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.instances.WaitingConnector.connectorOpt", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#connectorOpt:Option[bigglue.connectors.Connector[Data]]", "kind" : "var"}, {"member" : "bigglue.connectors.instances.WaitingConnector#<init>", "error" : "unsupported entity"}, {"label" : "+>", "tail" : "(connector: Connector[Data]): Connector[Data]", "member" : "bigglue.connectors.Connector.+>", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#+>(connector:bigglue.connectors.Connector[Input]):bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "reportUp", "tail" : "(status: Status, data: Data): Unit", "member" : "bigglue.connectors.Connector.reportUp", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#reportUp(status:bigglue.connectors.Status.Status,data:Input):Unit", "kind" : "def"}, {"label" : "sendDownModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDownModified", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#sendDownModified(data:Input):Unit", "kind" : "def"}, {"label" : "sendDown", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Connector.sendDown", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#sendDown(data:Input):Unit", "kind" : "def"}, {"label" : "getDownstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getDownstream", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#getDownstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "getUpstream", "tail" : "(): Connector[Data]", "member" : "bigglue.connectors.Connector.getUpstream", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#getUpstream():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "persist", "tail" : "(dataStore: DataStore[Data]): Unit", "member" : "bigglue.connectors.Connector.persist", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#persist(dataStore:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "downstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.downstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#downstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Data]]", "member" : "bigglue.connectors.Connector.upstreamConnectorOpt", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/connectors\/instances\/WaitingConnector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/connectors\/instances\/WaitingConnector.html", "kind" : "class"}], "bigglue.platforms.instances" : [{"name" : "bigglue.platforms.instances.MapperPlatform", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapperPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): MapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MapperPlatform[Input, Output]) ⇒ Boolean): MapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MapperPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MapperPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "tryComputeThenStore", "tail" : "(mapper: Mapper[Input, Output], input: Input, outputMap: DataStore[Output]): List[Output]", "member" : "bigglue.platforms.instances.MapperPlatform.tryComputeThenStore", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#tryComputeThenStore(mapper:bigglue.computations.Mapper[Input,Output],input:Input,outputMap:bigglue.store.DataStore[Output]):List[Output]", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.MapperPlatform.terminate", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#terminate():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.instances.MapperPlatform.run", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#run():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder, mapper: Mapper[Input, Output]): Unit", "member" : "bigglue.platforms.instances.MapperPlatform.init", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder,mapper:bigglue.computations.Mapper[Input,Output]):Unit", "kind" : "def"}, {"label" : "mapperOpt", "tail" : ": Option[Mapper[Input, Output]]", "member" : "bigglue.platforms.instances.MapperPlatform.mapperOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#mapperOpt:Option[bigglue.computations.Mapper[Input,Output]]", "kind" : "var"}, {"member" : "bigglue.platforms.instances.MapperPlatform#<init>", "error" : "unsupported entity"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.initConnector", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.init", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.wake", "link" : "bigglue\/platforms\/instances\/MapperPlatform.html#wake():Unit", "kind" : "abstract def"}], "class" : "bigglue\/platforms\/instances\/MapperPlatform.html", "kind" : "class"}], "bigglue.platforms" : [{"name" : "bigglue.platforms.BinaryPlatform", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/BinaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/BinaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryPlatform[InputL, InputR, Output]) ⇒ Boolean, msg: ⇒ Any): BinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/BinaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinaryPlatform[InputL, InputR, Output]) ⇒ Boolean): BinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/BinaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/BinaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BinaryPlatform[InputL, InputR, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/BinaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/BinaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BinaryPlatform[InputL, InputR, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/BinaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.BinaryPlatform.persist", "link" : "bigglue\/platforms\/BinaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): (Seq[InputL], Seq[InputR], Seq[Pair[InputL, InputR]])", "member" : "bigglue.platforms.BinaryPlatform.getInputs", "link" : "bigglue\/platforms\/BinaryPlatform.html#getInputs():(Seq[InputL],Seq[InputR],Seq[bigglue.data.Pair[InputL,InputR]])", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.BinaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/BinaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputRMap", "tail" : "(): DataStore[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getInputRMap", "link" : "bigglue\/platforms\/BinaryPlatform.html#getInputRMap():bigglue.store.DataStore[InputR]", "kind" : "def"}, {"label" : "getInputLMap", "tail" : "(): DataStore[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getInputLMap", "link" : "bigglue\/platforms\/BinaryPlatform.html#getInputLMap():bigglue.store.DataStore[InputL]", "kind" : "def"}, {"label" : "getPairErrorCurator", "tail" : "(): ErrorCurator[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairErrorCurator", "link" : "bigglue\/platforms\/BinaryPlatform.html#getPairErrorCurator():bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getRightErrorCurator", "tail" : "(): ErrorCurator[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getRightErrorCurator", "link" : "bigglue\/platforms\/BinaryPlatform.html#getRightErrorCurator():bigglue.curators.ErrorCurator[InputR]", "kind" : "def"}, {"label" : "getLeftErrorCurator", "tail" : "(): ErrorCurator[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getLeftErrorCurator", "link" : "bigglue\/platforms\/BinaryPlatform.html#getLeftErrorCurator():bigglue.curators.ErrorCurator[InputL]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.BinaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/BinaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Pair[InputL, InputR], Output]", "member" : "bigglue.platforms.BinaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/BinaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]", "kind" : "def"}, {"label" : "getPairConnector", "tail" : "(): Connector[Pair[InputL, InputR]]", "member" : "bigglue.platforms.BinaryPlatform.getPairConnector", "link" : "bigglue\/platforms\/BinaryPlatform.html#getPairConnector():bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]", "kind" : "def"}, {"label" : "getUpstreamRConnector", "tail" : "(): Connector[InputR]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamRConnector", "link" : "bigglue\/platforms\/BinaryPlatform.html#getUpstreamRConnector():bigglue.connectors.Connector[InputR]", "kind" : "def"}, {"label" : "getUpstreamLConnector", "tail" : "(): Connector[InputL]", "member" : "bigglue.platforms.BinaryPlatform.getUpstreamLConnector", "link" : "bigglue\/platforms\/BinaryPlatform.html#getUpstreamLConnector():bigglue.connectors.Connector[InputL]", "kind" : "def"}, {"label" : "initConnectors", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.BinaryPlatform.initConnectors", "link" : "bigglue\/platforms\/BinaryPlatform.html#initConnectors(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.BinaryPlatform.init", "link" : "bigglue\/platforms\/BinaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.BinaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputRMapOpt", "tail" : ": Option[DataStore[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.inputRMapOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#inputRMapOpt:Option[bigglue.store.DataStore[InputR]]", "kind" : "var"}, {"label" : "inputLMapOpt", "tail" : ": Option[DataStore[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.inputLMapOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#inputLMapOpt:Option[bigglue.store.DataStore[InputL]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.BinaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorPairCuratorOpt", "tail" : ": Option[ErrorCurator[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.errorPairCuratorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#errorPairCuratorOpt:Option[bigglue.curators.ErrorCurator[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "errorRightCuratorOpt", "tail" : ": Option[ErrorCurator[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.errorRightCuratorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#errorRightCuratorOpt:Option[bigglue.curators.ErrorCurator[InputR]]", "kind" : "var"}, {"label" : "errorLeftCuratorOpt", "tail" : ": Option[ErrorCurator[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.errorLeftCuratorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#errorLeftCuratorOpt:Option[bigglue.curators.ErrorCurator[InputL]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Pair[InputL, InputR], Output]]", "member" : "bigglue.platforms.BinaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[bigglue.data.Pair[InputL,InputR],Output]]", "kind" : "var"}, {"label" : "pairConnectorOpt", "tail" : ": Option[Connector[Pair[InputL, InputR]]]", "member" : "bigglue.platforms.BinaryPlatform.pairConnectorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#pairConnectorOpt:Option[bigglue.connectors.Connector[bigglue.data.Pair[InputL,InputR]]]", "kind" : "var"}, {"label" : "upstreamRConnectorOpt", "tail" : ": Option[Connector[InputR]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamRConnectorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#upstreamRConnectorOpt:Option[bigglue.connectors.Connector[InputR]]", "kind" : "var"}, {"label" : "upstreamLConnectorOpt", "tail" : ": Option[Connector[InputL]]", "member" : "bigglue.platforms.BinaryPlatform.upstreamLConnectorOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#upstreamLConnectorOpt:Option[bigglue.connectors.Connector[InputL]]", "kind" : "var"}, {"member" : "bigglue.platforms.BinaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputLMap: DataStore[InputL], inputRMap: DataStore[InputR], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.BinaryChecker.check", "link" : "bigglue\/platforms\/BinaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputLMap:bigglue.store.DataStore[InputL],inputRMap:bigglue.store.DataStore[InputR],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/BinaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInputR", "tail" : "(inputRMap: DataStore[InputR]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputR", "link" : "bigglue\/platforms\/BinaryPlatform.html#checkInputR(inputRMap:bigglue.store.DataStore[InputR]):Unit", "kind" : "def"}, {"label" : "checkInputL", "tail" : "(inputLMap: DataStore[InputL]): Unit", "member" : "bigglue.checkers.InputStoresChecker.checkInputL", "link" : "bigglue\/platforms\/BinaryPlatform.html#checkInputL(inputLMap:bigglue.store.DataStore[InputL]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/BinaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/BinaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/BinaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/BinaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/BinaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/BinaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/BinaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/BinaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/BinaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/BinaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/BinaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/BinaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/BinaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/BinaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/BinaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/BinaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/BinaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/BinaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/BinaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/BinaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/BinaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/BinaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/BinaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.wake", "link" : "bigglue\/platforms\/BinaryPlatform.html#wake():Unit", "kind" : "abstract def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.terminate", "link" : "bigglue\/platforms\/BinaryPlatform.html#terminate():Unit", "kind" : "abstract def"}], "class" : "bigglue\/platforms\/BinaryPlatform.html", "kind" : "class"}, {"name" : "bigglue.platforms.Platform", "shortDescription" : "This is the place where we pass the data in through the computation engine.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/Platform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/Platform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Platform) ⇒ Boolean, msg: ⇒ Any): Platform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/Platform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Platform) ⇒ Boolean): Platform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/Platform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Platform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/Platform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Platform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/Platform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Platform, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/Platform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Platform, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/Platform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/Platform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/Platform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/Platform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"member" : "bigglue.platforms.Platform#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/Platform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/Platform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/Platform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/Platform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/Platform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/Platform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/Platform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/Platform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/Platform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/Platform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/Platform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/Platform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/Platform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/Platform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/Platform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/Platform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/Platform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/Platform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/Platform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.wake", "link" : "bigglue\/platforms\/Platform.html#wake():Unit", "kind" : "abstract def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.persist", "link" : "bigglue\/platforms\/Platform.html#persist():Unit", "kind" : "abstract def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.terminate", "link" : "bigglue\/platforms\/Platform.html#terminate():Unit", "kind" : "abstract def"}], "class" : "bigglue\/platforms\/Platform.html", "kind" : "class"}, {"name" : "bigglue.platforms.UnaryPlatform", "shortDescription" : "This is a type of platform that only deals with one input.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/platforms\/UnaryPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/platforms\/UnaryPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryPlatform[Input, Output]) ⇒ Boolean, msg: ⇒ Any): UnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/UnaryPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnaryPlatform[Input, Output]) ⇒ Boolean): UnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/UnaryPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/UnaryPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnaryPlatform[Input, Output]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/platforms\/UnaryPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/platforms\/UnaryPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnaryPlatform[Input, Output], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/platforms\/UnaryPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "updatedVersion", "tail" : "(ver: Option[String]): Boolean", "member" : "bigglue.platforms.UnaryPlatform.updatedVersion", "link" : "bigglue\/platforms\/UnaryPlatform.html#updatedVersion(ver:Option[String]):Boolean", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.platforms.UnaryPlatform.persist", "link" : "bigglue\/platforms\/UnaryPlatform.html#persist():Unit", "kind" : "def"}, {"label" : "getInputs", "tail" : "(): Seq[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputs", "link" : "bigglue\/platforms\/UnaryPlatform.html#getInputs():Seq[Input]", "kind" : "def"}, {"label" : "getOutputMap", "tail" : "(): DataStore[Output]", "member" : "bigglue.platforms.UnaryPlatform.getOutputMap", "link" : "bigglue\/platforms\/UnaryPlatform.html#getOutputMap():bigglue.store.DataStore[Output]", "kind" : "def"}, {"label" : "getInputMap", "tail" : "(): DataStore[Input]", "member" : "bigglue.platforms.UnaryPlatform.getInputMap", "link" : "bigglue\/platforms\/UnaryPlatform.html#getInputMap():bigglue.store.DataStore[Input]", "kind" : "def"}, {"label" : "getVersionCurator", "tail" : "(): VersionCurator[Output]", "member" : "bigglue.platforms.UnaryPlatform.getVersionCurator", "link" : "bigglue\/platforms\/UnaryPlatform.html#getVersionCurator():bigglue.curators.VersionCurator[Output]", "kind" : "def"}, {"label" : "getErrorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.platforms.UnaryPlatform.getErrorCurator", "link" : "bigglue\/platforms\/UnaryPlatform.html#getErrorCurator():bigglue.curators.ErrorCurator[Input]", "kind" : "def"}, {"label" : "getProvenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.platforms.UnaryPlatform.getProvenanceCurator", "link" : "bigglue\/platforms\/UnaryPlatform.html#getProvenanceCurator():bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "def"}, {"label" : "getUpstreamConnector", "tail" : "(): Connector[Input]", "member" : "bigglue.platforms.UnaryPlatform.getUpstreamConnector", "link" : "bigglue\/platforms\/UnaryPlatform.html#getUpstreamConnector():bigglue.connectors.Connector[Input]", "kind" : "def"}, {"label" : "initConnector", "tail" : "(conf: PipeConfig, builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.initConnector", "link" : "bigglue\/platforms\/UnaryPlatform.html#initConnector(conf:bigglue.configurations.PipeConfig,builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output], builder: PlatformBuilder): Unit", "member" : "bigglue.platforms.UnaryPlatform.init", "link" : "bigglue\/platforms\/UnaryPlatform.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],builder:bigglue.configurations.PlatformBuilder):Unit", "kind" : "def"}, {"label" : "outputMapOpt", "tail" : ": Option[DataStore[Output]]", "member" : "bigglue.platforms.UnaryPlatform.outputMapOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#outputMapOpt:Option[bigglue.store.DataStore[Output]]", "kind" : "var"}, {"label" : "inputMapOpt", "tail" : ": Option[DataStore[Input]]", "member" : "bigglue.platforms.UnaryPlatform.inputMapOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#inputMapOpt:Option[bigglue.store.DataStore[Input]]", "kind" : "var"}, {"label" : "versionCuratorOpt", "tail" : ": Option[VersionCurator[Output]]", "member" : "bigglue.platforms.UnaryPlatform.versionCuratorOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#versionCuratorOpt:Option[bigglue.curators.VersionCurator[Output]]", "kind" : "var"}, {"label" : "errorCuratorOpt", "tail" : ": Option[ErrorCurator[Input]]", "member" : "bigglue.platforms.UnaryPlatform.errorCuratorOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#errorCuratorOpt:Option[bigglue.curators.ErrorCurator[Input]]", "kind" : "var"}, {"label" : "provenanceCuratorOpt", "tail" : ": Option[ProvenanceCurator[Input, Output]]", "member" : "bigglue.platforms.UnaryPlatform.provenanceCuratorOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#provenanceCuratorOpt:Option[bigglue.curators.ProvenanceCurator[Input,Output]]", "kind" : "var"}, {"label" : "upstreamConnectorOpt", "tail" : ": Option[Connector[Input]]", "member" : "bigglue.platforms.UnaryPlatform.upstreamConnectorOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#upstreamConnectorOpt:Option[bigglue.connectors.Connector[Input]]", "kind" : "var"}, {"member" : "bigglue.platforms.UnaryPlatform#<init>", "error" : "unsupported entity"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[Input], outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/platforms\/UnaryPlatform.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[Output]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/platforms\/UnaryPlatform.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[Input]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/platforms\/UnaryPlatform.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/platforms\/UnaryPlatform.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.run", "link" : "bigglue\/platforms\/UnaryPlatform.html#run():Unit", "kind" : "def"}, {"label" : "setComputation", "tail" : "(computation: Computation): Platform", "member" : "bigglue.platforms.Platform.setComputation", "link" : "bigglue\/platforms\/UnaryPlatform.html#setComputation(computation:bigglue.computations.Computation):bigglue.platforms.Platform", "kind" : "def"}, {"label" : "computationOpt", "tail" : ": Option[Computation]", "member" : "bigglue.platforms.Platform.computationOpt", "link" : "bigglue\/platforms\/UnaryPlatform.html#computationOpt:Option[bigglue.computations.Computation]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/platforms\/UnaryPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/platforms\/UnaryPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/platforms\/UnaryPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/platforms\/UnaryPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/platforms\/UnaryPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/platforms\/UnaryPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/platforms\/UnaryPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/UnaryPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/UnaryPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/platforms\/UnaryPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/platforms\/UnaryPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/platforms\/UnaryPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/platforms\/UnaryPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/platforms\/UnaryPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/platforms\/UnaryPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/platforms\/UnaryPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/platforms\/UnaryPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/platforms\/UnaryPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/platforms\/UnaryPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wake", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.wake", "link" : "bigglue\/platforms\/UnaryPlatform.html#wake():Unit", "kind" : "abstract def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.platforms.Platform.terminate", "link" : "bigglue\/platforms\/UnaryPlatform.html#terminate():Unit", "kind" : "abstract def"}], "class" : "bigglue\/platforms\/UnaryPlatform.html", "kind" : "class"}], "bigglue.examples" : [{"name" : "bigglue.examples.Clone", "shortDescription" : "This is a simple Mapper step that clones a GitID and gives back the GitRepo.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/Clone.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/Clone.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Clone) ⇒ Boolean, msg: ⇒ Any): Clone", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/Clone.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Clone) ⇒ Boolean): Clone", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/Clone.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Clone", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/Clone.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Clone", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/Clone.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Clone, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/Clone.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Clone, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/Clone.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.examples.Clone#<init>", "error" : "unsupported entity"}, {"label" : "repoFolderLocation", "tail" : ": String", "member" : "bigglue.examples.Clone.repoFolderLocation", "link" : "bigglue\/examples\/Clone.html#repoFolderLocation:String", "kind" : "val"}, {"label" : "-->", "tail" : "(p: Pipe[GitRepo, End]): PartialMapperPipe[GitID, GitRepo, End]", "member" : "bigglue.computations.Mapper.-->", "link" : "bigglue\/examples\/Clone.html#-->[End<:bigglue.data.Identifiable[End]](p:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialMapperPipe[Input,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Mapper.run", "link" : "bigglue\/examples\/Clone.html#run():Unit", "kind" : "def"}, {"label" : "tryCompute", "tail" : "(input: GitID): Option[List[GitRepo]]", "member" : "bigglue.computations.Mapper.tryCompute", "link" : "bigglue\/examples\/Clone.html#tryCompute(input:Input):Option[List[Output]]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitID], outputMap: DataStore[GitRepo]): Unit", "member" : "bigglue.computations.Mapper.init", "link" : "bigglue\/examples\/Clone.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): Mapper[GitID, GitRepo]", "member" : "bigglue.computations.Mapper.withConfig", "link" : "bigglue\/examples\/Clone.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.Mapper[Input,Output]", "kind" : "def"}, {"label" : "getOp", "tail" : "(): (GitID) ⇒ List[GitRepo]", "member" : "bigglue.computations.Mapper.getOp", "link" : "bigglue\/examples\/Clone.html#getOp:Input=>List[Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitID], outputMap: DataStore[GitRepo], platform: UnaryPlatform[GitID, GitRepo]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/examples\/Clone.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[GitID, GitRepo]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/examples\/Clone.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[GitID, GitRepo]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/Clone.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[GitID, GitRepo]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/examples\/Clone.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/Clone.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitID], outputMap: DataStore[GitRepo]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/examples\/Clone.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[GitRepo]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/examples\/Clone.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[GitID]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/examples\/Clone.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/examples\/Clone.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/examples\/Clone.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/examples\/Clone.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/examples\/Clone.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/examples\/Clone.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/examples\/Clone.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/examples\/Clone.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/examples\/Clone.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/examples\/Clone.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/examples\/Clone.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/examples\/Clone.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/examples\/Clone.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/Clone.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/Clone.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/Clone.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/Clone.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/Clone.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/Clone.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/Clone.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/Clone.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/Clone.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/Clone.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/Clone.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/Clone.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/Clone.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/Clone.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/Clone.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/Clone.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/Clone.html", "kind" : "case class"}, {"name" : "bigglue.examples.CommitExtraction", "shortDescription" : "This is a simple Mapper step that takes a GitRepo and gives back the GitCommits and the GitCommitInfos that we need.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/CommitExtraction.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/CommitExtraction.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CommitExtraction) ⇒ Boolean, msg: ⇒ Any): CommitExtraction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/CommitExtraction.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CommitExtraction) ⇒ Boolean): CommitExtraction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/CommitExtraction.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CommitExtraction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/CommitExtraction.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CommitExtraction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/CommitExtraction.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CommitExtraction, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/CommitExtraction.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CommitExtraction, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/CommitExtraction.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.examples.CommitExtraction#<init>", "error" : "unsupported entity"}, {"label" : "-->", "tail" : "(p: Pipe[GitCommitInfo, End]): PartialMapperPipe[GitRepo, GitCommitInfo, End]", "member" : "bigglue.computations.Mapper.-->", "link" : "bigglue\/examples\/CommitExtraction.html#-->[End<:bigglue.data.Identifiable[End]](p:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialMapperPipe[Input,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Mapper.run", "link" : "bigglue\/examples\/CommitExtraction.html#run():Unit", "kind" : "def"}, {"label" : "tryCompute", "tail" : "(input: GitRepo): Option[List[GitCommitInfo]]", "member" : "bigglue.computations.Mapper.tryCompute", "link" : "bigglue\/examples\/CommitExtraction.html#tryCompute(input:Input):Option[List[Output]]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitRepo], outputMap: DataStore[GitCommitInfo]): Unit", "member" : "bigglue.computations.Mapper.init", "link" : "bigglue\/examples\/CommitExtraction.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): Mapper[GitRepo, GitCommitInfo]", "member" : "bigglue.computations.Mapper.withConfig", "link" : "bigglue\/examples\/CommitExtraction.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.Mapper[Input,Output]", "kind" : "def"}, {"label" : "getOp", "tail" : "(): (GitRepo) ⇒ List[GitCommitInfo]", "member" : "bigglue.computations.Mapper.getOp", "link" : "bigglue\/examples\/CommitExtraction.html#getOp:Input=>List[Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitRepo], outputMap: DataStore[GitCommitInfo], platform: UnaryPlatform[GitRepo, GitCommitInfo]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/examples\/CommitExtraction.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[GitRepo, GitCommitInfo]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/examples\/CommitExtraction.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[GitRepo, GitCommitInfo]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/CommitExtraction.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[GitRepo, GitCommitInfo]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/examples\/CommitExtraction.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/CommitExtraction.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitRepo], outputMap: DataStore[GitCommitInfo]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/examples\/CommitExtraction.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[GitCommitInfo]): Unit", "member" : "bigglue.checkers.OutputStoreChecker.checkOutput", "link" : "bigglue\/examples\/CommitExtraction.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[GitRepo]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/examples\/CommitExtraction.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/examples\/CommitExtraction.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/examples\/CommitExtraction.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/examples\/CommitExtraction.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/examples\/CommitExtraction.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/examples\/CommitExtraction.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/examples\/CommitExtraction.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/examples\/CommitExtraction.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/examples\/CommitExtraction.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/examples\/CommitExtraction.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/examples\/CommitExtraction.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/examples\/CommitExtraction.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/examples\/CommitExtraction.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/CommitExtraction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/CommitExtraction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/CommitExtraction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/CommitExtraction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/CommitExtraction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/CommitExtraction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/CommitExtraction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/CommitExtraction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/CommitExtraction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/CommitExtraction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/CommitExtraction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/CommitExtraction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/CommitExtraction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/CommitExtraction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/CommitExtraction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/CommitExtraction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/CommitExtraction.html", "kind" : "case class"}, {"name" : "bigglue.examples.FindAuthor", "shortDescription" : "This is a simple Reducer step that takes the GitCommitInfo, finds the author, and increments their commit value.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/FindAuthor.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/FindAuthor.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FindAuthor) ⇒ Boolean, msg: ⇒ Any): FindAuthor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/FindAuthor.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FindAuthor) ⇒ Boolean): FindAuthor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/FindAuthor.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FindAuthor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/FindAuthor.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FindAuthor", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/FindAuthor.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FindAuthor, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/FindAuthor.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FindAuthor, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/FindAuthor.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.examples.FindAuthor#<init>", "error" : "unsupported entity"}, {"label" : "+->", "tail" : "(p: Pipe[GitCommitGroups, End]): PartialReducerPipe[GitCommitInfo, GitCommitGroups, End]", "member" : "bigglue.computations.Reducer.+->", "link" : "bigglue\/examples\/FindAuthor.html#+->[End<:bigglue.data.Identifiable[End]](p:bigglue.pipes.Pipe[Output,End]):bigglue.pipes.PartialReducerPipe[Input,Output,End]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "bigglue.computations.Reducer.run", "link" : "bigglue\/examples\/FindAuthor.html#run():Unit", "kind" : "def"}, {"label" : "tryZero", "tail" : "(): Option[GitCommitGroups]", "member" : "bigglue.computations.Reducer.tryZero", "link" : "bigglue\/examples\/FindAuthor.html#tryZero():Option[Output]", "kind" : "def"}, {"label" : "tryFold", "tail" : "(input: GitCommitInfo, output: GitCommitGroups): Option[GitCommitGroups]", "member" : "bigglue.computations.Reducer.tryFold", "link" : "bigglue\/examples\/FindAuthor.html#tryFold(input:Input,output:Output):Option[Output]", "kind" : "def"}, {"label" : "tryGroupBy", "tail" : "(input: GitCommitInfo): Option[Identity[GitCommitGroups]]", "member" : "bigglue.computations.Reducer.tryGroupBy", "link" : "bigglue\/examples\/FindAuthor.html#tryGroupBy(input:Input):Option[bigglue.data.Identity[Output]]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitCommitInfo], outputMap: DataStore[GitCommitGroups]): Unit", "member" : "bigglue.computations.Reducer.init", "link" : "bigglue\/examples\/FindAuthor.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkOutput", "tail" : "(outputMap: DataStore[GitCommitGroups]): Unit", "member" : "bigglue.computations.Reducer.checkOutput", "link" : "bigglue\/examples\/FindAuthor.html#checkOutput(outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "withConfig", "tail" : "(newConfigOption: ConfOpt): Reducer[GitCommitInfo, GitCommitGroups]", "member" : "bigglue.computations.Reducer.withConfig", "link" : "bigglue\/examples\/FindAuthor.html#withConfig(newConfigOption:bigglue.configurations.ConfOpt):bigglue.computations.Reducer[Input,Output]", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitCommitInfo], outputMap: DataStore[GitCommitGroups], platform: UnaryPlatform[GitCommitInfo, GitCommitGroups]): Unit", "member" : "bigglue.computations.UnaryComputation.init", "link" : "bigglue\/examples\/FindAuthor.html#init(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output],platform:bigglue.platforms.UnaryPlatform[Input,Output]):Unit", "kind" : "def"}, {"label" : "getUnaryPlatform", "tail" : "(): UnaryPlatform[GitCommitInfo, GitCommitGroups]", "member" : "bigglue.computations.UnaryComputation.getUnaryPlatform", "link" : "bigglue\/examples\/FindAuthor.html#getUnaryPlatform():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "def"}, {"label" : "name", "tail" : "(newName: String): UnaryComputation[GitCommitInfo, GitCommitGroups]", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/FindAuthor.html#name(newName:String):bigglue.computations.UnaryComputation[Input,Output]", "kind" : "def"}, {"label" : "unaryPlatformOpt", "tail" : ": Option[UnaryPlatform[GitCommitInfo, GitCommitGroups]]", "member" : "bigglue.computations.UnaryComputation.unaryPlatformOpt", "link" : "bigglue\/examples\/FindAuthor.html#unaryPlatformOpt:Option[bigglue.platforms.UnaryPlatform[Input,Output]]", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.computations.UnaryComputation.name", "link" : "bigglue\/examples\/FindAuthor.html#name:String", "kind" : "var"}, {"label" : "check", "tail" : "(conf: PipeConfig, inputMap: DataStore[GitCommitInfo], outputMap: DataStore[GitCommitGroups]): Unit", "member" : "bigglue.checkers.UnaryChecker.check", "link" : "bigglue\/examples\/FindAuthor.html#check(conf:bigglue.configurations.PipeConfig,inputMap:bigglue.store.DataStore[Input],outputMap:bigglue.store.DataStore[Output]):Unit", "kind" : "def"}, {"label" : "checkInput", "tail" : "(inputMap: DataStore[GitCommitInfo]): Unit", "member" : "bigglue.checkers.InputStoreChecker.checkInput", "link" : "bigglue\/examples\/FindAuthor.html#checkInput(inputMap:bigglue.store.DataStore[Input]):Unit", "kind" : "def"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/examples\/FindAuthor.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.terminate", "link" : "bigglue\/examples\/FindAuthor.html#terminate():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "bigglue.computations.Computation.persist", "link" : "bigglue\/examples\/FindAuthor.html#persist():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(config: PipeConfig, platform: Platform): Unit", "member" : "bigglue.computations.Computation.init", "link" : "bigglue\/examples\/FindAuthor.html#init(config:bigglue.configurations.PipeConfig,platform:bigglue.platforms.Platform):Unit", "kind" : "def"}, {"label" : "toStep", "tail" : "(conf: PipeConfig, step: String): PipeConfig", "member" : "bigglue.computations.Computation.toStep", "link" : "bigglue\/examples\/FindAuthor.html#toStep(conf:bigglue.configurations.PipeConfig,step:String):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "versionOpt", "tail" : ": Option[String]", "member" : "bigglue.computations.Computation.versionOpt", "link" : "bigglue\/examples\/FindAuthor.html#versionOpt:Option[String]", "kind" : "val"}, {"label" : "configOption", "tail" : ": ConfOpt", "member" : "bigglue.computations.Computation.configOption", "link" : "bigglue\/examples\/FindAuthor.html#configOption:bigglue.configurations.ConfOpt", "kind" : "var"}, {"label" : "platformOpt", "tail" : ": Option[Platform]", "member" : "bigglue.computations.Computation.platformOpt", "link" : "bigglue\/examples\/FindAuthor.html#platformOpt:Option[bigglue.platforms.Platform]", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/examples\/FindAuthor.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/examples\/FindAuthor.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/examples\/FindAuthor.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/examples\/FindAuthor.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/FindAuthor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/FindAuthor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/FindAuthor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/FindAuthor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/FindAuthor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/FindAuthor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/FindAuthor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/FindAuthor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/FindAuthor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/FindAuthor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/FindAuthor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/FindAuthor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/FindAuthor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/FindAuthor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/FindAuthor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/FindAuthor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/FindAuthor.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitCommitGroups", "shortDescription" : "The Identifiable of which author created how many commits.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/GitCommitGroups.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/GitCommitGroups.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitCommitGroups) ⇒ Boolean, msg: ⇒ Any): GitCommitGroups", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitGroups.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitCommitGroups) ⇒ Boolean): GitCommitGroups", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitGroups.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GitCommitGroups", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitGroups.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GitCommitGroups", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitGroups.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GitCommitGroups, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/GitCommitGroups.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GitCommitGroups, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/GitCommitGroups.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[GitCommitGroups]", "member" : "bigglue.examples.GitCommitGroups.mkIdentity", "link" : "bigglue\/examples\/GitCommitGroups.html#mkIdentity():bigglue.data.Identity[bigglue.examples.GitCommitGroups]", "kind" : "def"}, {"member" : "bigglue.examples.GitCommitGroups#<init>", "error" : "unsupported entity"}, {"label" : "gitCommitInfos", "tail" : ": Int", "member" : "bigglue.examples.GitCommitGroups.gitCommitInfos", "link" : "bigglue\/examples\/GitCommitGroups.html#gitCommitInfos:Int", "kind" : "val"}, {"label" : "author", "tail" : ": String", "member" : "bigglue.examples.GitCommitGroups.author", "link" : "bigglue\/examples\/GitCommitGroups.html#author:String", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/examples\/GitCommitGroups.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/examples\/GitCommitGroups.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/examples\/GitCommitGroups.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/examples\/GitCommitGroups.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/examples\/GitCommitGroups.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[GitCommitGroups]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/examples\/GitCommitGroups.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/examples\/GitCommitGroups.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[GitCommitGroups]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/examples\/GitCommitGroups.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitCommitGroups.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitCommitGroups.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitCommitGroups.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitCommitGroups.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitCommitGroups.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitCommitGroups.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitCommitGroups.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroups.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroups.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroups.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitCommitGroups.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitCommitGroups.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitCommitGroups.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitCommitGroups.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitCommitGroups.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitCommitGroups.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/GitCommitGroups.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitCommitGroupSerializer", "shortDescription" : "A JsonSerializer for GitCommitGroups", "object" : "bigglue\/examples\/GitCommitGroupSerializer$.html", "members_object" : [{"label" : "deserialize_", "tail" : "(json: JsObject): GitCommitGroups", "member" : "bigglue.examples.GitCommitGroupSerializer.deserialize_", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#deserialize_(json:spray.json.JsObject):bigglue.examples.GitCommitGroups", "kind" : "def"}, {"label" : "serializeToJson_", "tail" : "(d: GitCommitGroups): JsObject", "member" : "bigglue.examples.GitCommitGroupSerializer.serializeToJson_", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#serializeToJson_(d:bigglue.examples.GitCommitGroups):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(str: String): GitCommitGroups", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#deserialize_(str:String):Data", "kind" : "def"}, {"label" : "serialize_", "tail" : "(d: GitCommitGroups): String", "member" : "bigglue.data.serializers.JsonSerializer.serialize_", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#serialize_(d:Data):String", "kind" : "def"}, {"label" : "serializeToJson", "tail" : "(d: GitCommitGroups): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#serializeToJson(d:Data):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): GitCommitGroups", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: GitCommitGroups): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitCommitGroupSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.GitCommitInfo", "shortDescription" : "An Identifiable for a Commit of a GitRepo, with the hash and the person that created it.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/GitCommitInfo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/GitCommitInfo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitCommitInfo) ⇒ Boolean, msg: ⇒ Any): GitCommitInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitInfo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitCommitInfo) ⇒ Boolean): GitCommitInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitInfo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GitCommitInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitInfo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GitCommitInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitCommitInfo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GitCommitInfo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/GitCommitInfo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GitCommitInfo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/GitCommitInfo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[GitCommitInfo]", "member" : "bigglue.examples.GitCommitInfo.mkIdentity", "link" : "bigglue\/examples\/GitCommitInfo.html#mkIdentity():bigglue.data.Identity[bigglue.examples.GitCommitInfo]", "kind" : "def"}, {"member" : "bigglue.examples.GitCommitInfo#<init>", "error" : "unsupported entity"}, {"label" : "author", "tail" : ": String", "member" : "bigglue.examples.GitCommitInfo.author", "link" : "bigglue\/examples\/GitCommitInfo.html#author:String", "kind" : "val"}, {"label" : "hash", "tail" : ": String", "member" : "bigglue.examples.GitCommitInfo.hash", "link" : "bigglue\/examples\/GitCommitInfo.html#hash:String", "kind" : "val"}, {"label" : "gitRepo", "tail" : ": GitRepo", "member" : "bigglue.examples.GitCommitInfo.gitRepo", "link" : "bigglue\/examples\/GitCommitInfo.html#gitRepo:bigglue.examples.GitRepo", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/examples\/GitCommitInfo.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/examples\/GitCommitInfo.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/examples\/GitCommitInfo.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/examples\/GitCommitInfo.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/examples\/GitCommitInfo.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[GitCommitInfo]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/examples\/GitCommitInfo.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/examples\/GitCommitInfo.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[GitCommitInfo]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/examples\/GitCommitInfo.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitCommitInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitCommitInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitCommitInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitCommitInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitCommitInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitCommitInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitCommitInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitCommitInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitCommitInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitCommitInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitCommitInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitCommitInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitCommitInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/GitCommitInfo.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitCommitInfoSerializer", "shortDescription" : "A JsonSerializer for a GitCommitInfo.", "object" : "bigglue\/examples\/GitCommitInfoSerializer$.html", "members_object" : [{"label" : "deserialize_", "tail" : "(json: JsObject): GitCommitInfo", "member" : "bigglue.examples.GitCommitInfoSerializer.deserialize_", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#deserialize_(json:spray.json.JsObject):bigglue.examples.GitCommitInfo", "kind" : "def"}, {"label" : "serializeToJson_", "tail" : "(d: GitCommitInfo): JsObject", "member" : "bigglue.examples.GitCommitInfoSerializer.serializeToJson_", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#serializeToJson_(d:bigglue.examples.GitCommitInfo):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(str: String): GitCommitInfo", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#deserialize_(str:String):Data", "kind" : "def"}, {"label" : "serialize_", "tail" : "(d: GitCommitInfo): String", "member" : "bigglue.data.serializers.JsonSerializer.serialize_", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#serialize_(d:Data):String", "kind" : "def"}, {"label" : "serializeToJson", "tail" : "(d: GitCommitInfo): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#serializeToJson(d:Data):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): GitCommitInfo", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: GitCommitInfo): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitCommitInfoSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.GitFeatures", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/GitFeatures.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/GitFeatures.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitFeatures) ⇒ Boolean, msg: ⇒ Any): GitFeatures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitFeatures.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitFeatures) ⇒ Boolean): GitFeatures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitFeatures.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GitFeatures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitFeatures.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GitFeatures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitFeatures.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GitFeatures, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/GitFeatures.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GitFeatures, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/GitFeatures.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[GitFeatures]", "member" : "bigglue.examples.GitFeatures.mkIdentity", "link" : "bigglue\/examples\/GitFeatures.html#mkIdentity():bigglue.data.Identity[bigglue.examples.GitFeatures]", "kind" : "def"}, {"member" : "bigglue.examples.GitFeatures#<init>", "error" : "unsupported entity"}, {"label" : "protobuf", "tail" : ": String", "member" : "bigglue.examples.GitFeatures.protobuf", "link" : "bigglue\/examples\/GitFeatures.html#protobuf:String", "kind" : "val"}, {"label" : "file", "tail" : ": String", "member" : "bigglue.examples.GitFeatures.file", "link" : "bigglue\/examples\/GitFeatures.html#file:String", "kind" : "val"}, {"label" : "hash", "tail" : ": String", "member" : "bigglue.examples.GitFeatures.hash", "link" : "bigglue\/examples\/GitFeatures.html#hash:String", "kind" : "val"}, {"label" : "gitRepo", "tail" : ": GitRepo", "member" : "bigglue.examples.GitFeatures.gitRepo", "link" : "bigglue\/examples\/GitFeatures.html#gitRepo:bigglue.examples.GitRepo", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/examples\/GitFeatures.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/examples\/GitFeatures.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/examples\/GitFeatures.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/examples\/GitFeatures.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/examples\/GitFeatures.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[GitFeatures]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/examples\/GitFeatures.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/examples\/GitFeatures.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[GitFeatures]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/examples\/GitFeatures.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitFeatures.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitFeatures.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitFeatures.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitFeatures.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitFeatures.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitFeatures.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitFeatures.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitFeatures.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitFeatures.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitFeatures.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitFeatures.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitFeatures.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitFeatures.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitFeatures.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitFeatures.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitFeatures.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/GitFeatures.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitID", "shortDescription" : "This is an Identifiable that represents a Github ID for a repo.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/GitID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/GitID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitID) ⇒ Boolean, msg: ⇒ Any): GitID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitID) ⇒ Boolean): GitID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GitID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GitID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GitID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/GitID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GitID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/GitID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[GitID]", "member" : "bigglue.examples.GitID.mkIdentity", "link" : "bigglue\/examples\/GitID.html#mkIdentity():bigglue.data.Identity[bigglue.examples.GitID]", "kind" : "def"}, {"member" : "bigglue.examples.GitID#<init>", "error" : "unsupported entity"}, {"label" : "repo", "tail" : ": String", "member" : "bigglue.examples.GitID.repo", "link" : "bigglue\/examples\/GitID.html#repo:String", "kind" : "val"}, {"label" : "user", "tail" : ": String", "member" : "bigglue.examples.GitID.user", "link" : "bigglue\/examples\/GitID.html#user:String", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/examples\/GitID.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/examples\/GitID.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/examples\/GitID.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/examples\/GitID.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/examples\/GitID.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[GitID]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/examples\/GitID.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/examples\/GitID.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[GitID]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/examples\/GitID.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitID.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/GitID.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitIDSerializer", "shortDescription" : "The JsonSerializer for GitIDs.", "object" : "bigglue\/examples\/GitIDSerializer$.html", "members_object" : [{"label" : "deserialize_", "tail" : "(json: JsObject): GitID", "member" : "bigglue.examples.GitIDSerializer.deserialize_", "link" : "bigglue\/examples\/GitIDSerializer$.html#deserialize_(json:spray.json.JsObject):bigglue.examples.GitID", "kind" : "def"}, {"label" : "serializeToJson_", "tail" : "(d: GitID): JsObject", "member" : "bigglue.examples.GitIDSerializer.serializeToJson_", "link" : "bigglue\/examples\/GitIDSerializer$.html#serializeToJson_(d:bigglue.examples.GitID):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(str: String): GitID", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/examples\/GitIDSerializer$.html#deserialize_(str:String):Data", "kind" : "def"}, {"label" : "serialize_", "tail" : "(d: GitID): String", "member" : "bigglue.data.serializers.JsonSerializer.serialize_", "link" : "bigglue\/examples\/GitIDSerializer$.html#serialize_(d:Data):String", "kind" : "def"}, {"label" : "serializeToJson", "tail" : "(d: GitID): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson", "link" : "bigglue\/examples\/GitIDSerializer$.html#serializeToJson(d:Data):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): GitID", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/examples\/GitIDSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: GitID): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/examples\/GitIDSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitIDSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitIDSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitIDSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitIDSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitIDSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitIDSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitIDSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitIDSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitIDSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitIDSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitIDSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitIDSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/GitIDSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitIDSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/GitIDSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/GitIDSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitIDSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitIDSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitIDSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.GitRepo", "shortDescription" : "An Identifiable that represents a Git Repo.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/examples\/GitRepo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/examples\/GitRepo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitRepo) ⇒ Boolean, msg: ⇒ Any): GitRepo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitRepo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GitRepo) ⇒ Boolean): GitRepo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitRepo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GitRepo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitRepo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GitRepo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/examples\/GitRepo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GitRepo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/examples\/GitRepo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GitRepo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/examples\/GitRepo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkIdentity", "tail" : "(): Identity[GitRepo]", "member" : "bigglue.examples.GitRepo.mkIdentity", "link" : "bigglue\/examples\/GitRepo.html#mkIdentity():bigglue.data.Identity[bigglue.examples.GitRepo]", "kind" : "def"}, {"member" : "bigglue.examples.GitRepo#<init>", "error" : "unsupported entity"}, {"label" : "repoPath", "tail" : ": String", "member" : "bigglue.examples.GitRepo.repoPath", "link" : "bigglue\/examples\/GitRepo.html#repoPath:String", "kind" : "val"}, {"label" : "gitID", "tail" : ": GitID", "member" : "bigglue.examples.GitRepo.gitID", "link" : "bigglue\/examples\/GitRepo.html#gitID:bigglue.examples.GitID", "kind" : "val"}, {"label" : "setProvenance", "tail" : "(prov: Provenance): Unit", "member" : "bigglue.data.Identifiable.setProvenance", "link" : "bigglue\/examples\/GitRepo.html#setProvenance(prov:bigglue.curators.Provenance):Unit", "kind" : "def"}, {"label" : "getProvenance", "tail" : "(): Option[Provenance]", "member" : "bigglue.data.Identifiable.getProvenance", "link" : "bigglue\/examples\/GitRepo.html#getProvenance():Option[bigglue.curators.Provenance]", "kind" : "def"}, {"label" : "setVersion", "tail" : "(version: String): Unit", "member" : "bigglue.data.Identifiable.setVersion", "link" : "bigglue\/examples\/GitRepo.html#setVersion(version:String):Unit", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): Option[String]", "member" : "bigglue.data.Identifiable.getVersion", "link" : "bigglue\/examples\/GitRepo.html#getVersion():Option[String]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "bigglue.data.Identifiable.getId", "link" : "bigglue\/examples\/GitRepo.html#getId():String", "kind" : "def"}, {"label" : "identity", "tail" : "(): Identity[GitRepo]", "member" : "bigglue.data.Identifiable.identity", "link" : "bigglue\/examples\/GitRepo.html#identity():bigglue.data.Identity[A]", "kind" : "def"}, {"label" : "provenanceOpt", "tail" : ": Option[Provenance]", "member" : "bigglue.data.Identifiable.provenanceOpt", "link" : "bigglue\/examples\/GitRepo.html#provenanceOpt:Option[bigglue.curators.Provenance]", "kind" : "var"}, {"label" : "identityOpt", "tail" : ": Option[Identity[GitRepo]]", "member" : "bigglue.data.Identifiable.identityOpt", "link" : "bigglue\/examples\/GitRepo.html#identityOpt:Option[bigglue.data.Identity[A]]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitRepo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitRepo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitRepo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitRepo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitRepo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitRepo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitRepo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitRepo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitRepo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitRepo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitRepo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitRepo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitRepo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/examples\/GitRepo.html", "kind" : "case class"}, {"name" : "bigglue.examples.GitRepoSerializer", "shortDescription" : "A JsonSerializer for GitRepos.", "object" : "bigglue\/examples\/GitRepoSerializer$.html", "members_object" : [{"label" : "deflatten", "tail" : "(fields: Map[String, JsValue]): JsObject", "member" : "bigglue.examples.GitRepoSerializer.deflatten", "link" : "bigglue\/examples\/GitRepoSerializer$.html#deflatten(fields:Map[String,spray.json.JsValue]):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(json: JsObject): GitRepo", "member" : "bigglue.examples.GitRepoSerializer.deserialize_", "link" : "bigglue\/examples\/GitRepoSerializer$.html#deserialize_(json:spray.json.JsObject):bigglue.examples.GitRepo", "kind" : "def"}, {"label" : "flatten", "tail" : "(fields: Map[String, JsValue]): Map[String, JsValue]", "member" : "bigglue.examples.GitRepoSerializer.flatten", "link" : "bigglue\/examples\/GitRepoSerializer$.html#flatten(fields:Map[String,spray.json.JsValue]):Map[String,spray.json.JsValue]", "kind" : "def"}, {"label" : "serializeToJson_", "tail" : "(d: GitRepo): JsObject", "member" : "bigglue.examples.GitRepoSerializer.serializeToJson_", "link" : "bigglue\/examples\/GitRepoSerializer$.html#serializeToJson_(d:bigglue.examples.GitRepo):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize_", "tail" : "(str: String): GitRepo", "member" : "bigglue.data.serializers.JsonSerializer.deserialize_", "link" : "bigglue\/examples\/GitRepoSerializer$.html#deserialize_(str:String):Data", "kind" : "def"}, {"label" : "serialize_", "tail" : "(d: GitRepo): String", "member" : "bigglue.data.serializers.JsonSerializer.serialize_", "link" : "bigglue\/examples\/GitRepoSerializer$.html#serialize_(d:Data):String", "kind" : "def"}, {"label" : "serializeToJson", "tail" : "(d: GitRepo): JsObject", "member" : "bigglue.data.serializers.JsonSerializer.serializeToJson", "link" : "bigglue\/examples\/GitRepoSerializer$.html#serializeToJson(d:Data):spray.json.JsObject", "kind" : "def"}, {"label" : "deserialize", "tail" : "(s: String): GitRepo", "member" : "bigglue.data.serializers.BasicSerializer.deserialize", "link" : "bigglue\/examples\/GitRepoSerializer$.html#deserialize(s:String):A", "kind" : "def"}, {"label" : "serialize", "tail" : "(a: GitRepo): String", "member" : "bigglue.data.serializers.BasicSerializer.serialize", "link" : "bigglue\/examples\/GitRepoSerializer$.html#serialize(a:A):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/GitRepoSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/GitRepoSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/GitRepoSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/GitRepoSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/GitRepoSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/GitRepoSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/GitRepoSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepoSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepoSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/GitRepoSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/GitRepoSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/GitRepoSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/GitRepoSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/GitRepoSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/GitRepoSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/GitRepoSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/GitRepoSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/GitRepoSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/GitRepoSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.mockfixrexample", "shortDescription" : "This is the actual code for the simple example.", "object" : "bigglue\/examples\/mockfixrexample$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "bigglue.examples.mockfixrexample.main", "link" : "bigglue\/examples\/mockfixrexample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "IStringToGitID", "tail" : "(i: I[String]): GitID", "member" : "bigglue.examples.mockfixrexample.IStringToGitID", "link" : "bigglue\/examples\/mockfixrexample$.html#IStringToGitID(i:bigglue.data.I[String]):bigglue.examples.GitID", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/mockfixrexample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/mockfixrexample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/mockfixrexample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/mockfixrexample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/mockfixrexample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/mockfixrexample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/mockfixrexample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/mockfixrexample$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/mockfixrexample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/mockfixrexample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/mockfixrexample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/mockfixrexample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/mockfixrexample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/mockfixrexample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/mockfixrexample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/mockfixrexample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/mockfixrexample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/mockfixrexample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/mockfixrexample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.MockProtocol2", "shortDescription" : "Created by chanceroberts on 4\/2\/18.", "object" : "bigglue\/examples\/MockProtocol2$.html", "members_object" : [{"label" : "RootJsArrayFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsArrayFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#RootJsArrayFormat", "kind" : "implicit object"}, {"label" : "RootJsObjectFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.RootJsObjectFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#RootJsObjectFormat", "kind" : "implicit object"}, {"label" : "JsValueFormat", "tail" : "", "member" : "spray.json.AdditionalFormats.JsValueFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#JsValueFormat", "kind" : "implicit object"}, {"label" : "OptionFormat", "tail" : "", "member" : "spray.json.StandardFormats.OptionFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#OptionFormat[T]extendsStandardFormats.this.JF[Option[T]]", "kind" : "class"}, {"label" : "SymbolJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.SymbolJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#SymbolJsonFormat", "kind" : "implicit object"}, {"label" : "StringJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.StringJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#StringJsonFormat", "kind" : "implicit object"}, {"label" : "CharJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.CharJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#CharJsonFormat", "kind" : "implicit object"}, {"label" : "BooleanJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BooleanJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#BooleanJsonFormat", "kind" : "implicit object"}, {"label" : "UnitJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.UnitJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#UnitJsonFormat", "kind" : "implicit object"}, {"label" : "BigIntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigIntJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#BigIntJsonFormat", "kind" : "implicit object"}, {"label" : "BigDecimalJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.BigDecimalJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#BigDecimalJsonFormat", "kind" : "implicit object"}, {"label" : "ShortJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ShortJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#ShortJsonFormat", "kind" : "implicit object"}, {"label" : "ByteJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.ByteJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#ByteJsonFormat", "kind" : "implicit object"}, {"label" : "DoubleJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.DoubleJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#DoubleJsonFormat", "kind" : "implicit object"}, {"label" : "FloatJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.FloatJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#FloatJsonFormat", "kind" : "implicit object"}, {"label" : "LongJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.LongJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#LongJsonFormat", "kind" : "implicit object"}, {"label" : "IntJsonFormat", "tail" : "", "member" : "spray.json.BasicFormats.IntJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#IntJsonFormat", "kind" : "implicit object"}, {"label" : "gitCommitGroup", "tail" : ": JsonFormat[GitCommitGroups]", "member" : "bigglue.examples.MockProtocol2.gitCommitGroup", "link" : "bigglue\/examples\/MockProtocol2$.html#gitCommitGroup:spray.json.JsonFormat[bigglue.examples.GitCommitGroups]", "kind" : "implicit val"}, {"label" : "gitCommitInfo", "tail" : ": JsonFormat[GitCommitInfo]", "member" : "bigglue.examples.MockProtocol2.gitCommitInfo", "link" : "bigglue\/examples\/MockProtocol2$.html#gitCommitInfo:spray.json.JsonFormat[bigglue.examples.GitCommitInfo]", "kind" : "implicit val"}, {"label" : "gitRepo", "tail" : ": JsonFormat[GitRepo]", "member" : "bigglue.examples.MockProtocol2.gitRepo", "link" : "bigglue\/examples\/MockProtocol2$.html#gitRepo:spray.json.JsonFormat[bigglue.examples.GitRepo]", "kind" : "implicit val"}, {"label" : "gitID", "tail" : ": JsonFormat[GitID]", "member" : "bigglue.examples.MockProtocol2.gitID", "link" : "bigglue\/examples\/MockProtocol2$.html#gitID:spray.json.JsonFormat[bigglue.examples.GitID]", "kind" : "implicit val"}, {"label" : "safeReader", "tail" : "(arg0: JsonReader[A]): JsonReader[Either[Exception, A]]", "member" : "spray.json.AdditionalFormats.safeReader", "link" : "bigglue\/examples\/MockProtocol2$.html#safeReader[A](implicitevidence$1:spray.json.JsonReader[A]):spray.json.JsonReader[Either[Exception,A]]", "kind" : "def"}, {"label" : "lazyFormat", "tail" : "(format: ⇒ JsonFormat[T]): JsonFormat[T] { lazy val delegate: spray.json.JsonFormat[T] }", "member" : "spray.json.AdditionalFormats.lazyFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#lazyFormat[T](format:=>spray.json.JsonFormat[T]):spray.json.JsonFormat[T]{lazyvaldelegate:spray.json.JsonFormat[T]}", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: RootJsonReader[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/examples\/MockProtocol2$.html#lift[T<:AnyRef](reader:spray.json.RootJsonReader[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(reader: JsonReader[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/examples\/MockProtocol2$.html#lift[T<:AnyRef](reader:spray.json.JsonReader[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/examples\/MockProtocol2$.html#lift[T](writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "lift", "tail" : "(writer: JsonWriter[T]): JsonFormat[T] { def read(value: spray.json.JsValue): Nothing }", "member" : "spray.json.AdditionalFormats.lift", "link" : "bigglue\/examples\/MockProtocol2$.html#lift[T](writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]{defread(value:spray.json.JsValue):Nothing}", "kind" : "def"}, {"label" : "rootFormat", "tail" : "(format: JsonFormat[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#rootFormat[T](format:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "rootJsonFormat", "tail" : "(reader: RootJsonReader[T], writer: RootJsonWriter[T]): RootJsonFormat[T]", "member" : "spray.json.AdditionalFormats.rootJsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#rootJsonFormat[T](reader:spray.json.RootJsonReader[T],writer:spray.json.RootJsonWriter[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(reader: JsonReader[T], writer: JsonWriter[T]): JsonFormat[T]", "member" : "spray.json.AdditionalFormats.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[T](reader:spray.json.JsonReader[T],writer:spray.json.JsonWriter[T]):spray.json.JsonFormat[T]", "kind" : "def"}, {"label" : "extractFieldNames", "tail" : "(classManifest: ClassManifest[_]): Array[String]", "member" : "spray.json.ProductFormats.extractFieldNames", "link" : "bigglue\/examples\/MockProtocol2$.html#extractFieldNames(classManifest:ClassManifest[_]):Array[String]", "kind" : "def"}, {"label" : "fromField", "tail" : "(value: JsValue, fieldName: String)(reader: JsonReader[T]): T", "member" : "spray.json.ProductFormats.fromField", "link" : "bigglue\/examples\/MockProtocol2$.html#fromField[T](value:spray.json.JsValue,fieldName:String)(implicitreader:spray.json.JsonReader[T]):T", "kind" : "def"}, {"label" : "productElement2Field", "tail" : "(fieldName: String, p: Product, ix: Int, rest: List[JsField])(writer: JsonWriter[T]): List[JsField]", "member" : "spray.json.ProductFormats.productElement2Field", "link" : "bigglue\/examples\/MockProtocol2$.html#productElement2Field[T](fieldName:String,p:Product,ix:Int,rest:List[spray.json.JsField])(implicitwriter:spray.json.JsonWriter[T]):List[spray.json.JsField]", "kind" : "def"}, {"label" : "jsonFormat0", "tail" : "(construct: () ⇒ T): RootJsonFormat[T]", "member" : "spray.json.ProductFormats.jsonFormat0", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat0[T](construct:()=>T):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String, fieldName22: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String,fieldName22:String)(implicitevidence$507:ProductFormatsInstances.this.JF[P1],implicitevidence$508:ProductFormatsInstances.this.JF[P2],implicitevidence$509:ProductFormatsInstances.this.JF[P3],implicitevidence$510:ProductFormatsInstances.this.JF[P4],implicitevidence$511:ProductFormatsInstances.this.JF[P5],implicitevidence$512:ProductFormatsInstances.this.JF[P6],implicitevidence$513:ProductFormatsInstances.this.JF[P7],implicitevidence$514:ProductFormatsInstances.this.JF[P8],implicitevidence$515:ProductFormatsInstances.this.JF[P9],implicitevidence$516:ProductFormatsInstances.this.JF[P10],implicitevidence$517:ProductFormatsInstances.this.JF[P11],implicitevidence$518:ProductFormatsInstances.this.JF[P12],implicitevidence$519:ProductFormatsInstances.this.JF[P13],implicitevidence$520:ProductFormatsInstances.this.JF[P14],implicitevidence$521:ProductFormatsInstances.this.JF[P15],implicitevidence$522:ProductFormatsInstances.this.JF[P16],implicitevidence$523:ProductFormatsInstances.this.JF[P17],implicitevidence$524:ProductFormatsInstances.this.JF[P18],implicitevidence$525:ProductFormatsInstances.this.JF[P19],implicitevidence$526:ProductFormatsInstances.this.JF[P20],implicitevidence$527:ProductFormatsInstances.this.JF[P21],implicitevidence$528:ProductFormatsInstances.this.JF[P22]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat22", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: JF[P22], arg22: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat22", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat22[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,P22)=>T)(implicitevidence$484:ProductFormatsInstances.this.JF[P1],implicitevidence$485:ProductFormatsInstances.this.JF[P2],implicitevidence$486:ProductFormatsInstances.this.JF[P3],implicitevidence$487:ProductFormatsInstances.this.JF[P4],implicitevidence$488:ProductFormatsInstances.this.JF[P5],implicitevidence$489:ProductFormatsInstances.this.JF[P6],implicitevidence$490:ProductFormatsInstances.this.JF[P7],implicitevidence$491:ProductFormatsInstances.this.JF[P8],implicitevidence$492:ProductFormatsInstances.this.JF[P9],implicitevidence$493:ProductFormatsInstances.this.JF[P10],implicitevidence$494:ProductFormatsInstances.this.JF[P11],implicitevidence$495:ProductFormatsInstances.this.JF[P12],implicitevidence$496:ProductFormatsInstances.this.JF[P13],implicitevidence$497:ProductFormatsInstances.this.JF[P14],implicitevidence$498:ProductFormatsInstances.this.JF[P15],implicitevidence$499:ProductFormatsInstances.this.JF[P16],implicitevidence$500:ProductFormatsInstances.this.JF[P17],implicitevidence$501:ProductFormatsInstances.this.JF[P18],implicitevidence$502:ProductFormatsInstances.this.JF[P19],implicitevidence$503:ProductFormatsInstances.this.JF[P20],implicitevidence$504:ProductFormatsInstances.this.JF[P21],implicitevidence$505:ProductFormatsInstances.this.JF[P22],implicitevidence$506:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String, fieldName21: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String,fieldName21:String)(implicitevidence$463:ProductFormatsInstances.this.JF[P1],implicitevidence$464:ProductFormatsInstances.this.JF[P2],implicitevidence$465:ProductFormatsInstances.this.JF[P3],implicitevidence$466:ProductFormatsInstances.this.JF[P4],implicitevidence$467:ProductFormatsInstances.this.JF[P5],implicitevidence$468:ProductFormatsInstances.this.JF[P6],implicitevidence$469:ProductFormatsInstances.this.JF[P7],implicitevidence$470:ProductFormatsInstances.this.JF[P8],implicitevidence$471:ProductFormatsInstances.this.JF[P9],implicitevidence$472:ProductFormatsInstances.this.JF[P10],implicitevidence$473:ProductFormatsInstances.this.JF[P11],implicitevidence$474:ProductFormatsInstances.this.JF[P12],implicitevidence$475:ProductFormatsInstances.this.JF[P13],implicitevidence$476:ProductFormatsInstances.this.JF[P14],implicitevidence$477:ProductFormatsInstances.this.JF[P15],implicitevidence$478:ProductFormatsInstances.this.JF[P16],implicitevidence$479:ProductFormatsInstances.this.JF[P17],implicitevidence$480:ProductFormatsInstances.this.JF[P18],implicitevidence$481:ProductFormatsInstances.this.JF[P19],implicitevidence$482:ProductFormatsInstances.this.JF[P20],implicitevidence$483:ProductFormatsInstances.this.JF[P21]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat21", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: JF[P21], arg21: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat21", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat21[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,P21)=>T)(implicitevidence$441:ProductFormatsInstances.this.JF[P1],implicitevidence$442:ProductFormatsInstances.this.JF[P2],implicitevidence$443:ProductFormatsInstances.this.JF[P3],implicitevidence$444:ProductFormatsInstances.this.JF[P4],implicitevidence$445:ProductFormatsInstances.this.JF[P5],implicitevidence$446:ProductFormatsInstances.this.JF[P6],implicitevidence$447:ProductFormatsInstances.this.JF[P7],implicitevidence$448:ProductFormatsInstances.this.JF[P8],implicitevidence$449:ProductFormatsInstances.this.JF[P9],implicitevidence$450:ProductFormatsInstances.this.JF[P10],implicitevidence$451:ProductFormatsInstances.this.JF[P11],implicitevidence$452:ProductFormatsInstances.this.JF[P12],implicitevidence$453:ProductFormatsInstances.this.JF[P13],implicitevidence$454:ProductFormatsInstances.this.JF[P14],implicitevidence$455:ProductFormatsInstances.this.JF[P15],implicitevidence$456:ProductFormatsInstances.this.JF[P16],implicitevidence$457:ProductFormatsInstances.this.JF[P17],implicitevidence$458:ProductFormatsInstances.this.JF[P18],implicitevidence$459:ProductFormatsInstances.this.JF[P19],implicitevidence$460:ProductFormatsInstances.this.JF[P20],implicitevidence$461:ProductFormatsInstances.this.JF[P21],implicitevidence$462:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String, fieldName20: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String,fieldName20:String)(implicitevidence$421:ProductFormatsInstances.this.JF[P1],implicitevidence$422:ProductFormatsInstances.this.JF[P2],implicitevidence$423:ProductFormatsInstances.this.JF[P3],implicitevidence$424:ProductFormatsInstances.this.JF[P4],implicitevidence$425:ProductFormatsInstances.this.JF[P5],implicitevidence$426:ProductFormatsInstances.this.JF[P6],implicitevidence$427:ProductFormatsInstances.this.JF[P7],implicitevidence$428:ProductFormatsInstances.this.JF[P8],implicitevidence$429:ProductFormatsInstances.this.JF[P9],implicitevidence$430:ProductFormatsInstances.this.JF[P10],implicitevidence$431:ProductFormatsInstances.this.JF[P11],implicitevidence$432:ProductFormatsInstances.this.JF[P12],implicitevidence$433:ProductFormatsInstances.this.JF[P13],implicitevidence$434:ProductFormatsInstances.this.JF[P14],implicitevidence$435:ProductFormatsInstances.this.JF[P15],implicitevidence$436:ProductFormatsInstances.this.JF[P16],implicitevidence$437:ProductFormatsInstances.this.JF[P17],implicitevidence$438:ProductFormatsInstances.this.JF[P18],implicitevidence$439:ProductFormatsInstances.this.JF[P19],implicitevidence$440:ProductFormatsInstances.this.JF[P20]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat20", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: JF[P20], arg20: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat20", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat20[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,P20)=>T)(implicitevidence$400:ProductFormatsInstances.this.JF[P1],implicitevidence$401:ProductFormatsInstances.this.JF[P2],implicitevidence$402:ProductFormatsInstances.this.JF[P3],implicitevidence$403:ProductFormatsInstances.this.JF[P4],implicitevidence$404:ProductFormatsInstances.this.JF[P5],implicitevidence$405:ProductFormatsInstances.this.JF[P6],implicitevidence$406:ProductFormatsInstances.this.JF[P7],implicitevidence$407:ProductFormatsInstances.this.JF[P8],implicitevidence$408:ProductFormatsInstances.this.JF[P9],implicitevidence$409:ProductFormatsInstances.this.JF[P10],implicitevidence$410:ProductFormatsInstances.this.JF[P11],implicitevidence$411:ProductFormatsInstances.this.JF[P12],implicitevidence$412:ProductFormatsInstances.this.JF[P13],implicitevidence$413:ProductFormatsInstances.this.JF[P14],implicitevidence$414:ProductFormatsInstances.this.JF[P15],implicitevidence$415:ProductFormatsInstances.this.JF[P16],implicitevidence$416:ProductFormatsInstances.this.JF[P17],implicitevidence$417:ProductFormatsInstances.this.JF[P18],implicitevidence$418:ProductFormatsInstances.this.JF[P19],implicitevidence$419:ProductFormatsInstances.this.JF[P20],implicitevidence$420:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String, fieldName19: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String,fieldName19:String)(implicitevidence$381:ProductFormatsInstances.this.JF[P1],implicitevidence$382:ProductFormatsInstances.this.JF[P2],implicitevidence$383:ProductFormatsInstances.this.JF[P3],implicitevidence$384:ProductFormatsInstances.this.JF[P4],implicitevidence$385:ProductFormatsInstances.this.JF[P5],implicitevidence$386:ProductFormatsInstances.this.JF[P6],implicitevidence$387:ProductFormatsInstances.this.JF[P7],implicitevidence$388:ProductFormatsInstances.this.JF[P8],implicitevidence$389:ProductFormatsInstances.this.JF[P9],implicitevidence$390:ProductFormatsInstances.this.JF[P10],implicitevidence$391:ProductFormatsInstances.this.JF[P11],implicitevidence$392:ProductFormatsInstances.this.JF[P12],implicitevidence$393:ProductFormatsInstances.this.JF[P13],implicitevidence$394:ProductFormatsInstances.this.JF[P14],implicitevidence$395:ProductFormatsInstances.this.JF[P15],implicitevidence$396:ProductFormatsInstances.this.JF[P16],implicitevidence$397:ProductFormatsInstances.this.JF[P17],implicitevidence$398:ProductFormatsInstances.this.JF[P18],implicitevidence$399:ProductFormatsInstances.this.JF[P19]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat19", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: JF[P19], arg19: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat19", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat19[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,P19)=>T)(implicitevidence$361:ProductFormatsInstances.this.JF[P1],implicitevidence$362:ProductFormatsInstances.this.JF[P2],implicitevidence$363:ProductFormatsInstances.this.JF[P3],implicitevidence$364:ProductFormatsInstances.this.JF[P4],implicitevidence$365:ProductFormatsInstances.this.JF[P5],implicitevidence$366:ProductFormatsInstances.this.JF[P6],implicitevidence$367:ProductFormatsInstances.this.JF[P7],implicitevidence$368:ProductFormatsInstances.this.JF[P8],implicitevidence$369:ProductFormatsInstances.this.JF[P9],implicitevidence$370:ProductFormatsInstances.this.JF[P10],implicitevidence$371:ProductFormatsInstances.this.JF[P11],implicitevidence$372:ProductFormatsInstances.this.JF[P12],implicitevidence$373:ProductFormatsInstances.this.JF[P13],implicitevidence$374:ProductFormatsInstances.this.JF[P14],implicitevidence$375:ProductFormatsInstances.this.JF[P15],implicitevidence$376:ProductFormatsInstances.this.JF[P16],implicitevidence$377:ProductFormatsInstances.this.JF[P17],implicitevidence$378:ProductFormatsInstances.this.JF[P18],implicitevidence$379:ProductFormatsInstances.this.JF[P19],implicitevidence$380:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String, fieldName18: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String,fieldName18:String)(implicitevidence$343:ProductFormatsInstances.this.JF[P1],implicitevidence$344:ProductFormatsInstances.this.JF[P2],implicitevidence$345:ProductFormatsInstances.this.JF[P3],implicitevidence$346:ProductFormatsInstances.this.JF[P4],implicitevidence$347:ProductFormatsInstances.this.JF[P5],implicitevidence$348:ProductFormatsInstances.this.JF[P6],implicitevidence$349:ProductFormatsInstances.this.JF[P7],implicitevidence$350:ProductFormatsInstances.this.JF[P8],implicitevidence$351:ProductFormatsInstances.this.JF[P9],implicitevidence$352:ProductFormatsInstances.this.JF[P10],implicitevidence$353:ProductFormatsInstances.this.JF[P11],implicitevidence$354:ProductFormatsInstances.this.JF[P12],implicitevidence$355:ProductFormatsInstances.this.JF[P13],implicitevidence$356:ProductFormatsInstances.this.JF[P14],implicitevidence$357:ProductFormatsInstances.this.JF[P15],implicitevidence$358:ProductFormatsInstances.this.JF[P16],implicitevidence$359:ProductFormatsInstances.this.JF[P17],implicitevidence$360:ProductFormatsInstances.this.JF[P18]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat18", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: JF[P18], arg18: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat18", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat18[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,P18)=>T)(implicitevidence$324:ProductFormatsInstances.this.JF[P1],implicitevidence$325:ProductFormatsInstances.this.JF[P2],implicitevidence$326:ProductFormatsInstances.this.JF[P3],implicitevidence$327:ProductFormatsInstances.this.JF[P4],implicitevidence$328:ProductFormatsInstances.this.JF[P5],implicitevidence$329:ProductFormatsInstances.this.JF[P6],implicitevidence$330:ProductFormatsInstances.this.JF[P7],implicitevidence$331:ProductFormatsInstances.this.JF[P8],implicitevidence$332:ProductFormatsInstances.this.JF[P9],implicitevidence$333:ProductFormatsInstances.this.JF[P10],implicitevidence$334:ProductFormatsInstances.this.JF[P11],implicitevidence$335:ProductFormatsInstances.this.JF[P12],implicitevidence$336:ProductFormatsInstances.this.JF[P13],implicitevidence$337:ProductFormatsInstances.this.JF[P14],implicitevidence$338:ProductFormatsInstances.this.JF[P15],implicitevidence$339:ProductFormatsInstances.this.JF[P16],implicitevidence$340:ProductFormatsInstances.this.JF[P17],implicitevidence$341:ProductFormatsInstances.this.JF[P18],implicitevidence$342:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String, fieldName17: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String,fieldName17:String)(implicitevidence$307:ProductFormatsInstances.this.JF[P1],implicitevidence$308:ProductFormatsInstances.this.JF[P2],implicitevidence$309:ProductFormatsInstances.this.JF[P3],implicitevidence$310:ProductFormatsInstances.this.JF[P4],implicitevidence$311:ProductFormatsInstances.this.JF[P5],implicitevidence$312:ProductFormatsInstances.this.JF[P6],implicitevidence$313:ProductFormatsInstances.this.JF[P7],implicitevidence$314:ProductFormatsInstances.this.JF[P8],implicitevidence$315:ProductFormatsInstances.this.JF[P9],implicitevidence$316:ProductFormatsInstances.this.JF[P10],implicitevidence$317:ProductFormatsInstances.this.JF[P11],implicitevidence$318:ProductFormatsInstances.this.JF[P12],implicitevidence$319:ProductFormatsInstances.this.JF[P13],implicitevidence$320:ProductFormatsInstances.this.JF[P14],implicitevidence$321:ProductFormatsInstances.this.JF[P15],implicitevidence$322:ProductFormatsInstances.this.JF[P16],implicitevidence$323:ProductFormatsInstances.this.JF[P17]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat17", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: JF[P17], arg17: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat17", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat17[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,P17)=>T)(implicitevidence$289:ProductFormatsInstances.this.JF[P1],implicitevidence$290:ProductFormatsInstances.this.JF[P2],implicitevidence$291:ProductFormatsInstances.this.JF[P3],implicitevidence$292:ProductFormatsInstances.this.JF[P4],implicitevidence$293:ProductFormatsInstances.this.JF[P5],implicitevidence$294:ProductFormatsInstances.this.JF[P6],implicitevidence$295:ProductFormatsInstances.this.JF[P7],implicitevidence$296:ProductFormatsInstances.this.JF[P8],implicitevidence$297:ProductFormatsInstances.this.JF[P9],implicitevidence$298:ProductFormatsInstances.this.JF[P10],implicitevidence$299:ProductFormatsInstances.this.JF[P11],implicitevidence$300:ProductFormatsInstances.this.JF[P12],implicitevidence$301:ProductFormatsInstances.this.JF[P13],implicitevidence$302:ProductFormatsInstances.this.JF[P14],implicitevidence$303:ProductFormatsInstances.this.JF[P15],implicitevidence$304:ProductFormatsInstances.this.JF[P16],implicitevidence$305:ProductFormatsInstances.this.JF[P17],implicitevidence$306:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String, fieldName16: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String,fieldName16:String)(implicitevidence$273:ProductFormatsInstances.this.JF[P1],implicitevidence$274:ProductFormatsInstances.this.JF[P2],implicitevidence$275:ProductFormatsInstances.this.JF[P3],implicitevidence$276:ProductFormatsInstances.this.JF[P4],implicitevidence$277:ProductFormatsInstances.this.JF[P5],implicitevidence$278:ProductFormatsInstances.this.JF[P6],implicitevidence$279:ProductFormatsInstances.this.JF[P7],implicitevidence$280:ProductFormatsInstances.this.JF[P8],implicitevidence$281:ProductFormatsInstances.this.JF[P9],implicitevidence$282:ProductFormatsInstances.this.JF[P10],implicitevidence$283:ProductFormatsInstances.this.JF[P11],implicitevidence$284:ProductFormatsInstances.this.JF[P12],implicitevidence$285:ProductFormatsInstances.this.JF[P13],implicitevidence$286:ProductFormatsInstances.this.JF[P14],implicitevidence$287:ProductFormatsInstances.this.JF[P15],implicitevidence$288:ProductFormatsInstances.this.JF[P16]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat16", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: JF[P16], arg16: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat16", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat16[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16)=>T)(implicitevidence$256:ProductFormatsInstances.this.JF[P1],implicitevidence$257:ProductFormatsInstances.this.JF[P2],implicitevidence$258:ProductFormatsInstances.this.JF[P3],implicitevidence$259:ProductFormatsInstances.this.JF[P4],implicitevidence$260:ProductFormatsInstances.this.JF[P5],implicitevidence$261:ProductFormatsInstances.this.JF[P6],implicitevidence$262:ProductFormatsInstances.this.JF[P7],implicitevidence$263:ProductFormatsInstances.this.JF[P8],implicitevidence$264:ProductFormatsInstances.this.JF[P9],implicitevidence$265:ProductFormatsInstances.this.JF[P10],implicitevidence$266:ProductFormatsInstances.this.JF[P11],implicitevidence$267:ProductFormatsInstances.this.JF[P12],implicitevidence$268:ProductFormatsInstances.this.JF[P13],implicitevidence$269:ProductFormatsInstances.this.JF[P14],implicitevidence$270:ProductFormatsInstances.this.JF[P15],implicitevidence$271:ProductFormatsInstances.this.JF[P16],implicitevidence$272:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String, fieldName15: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String,fieldName15:String)(implicitevidence$241:ProductFormatsInstances.this.JF[P1],implicitevidence$242:ProductFormatsInstances.this.JF[P2],implicitevidence$243:ProductFormatsInstances.this.JF[P3],implicitevidence$244:ProductFormatsInstances.this.JF[P4],implicitevidence$245:ProductFormatsInstances.this.JF[P5],implicitevidence$246:ProductFormatsInstances.this.JF[P6],implicitevidence$247:ProductFormatsInstances.this.JF[P7],implicitevidence$248:ProductFormatsInstances.this.JF[P8],implicitevidence$249:ProductFormatsInstances.this.JF[P9],implicitevidence$250:ProductFormatsInstances.this.JF[P10],implicitevidence$251:ProductFormatsInstances.this.JF[P11],implicitevidence$252:ProductFormatsInstances.this.JF[P12],implicitevidence$253:ProductFormatsInstances.this.JF[P13],implicitevidence$254:ProductFormatsInstances.this.JF[P14],implicitevidence$255:ProductFormatsInstances.this.JF[P15]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat15", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: JF[P15], arg15: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat15", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat15[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15)=>T)(implicitevidence$225:ProductFormatsInstances.this.JF[P1],implicitevidence$226:ProductFormatsInstances.this.JF[P2],implicitevidence$227:ProductFormatsInstances.this.JF[P3],implicitevidence$228:ProductFormatsInstances.this.JF[P4],implicitevidence$229:ProductFormatsInstances.this.JF[P5],implicitevidence$230:ProductFormatsInstances.this.JF[P6],implicitevidence$231:ProductFormatsInstances.this.JF[P7],implicitevidence$232:ProductFormatsInstances.this.JF[P8],implicitevidence$233:ProductFormatsInstances.this.JF[P9],implicitevidence$234:ProductFormatsInstances.this.JF[P10],implicitevidence$235:ProductFormatsInstances.this.JF[P11],implicitevidence$236:ProductFormatsInstances.this.JF[P12],implicitevidence$237:ProductFormatsInstances.this.JF[P13],implicitevidence$238:ProductFormatsInstances.this.JF[P14],implicitevidence$239:ProductFormatsInstances.this.JF[P15],implicitevidence$240:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String, fieldName14: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String,fieldName14:String)(implicitevidence$211:ProductFormatsInstances.this.JF[P1],implicitevidence$212:ProductFormatsInstances.this.JF[P2],implicitevidence$213:ProductFormatsInstances.this.JF[P3],implicitevidence$214:ProductFormatsInstances.this.JF[P4],implicitevidence$215:ProductFormatsInstances.this.JF[P5],implicitevidence$216:ProductFormatsInstances.this.JF[P6],implicitevidence$217:ProductFormatsInstances.this.JF[P7],implicitevidence$218:ProductFormatsInstances.this.JF[P8],implicitevidence$219:ProductFormatsInstances.this.JF[P9],implicitevidence$220:ProductFormatsInstances.this.JF[P10],implicitevidence$221:ProductFormatsInstances.this.JF[P11],implicitevidence$222:ProductFormatsInstances.this.JF[P12],implicitevidence$223:ProductFormatsInstances.this.JF[P13],implicitevidence$224:ProductFormatsInstances.this.JF[P14]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat14", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: JF[P14], arg14: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat14", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat14[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=>T)(implicitevidence$196:ProductFormatsInstances.this.JF[P1],implicitevidence$197:ProductFormatsInstances.this.JF[P2],implicitevidence$198:ProductFormatsInstances.this.JF[P3],implicitevidence$199:ProductFormatsInstances.this.JF[P4],implicitevidence$200:ProductFormatsInstances.this.JF[P5],implicitevidence$201:ProductFormatsInstances.this.JF[P6],implicitevidence$202:ProductFormatsInstances.this.JF[P7],implicitevidence$203:ProductFormatsInstances.this.JF[P8],implicitevidence$204:ProductFormatsInstances.this.JF[P9],implicitevidence$205:ProductFormatsInstances.this.JF[P10],implicitevidence$206:ProductFormatsInstances.this.JF[P11],implicitevidence$207:ProductFormatsInstances.this.JF[P12],implicitevidence$208:ProductFormatsInstances.this.JF[P13],implicitevidence$209:ProductFormatsInstances.this.JF[P14],implicitevidence$210:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String, fieldName13: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String,fieldName13:String)(implicitevidence$183:ProductFormatsInstances.this.JF[P1],implicitevidence$184:ProductFormatsInstances.this.JF[P2],implicitevidence$185:ProductFormatsInstances.this.JF[P3],implicitevidence$186:ProductFormatsInstances.this.JF[P4],implicitevidence$187:ProductFormatsInstances.this.JF[P5],implicitevidence$188:ProductFormatsInstances.this.JF[P6],implicitevidence$189:ProductFormatsInstances.this.JF[P7],implicitevidence$190:ProductFormatsInstances.this.JF[P8],implicitevidence$191:ProductFormatsInstances.this.JF[P9],implicitevidence$192:ProductFormatsInstances.this.JF[P10],implicitevidence$193:ProductFormatsInstances.this.JF[P11],implicitevidence$194:ProductFormatsInstances.this.JF[P12],implicitevidence$195:ProductFormatsInstances.this.JF[P13]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat13", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: JF[P13], arg13: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat13", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat13[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)=>T)(implicitevidence$169:ProductFormatsInstances.this.JF[P1],implicitevidence$170:ProductFormatsInstances.this.JF[P2],implicitevidence$171:ProductFormatsInstances.this.JF[P3],implicitevidence$172:ProductFormatsInstances.this.JF[P4],implicitevidence$173:ProductFormatsInstances.this.JF[P5],implicitevidence$174:ProductFormatsInstances.this.JF[P6],implicitevidence$175:ProductFormatsInstances.this.JF[P7],implicitevidence$176:ProductFormatsInstances.this.JF[P8],implicitevidence$177:ProductFormatsInstances.this.JF[P9],implicitevidence$178:ProductFormatsInstances.this.JF[P10],implicitevidence$179:ProductFormatsInstances.this.JF[P11],implicitevidence$180:ProductFormatsInstances.this.JF[P12],implicitevidence$181:ProductFormatsInstances.this.JF[P13],implicitevidence$182:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String, fieldName12: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String,fieldName12:String)(implicitevidence$157:ProductFormatsInstances.this.JF[P1],implicitevidence$158:ProductFormatsInstances.this.JF[P2],implicitevidence$159:ProductFormatsInstances.this.JF[P3],implicitevidence$160:ProductFormatsInstances.this.JF[P4],implicitevidence$161:ProductFormatsInstances.this.JF[P5],implicitevidence$162:ProductFormatsInstances.this.JF[P6],implicitevidence$163:ProductFormatsInstances.this.JF[P7],implicitevidence$164:ProductFormatsInstances.this.JF[P8],implicitevidence$165:ProductFormatsInstances.this.JF[P9],implicitevidence$166:ProductFormatsInstances.this.JF[P10],implicitevidence$167:ProductFormatsInstances.this.JF[P11],implicitevidence$168:ProductFormatsInstances.this.JF[P12]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat12", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: JF[P12], arg12: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat12", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat12[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)=>T)(implicitevidence$144:ProductFormatsInstances.this.JF[P1],implicitevidence$145:ProductFormatsInstances.this.JF[P2],implicitevidence$146:ProductFormatsInstances.this.JF[P3],implicitevidence$147:ProductFormatsInstances.this.JF[P4],implicitevidence$148:ProductFormatsInstances.this.JF[P5],implicitevidence$149:ProductFormatsInstances.this.JF[P6],implicitevidence$150:ProductFormatsInstances.this.JF[P7],implicitevidence$151:ProductFormatsInstances.this.JF[P8],implicitevidence$152:ProductFormatsInstances.this.JF[P9],implicitevidence$153:ProductFormatsInstances.this.JF[P10],implicitevidence$154:ProductFormatsInstances.this.JF[P11],implicitevidence$155:ProductFormatsInstances.this.JF[P12],implicitevidence$156:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String, fieldName11: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String,fieldName11:String)(implicitevidence$133:ProductFormatsInstances.this.JF[P1],implicitevidence$134:ProductFormatsInstances.this.JF[P2],implicitevidence$135:ProductFormatsInstances.this.JF[P3],implicitevidence$136:ProductFormatsInstances.this.JF[P4],implicitevidence$137:ProductFormatsInstances.this.JF[P5],implicitevidence$138:ProductFormatsInstances.this.JF[P6],implicitevidence$139:ProductFormatsInstances.this.JF[P7],implicitevidence$140:ProductFormatsInstances.this.JF[P8],implicitevidence$141:ProductFormatsInstances.this.JF[P9],implicitevidence$142:ProductFormatsInstances.this.JF[P10],implicitevidence$143:ProductFormatsInstances.this.JF[P11]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat11", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: JF[P11], arg11: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat11", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat11[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11)=>T)(implicitevidence$121:ProductFormatsInstances.this.JF[P1],implicitevidence$122:ProductFormatsInstances.this.JF[P2],implicitevidence$123:ProductFormatsInstances.this.JF[P3],implicitevidence$124:ProductFormatsInstances.this.JF[P4],implicitevidence$125:ProductFormatsInstances.this.JF[P5],implicitevidence$126:ProductFormatsInstances.this.JF[P6],implicitevidence$127:ProductFormatsInstances.this.JF[P7],implicitevidence$128:ProductFormatsInstances.this.JF[P8],implicitevidence$129:ProductFormatsInstances.this.JF[P9],implicitevidence$130:ProductFormatsInstances.this.JF[P10],implicitevidence$131:ProductFormatsInstances.this.JF[P11],implicitevidence$132:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String, fieldName10: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String,fieldName10:String)(implicitevidence$111:ProductFormatsInstances.this.JF[P1],implicitevidence$112:ProductFormatsInstances.this.JF[P2],implicitevidence$113:ProductFormatsInstances.this.JF[P3],implicitevidence$114:ProductFormatsInstances.this.JF[P4],implicitevidence$115:ProductFormatsInstances.this.JF[P5],implicitevidence$116:ProductFormatsInstances.this.JF[P6],implicitevidence$117:ProductFormatsInstances.this.JF[P7],implicitevidence$118:ProductFormatsInstances.this.JF[P8],implicitevidence$119:ProductFormatsInstances.this.JF[P9],implicitevidence$120:ProductFormatsInstances.this.JF[P10]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat10", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: JF[P10], arg10: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat10", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat10[P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)=>T)(implicitevidence$100:ProductFormatsInstances.this.JF[P1],implicitevidence$101:ProductFormatsInstances.this.JF[P2],implicitevidence$102:ProductFormatsInstances.this.JF[P3],implicitevidence$103:ProductFormatsInstances.this.JF[P4],implicitevidence$104:ProductFormatsInstances.this.JF[P5],implicitevidence$105:ProductFormatsInstances.this.JF[P6],implicitevidence$106:ProductFormatsInstances.this.JF[P7],implicitevidence$107:ProductFormatsInstances.this.JF[P8],implicitevidence$108:ProductFormatsInstances.this.JF[P9],implicitevidence$109:ProductFormatsInstances.this.JF[P10],implicitevidence$110:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String, fieldName9: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String,fieldName9:String)(implicitevidence$91:ProductFormatsInstances.this.JF[P1],implicitevidence$92:ProductFormatsInstances.this.JF[P2],implicitevidence$93:ProductFormatsInstances.this.JF[P3],implicitevidence$94:ProductFormatsInstances.this.JF[P4],implicitevidence$95:ProductFormatsInstances.this.JF[P5],implicitevidence$96:ProductFormatsInstances.this.JF[P6],implicitevidence$97:ProductFormatsInstances.this.JF[P7],implicitevidence$98:ProductFormatsInstances.this.JF[P8],implicitevidence$99:ProductFormatsInstances.this.JF[P9]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat9", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8, P9) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: JF[P9], arg9: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat9", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat9[P1,P2,P3,P4,P5,P6,P7,P8,P9,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8,P9)=>T)(implicitevidence$81:ProductFormatsInstances.this.JF[P1],implicitevidence$82:ProductFormatsInstances.this.JF[P2],implicitevidence$83:ProductFormatsInstances.this.JF[P3],implicitevidence$84:ProductFormatsInstances.this.JF[P4],implicitevidence$85:ProductFormatsInstances.this.JF[P5],implicitevidence$86:ProductFormatsInstances.this.JF[P6],implicitevidence$87:ProductFormatsInstances.this.JF[P7],implicitevidence$88:ProductFormatsInstances.this.JF[P8],implicitevidence$89:ProductFormatsInstances.this.JF[P9],implicitevidence$90:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String, fieldName8: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String,fieldName8:String)(implicitevidence$73:ProductFormatsInstances.this.JF[P1],implicitevidence$74:ProductFormatsInstances.this.JF[P2],implicitevidence$75:ProductFormatsInstances.this.JF[P3],implicitevidence$76:ProductFormatsInstances.this.JF[P4],implicitevidence$77:ProductFormatsInstances.this.JF[P5],implicitevidence$78:ProductFormatsInstances.this.JF[P6],implicitevidence$79:ProductFormatsInstances.this.JF[P7],implicitevidence$80:ProductFormatsInstances.this.JF[P8]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat8", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7, P8) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: JF[P8], arg8: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat8", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat8[P1,P2,P3,P4,P5,P6,P7,P8,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7,P8)=>T)(implicitevidence$64:ProductFormatsInstances.this.JF[P1],implicitevidence$65:ProductFormatsInstances.this.JF[P2],implicitevidence$66:ProductFormatsInstances.this.JF[P3],implicitevidence$67:ProductFormatsInstances.this.JF[P4],implicitevidence$68:ProductFormatsInstances.this.JF[P5],implicitevidence$69:ProductFormatsInstances.this.JF[P6],implicitevidence$70:ProductFormatsInstances.this.JF[P7],implicitevidence$71:ProductFormatsInstances.this.JF[P8],implicitevidence$72:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String, fieldName7: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String,fieldName7:String)(implicitevidence$57:ProductFormatsInstances.this.JF[P1],implicitevidence$58:ProductFormatsInstances.this.JF[P2],implicitevidence$59:ProductFormatsInstances.this.JF[P3],implicitevidence$60:ProductFormatsInstances.this.JF[P4],implicitevidence$61:ProductFormatsInstances.this.JF[P5],implicitevidence$62:ProductFormatsInstances.this.JF[P6],implicitevidence$63:ProductFormatsInstances.this.JF[P7]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat7", "tail" : "(construct: (P1, P2, P3, P4, P5, P6, P7) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: JF[P7], arg7: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat7", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat7[P1,P2,P3,P4,P5,P6,P7,T<:Product](construct:(P1,P2,P3,P4,P5,P6,P7)=>T)(implicitevidence$49:ProductFormatsInstances.this.JF[P1],implicitevidence$50:ProductFormatsInstances.this.JF[P2],implicitevidence$51:ProductFormatsInstances.this.JF[P3],implicitevidence$52:ProductFormatsInstances.this.JF[P4],implicitevidence$53:ProductFormatsInstances.this.JF[P5],implicitevidence$54:ProductFormatsInstances.this.JF[P6],implicitevidence$55:ProductFormatsInstances.this.JF[P7],implicitevidence$56:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String, fieldName6: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String,fieldName6:String)(implicitevidence$43:ProductFormatsInstances.this.JF[P1],implicitevidence$44:ProductFormatsInstances.this.JF[P2],implicitevidence$45:ProductFormatsInstances.this.JF[P3],implicitevidence$46:ProductFormatsInstances.this.JF[P4],implicitevidence$47:ProductFormatsInstances.this.JF[P5],implicitevidence$48:ProductFormatsInstances.this.JF[P6]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat6", "tail" : "(construct: (P1, P2, P3, P4, P5, P6) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: JF[P6], arg6: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat6", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat6[P1,P2,P3,P4,P5,P6,T<:Product](construct:(P1,P2,P3,P4,P5,P6)=>T)(implicitevidence$36:ProductFormatsInstances.this.JF[P1],implicitevidence$37:ProductFormatsInstances.this.JF[P2],implicitevidence$38:ProductFormatsInstances.this.JF[P3],implicitevidence$39:ProductFormatsInstances.this.JF[P4],implicitevidence$40:ProductFormatsInstances.this.JF[P5],implicitevidence$41:ProductFormatsInstances.this.JF[P6],implicitevidence$42:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String, fieldName5: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String,fieldName5:String)(implicitevidence$31:ProductFormatsInstances.this.JF[P1],implicitevidence$32:ProductFormatsInstances.this.JF[P2],implicitevidence$33:ProductFormatsInstances.this.JF[P3],implicitevidence$34:ProductFormatsInstances.this.JF[P4],implicitevidence$35:ProductFormatsInstances.this.JF[P5]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat5", "tail" : "(construct: (P1, P2, P3, P4, P5) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: JF[P5], arg5: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat5", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat5[P1,P2,P3,P4,P5,T<:Product](construct:(P1,P2,P3,P4,P5)=>T)(implicitevidence$25:ProductFormatsInstances.this.JF[P1],implicitevidence$26:ProductFormatsInstances.this.JF[P2],implicitevidence$27:ProductFormatsInstances.this.JF[P3],implicitevidence$28:ProductFormatsInstances.this.JF[P4],implicitevidence$29:ProductFormatsInstances.this.JF[P5],implicitevidence$30:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String, fieldName4: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T,fieldName1:String,fieldName2:String,fieldName3:String,fieldName4:String)(implicitevidence$21:ProductFormatsInstances.this.JF[P1],implicitevidence$22:ProductFormatsInstances.this.JF[P2],implicitevidence$23:ProductFormatsInstances.this.JF[P3],implicitevidence$24:ProductFormatsInstances.this.JF[P4]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat4", "tail" : "(construct: (P1, P2, P3, P4) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: JF[P4], arg4: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat4", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat4[P1,P2,P3,P4,T<:Product](construct:(P1,P2,P3,P4)=>T)(implicitevidence$16:ProductFormatsInstances.this.JF[P1],implicitevidence$17:ProductFormatsInstances.this.JF[P2],implicitevidence$18:ProductFormatsInstances.this.JF[P3],implicitevidence$19:ProductFormatsInstances.this.JF[P4],implicitevidence$20:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2, P3) ⇒ T, fieldName1: String, fieldName2: String, fieldName3: String)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T,fieldName1:String,fieldName2:String,fieldName3:String)(implicitevidence$13:ProductFormatsInstances.this.JF[P1],implicitevidence$14:ProductFormatsInstances.this.JF[P2],implicitevidence$15:ProductFormatsInstances.this.JF[P3]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat3", "tail" : "(construct: (P1, P2, P3) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: JF[P3], arg3: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat3", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat3[P1,P2,P3,T<:Product](construct:(P1,P2,P3)=>T)(implicitevidence$9:ProductFormatsInstances.this.JF[P1],implicitevidence$10:ProductFormatsInstances.this.JF[P2],implicitevidence$11:ProductFormatsInstances.this.JF[P3],implicitevidence$12:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1, P2) ⇒ T, fieldName1: String, fieldName2: String)(arg0: JF[P1], arg1: JF[P2]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,P2,T<:Product](construct:(P1,P2)=>T,fieldName1:String,fieldName2:String)(implicitevidence$7:ProductFormatsInstances.this.JF[P1],implicitevidence$8:ProductFormatsInstances.this.JF[P2]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat2", "tail" : "(construct: (P1, P2) ⇒ T)(arg0: JF[P1], arg1: JF[P2], arg2: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat2", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat2[P1,P2,T<:Product](construct:(P1,P2)=>T)(implicitevidence$4:ProductFormatsInstances.this.JF[P1],implicitevidence$5:ProductFormatsInstances.this.JF[P2],implicitevidence$6:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat", "tail" : "(construct: (P1) ⇒ T, fieldName1: String)(arg0: JF[P1]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat[P1,T<:Product](construct:P1=>T,fieldName1:String)(implicitevidence$3:ProductFormatsInstances.this.JF[P1]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "jsonFormat1", "tail" : "(construct: (P1) ⇒ T)(arg0: JF[P1], arg1: ClassManifest[T]): RootJsonFormat[T]", "member" : "spray.json.ProductFormatsInstances.jsonFormat1", "link" : "bigglue\/examples\/MockProtocol2$.html#jsonFormat1[P1,T<:Product](construct:P1=>T)(implicitevidence$1:ProductFormatsInstances.this.JF[P1],implicitevidence$2:ClassManifest[T]):spray.json.RootJsonFormat[T]", "kind" : "def"}, {"label" : "viaSeq", "tail" : "(f: (Seq[T]) ⇒ I)(arg0: JsonFormat[T]): RootJsonFormat[I]", "member" : "spray.json.CollectionFormats.viaSeq", "link" : "bigglue\/examples\/MockProtocol2$.html#viaSeq[I<:Iterable[T],T](f:scala.collection.immutable.Seq[T]=>I)(implicitevidence$17:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[I]", "kind" : "def"}, {"label" : "setFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.setFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#setFormat[T](implicitevidence$16:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.Set[T]]", "kind" : "implicit def"}, {"label" : "linearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.linearSeqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#linearSeqFormat[T](implicitevidence$15:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.indexedSeqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#indexedSeqFormat[T](implicitevidence$14:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.seqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#seqFormat[T](implicitevidence$13:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.iterableFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#iterableFormat[T](implicitevidence$12:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Iterable[T]]", "kind" : "implicit def"}, {"label" : "vectorFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Vector[T]]", "member" : "spray.json.CollectionFormats.vectorFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#vectorFormat[T](implicitevidence$11:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[Vector[T]]", "kind" : "implicit def"}, {"label" : "immSetFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Set[T]]", "member" : "spray.json.CollectionFormats.immSetFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#immSetFormat[T](implicitevidence$10:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Set[T]]", "kind" : "implicit def"}, {"label" : "immLinearSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[LinearSeq[T]]", "member" : "spray.json.CollectionFormats.immLinearSeqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#immLinearSeqFormat[T](implicitevidence$9:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.LinearSeq[T]]", "kind" : "implicit def"}, {"label" : "immIndexedSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[IndexedSeq[T]]", "member" : "spray.json.CollectionFormats.immIndexedSeqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#immIndexedSeqFormat[T](implicitevidence$8:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "immSeqFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Seq[T]]", "member" : "spray.json.CollectionFormats.immSeqFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#immSeqFormat[T](implicitevidence$7:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Seq[T]]", "kind" : "implicit def"}, {"label" : "immIterableFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[Iterable[T]]", "member" : "spray.json.CollectionFormats.immIterableFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#immIterableFormat[T](implicitevidence$6:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[scala.collection.immutable.Iterable[T]]", "kind" : "implicit def"}, {"label" : "mapFormat", "tail" : "(arg0: JsonFormat[K], arg1: JsonFormat[V]): RootJsonFormat[Map[K, V]] { def write(m: Map[K,V]): spray.json.JsObject }", "member" : "spray.json.CollectionFormats.mapFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#mapFormat[K,V](implicitevidence$4:spray.json.JsonFormat[K],implicitevidence$5:spray.json.JsonFormat[V]):spray.json.RootJsonFormat[Map[K,V]]{defwrite(m:Map[K,V]):spray.json.JsObject}", "kind" : "implicit def"}, {"label" : "arrayFormat", "tail" : "(arg0: JsonFormat[T], arg1: ClassManifest[T]): RootJsonFormat[Array[T]] { def write(array: Array[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.arrayFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#arrayFormat[T](implicitevidence$2:spray.json.JsonFormat[T],implicitevidence$3:ClassManifest[T]):spray.json.RootJsonFormat[Array[T]]{defwrite(array:Array[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "listFormat", "tail" : "(arg0: JsonFormat[T]): RootJsonFormat[List[T]] { def write(list: List[T]): spray.json.JsArray }", "member" : "spray.json.CollectionFormats.listFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#listFormat[T](implicitevidence$1:spray.json.JsonFormat[T]):spray.json.RootJsonFormat[List[T]]{defwrite(list:List[T]):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple7Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F], arg6: JF[G]): RootJsonFormat[(A, B, C, D, E, F, G)] { def write(t: (A, B, C, D, E, F, G)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple7Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple7Format[A,B,C,D,E,F,G](implicitevidence$26:StandardFormats.this.JF[A],implicitevidence$27:StandardFormats.this.JF[B],implicitevidence$28:StandardFormats.this.JF[C],implicitevidence$29:StandardFormats.this.JF[D],implicitevidence$30:StandardFormats.this.JF[E],implicitevidence$31:StandardFormats.this.JF[F],implicitevidence$32:StandardFormats.this.JF[G]):spray.json.RootJsonFormat[(A,B,C,D,E,F,G)]{defwrite(t:(A,B,C,D,E,F,G)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple6Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E], arg5: JF[F]): RootJsonFormat[(A, B, C, D, E, F)] { def write(t: (A, B, C, D, E, F)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple6Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple6Format[A,B,C,D,E,F](implicitevidence$20:StandardFormats.this.JF[A],implicitevidence$21:StandardFormats.this.JF[B],implicitevidence$22:StandardFormats.this.JF[C],implicitevidence$23:StandardFormats.this.JF[D],implicitevidence$24:StandardFormats.this.JF[E],implicitevidence$25:StandardFormats.this.JF[F]):spray.json.RootJsonFormat[(A,B,C,D,E,F)]{defwrite(t:(A,B,C,D,E,F)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple5Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D], arg4: JF[E]): RootJsonFormat[(A, B, C, D, E)] { def write(t: (A, B, C, D, E)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple5Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple5Format[A,B,C,D,E](implicitevidence$15:StandardFormats.this.JF[A],implicitevidence$16:StandardFormats.this.JF[B],implicitevidence$17:StandardFormats.this.JF[C],implicitevidence$18:StandardFormats.this.JF[D],implicitevidence$19:StandardFormats.this.JF[E]):spray.json.RootJsonFormat[(A,B,C,D,E)]{defwrite(t:(A,B,C,D,E)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple4Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C], arg3: JF[D]): RootJsonFormat[(A, B, C, D)] { def write(t: (A, B, C, D)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple4Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple4Format[A,B,C,D](implicitevidence$11:StandardFormats.this.JF[A],implicitevidence$12:StandardFormats.this.JF[B],implicitevidence$13:StandardFormats.this.JF[C],implicitevidence$14:StandardFormats.this.JF[D]):spray.json.RootJsonFormat[(A,B,C,D)]{defwrite(t:(A,B,C,D)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple3Format", "tail" : "(arg0: JF[A], arg1: JF[B], arg2: JF[C]): RootJsonFormat[(A, B, C)] { def write(t: (A, B, C)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple3Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple3Format[A,B,C](implicitevidence$8:StandardFormats.this.JF[A],implicitevidence$9:StandardFormats.this.JF[B],implicitevidence$10:StandardFormats.this.JF[C]):spray.json.RootJsonFormat[(A,B,C)]{defwrite(t:(A,B,C)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple2Format", "tail" : "(arg0: JF[A], arg1: JF[B]): RootJsonFormat[(A, B)] { def write(t: (A, B)): spray.json.JsArray }", "member" : "spray.json.StandardFormats.tuple2Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple2Format[A,B](implicitevidence$6:StandardFormats.this.JF[A],implicitevidence$7:StandardFormats.this.JF[B]):spray.json.RootJsonFormat[(A,B)]{defwrite(t:(A,B)):spray.json.JsArray}", "kind" : "implicit def"}, {"label" : "tuple1Format", "tail" : "(arg0: JF[A]): JF[(A)]", "member" : "spray.json.StandardFormats.tuple1Format", "link" : "bigglue\/examples\/MockProtocol2$.html#tuple1Format[A](implicitevidence$5:StandardFormats.this.JF[A]):StandardFormats.this.JF[(A,)]", "kind" : "implicit def"}, {"label" : "eitherFormat", "tail" : "(arg0: JF[A], arg1: JF[B]): JF[Either[A, B]]", "member" : "spray.json.StandardFormats.eitherFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#eitherFormat[A,B](implicitevidence$3:StandardFormats.this.JF[A],implicitevidence$4:StandardFormats.this.JF[B]):StandardFormats.this.JF[Either[A,B]]", "kind" : "implicit def"}, {"label" : "optionFormat", "tail" : "(arg0: JF[T]): JF[Option[T]]", "member" : "spray.json.StandardFormats.optionFormat", "link" : "bigglue\/examples\/MockProtocol2$.html#optionFormat[T](implicitevidence$1:StandardFormats.this.JF[T]):StandardFormats.this.JF[Option[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/MockProtocol2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/MockProtocol2$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/MockProtocol2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/MockProtocol2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/MockProtocol2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/MockProtocol2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/MockProtocol2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/MockProtocol2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/MockProtocol2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/MockProtocol2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/MockProtocol2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/MockProtocol2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/MockProtocol2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/MockProtocol2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/MockProtocol2$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/MockProtocol2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/MockProtocol2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/MockProtocol2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/MockProtocol2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.examples.NestedWithGitRepo", "shortDescription" : "For Solr, we have to make sure that the JSON is completely flat.", "object" : "bigglue\/examples\/NestedWithGitRepo$.html", "members_object" : [{"label" : "deflatten", "tail" : "(jsObj: JsObject): JsObject", "member" : "bigglue.examples.NestedWithGitRepo.deflatten", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#deflatten(jsObj:spray.json.JsObject):spray.json.JsObject", "kind" : "def"}, {"label" : "flatten", "tail" : "(jsObj: JsObject): JsObject", "member" : "bigglue.examples.NestedWithGitRepo.flatten", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#flatten(jsObj:spray.json.JsObject):spray.json.JsObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/examples\/NestedWithGitRepo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/examples\/NestedWithGitRepo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "bigglue.exceptions" : [{"name" : "bigglue.exceptions.CallNotAllowException", "shortDescription" : "This is generally thrown when a method was called on a receiver instance that does not handle that call", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/CallNotAllowException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/CallNotAllowException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CallNotAllowException) ⇒ Boolean, msg: ⇒ Any): CallNotAllowException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/CallNotAllowException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CallNotAllowException) ⇒ Boolean): CallNotAllowException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/CallNotAllowException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CallNotAllowException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/CallNotAllowException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CallNotAllowException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/CallNotAllowException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CallNotAllowException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/CallNotAllowException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CallNotAllowException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/CallNotAllowException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.CallNotAllowException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/CallNotAllowException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/CallNotAllowException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/CallNotAllowException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/CallNotAllowException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/CallNotAllowException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/CallNotAllowException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/CallNotAllowException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/CallNotAllowException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/CallNotAllowException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/CallNotAllowException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/CallNotAllowException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/CallNotAllowException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/CallNotAllowException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/CallNotAllowException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/CallNotAllowException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/CallNotAllowException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/CallNotAllowException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/CallNotAllowException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/CallNotAllowException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/CallNotAllowException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/CallNotAllowException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/CallNotAllowException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/CallNotAllowException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.IncompatiblePipelineSegmentException", "shortDescription" : "This is thrown when an input\/output DataStore checking routine has determined an incompatibility with the associatedcomputation\/platform", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IncompatiblePipelineSegmentException) ⇒ Boolean, msg: ⇒ Any): IncompatiblePipelineSegmentException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IncompatiblePipelineSegmentException) ⇒ Boolean): IncompatiblePipelineSegmentException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IncompatiblePipelineSegmentException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IncompatiblePipelineSegmentException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IncompatiblePipelineSegmentException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IncompatiblePipelineSegmentException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.IncompatiblePipelineSegmentException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/IncompatiblePipelineSegmentException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.MalformedPipelineConfigException", "shortDescription" : "This is thrown when a configuration file checking routine has determined a problem in a configuration path", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MalformedPipelineConfigException) ⇒ Boolean, msg: ⇒ Any): MalformedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MalformedPipelineConfigException) ⇒ Boolean): MalformedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MalformedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MalformedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MalformedPipelineConfigException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MalformedPipelineConfigException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.MalformedPipelineConfigException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/MalformedPipelineConfigException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/MalformedPipelineConfigException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.NotInitializedException", "shortDescription" : "This is thrown when the runtime attempts to call a pipeline operation that requires initialization, but thepipeline has not been initialized.", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/NotInitializedException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/NotInitializedException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/NotInitializedException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotInitializedException) ⇒ Boolean, msg: ⇒ Any): NotInitializedException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotInitializedException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotInitializedException) ⇒ Boolean): NotInitializedException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotInitializedException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NotInitializedException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotInitializedException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NotInitializedException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotInitializedException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NotInitializedException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/NotInitializedException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NotInitializedException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/NotInitializedException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.NotInitializedException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/NotInitializedException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/NotInitializedException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotInitializedException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/NotInitializedException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/NotInitializedException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/NotInitializedException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/NotInitializedException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/NotInitializedException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/NotInitializedException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/NotInitializedException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/NotInitializedException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/NotInitializedException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/NotInitializedException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/NotInitializedException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/NotInitializedException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotInitializedException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotInitializedException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotInitializedException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/NotInitializedException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/NotInitializedException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/NotInitializedException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/NotInitializedException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/NotInitializedException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/NotInitializedException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/NotInitializedException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/NotInitializedException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/NotInitializedException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.NotSupportedConfigFormatException", "shortDescription" : "This is generally thrown when a config loading routine encountered path patterns that are not supported bythe current implementation", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotSupportedConfigFormatException) ⇒ Boolean, msg: ⇒ Any): NotSupportedConfigFormatException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotSupportedConfigFormatException) ⇒ Boolean): NotSupportedConfigFormatException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NotSupportedConfigFormatException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NotSupportedConfigFormatException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NotSupportedConfigFormatException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NotSupportedConfigFormatException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.NotSupportedConfigFormatException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/NotSupportedConfigFormatException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.NotSupportedPipelineConfigException", "shortDescription" : "This is thrown when a configuration type supplied to a specific segment of the pipeline is not supported by thecomponents of that segment.", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotSupportedPipelineConfigException) ⇒ Boolean, msg: ⇒ Any): NotSupportedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NotSupportedPipelineConfigException) ⇒ Boolean): NotSupportedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NotSupportedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NotSupportedPipelineConfigException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NotSupportedPipelineConfigException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NotSupportedPipelineConfigException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.NotSupportedPipelineConfigException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/NotSupportedPipelineConfigException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.ProtoPipeException", "shortDescription" : "Created by edmundlam on 8\/17\/17.", "object" : "bigglue\/exceptions\/ProtoPipeException$.html", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/ProtoPipeException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/ProtoPipeException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtoPipeException) ⇒ Boolean, msg: ⇒ Any): ProtoPipeException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/ProtoPipeException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtoPipeException) ⇒ Boolean): ProtoPipeException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/ProtoPipeException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProtoPipeException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/ProtoPipeException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProtoPipeException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/ProtoPipeException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProtoPipeException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/ProtoPipeException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProtoPipeException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/ProtoPipeException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.ProtoPipeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/ProtoPipeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/ProtoPipeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/ProtoPipeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/ProtoPipeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/ProtoPipeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/ProtoPipeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/ProtoPipeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/ProtoPipeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/ProtoPipeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/ProtoPipeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/ProtoPipeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/ProtoPipeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/ProtoPipeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/ProtoPipeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/ProtoPipeException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/ProtoPipeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/ProtoPipeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/ProtoPipeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/ProtoPipeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "defaultMsg", "tail" : "(message: Option[String], cause: Option[Throwable]): String", "member" : "bigglue.exceptions.ProtoPipeException.defaultMsg", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#defaultMsg(message:Option[String],cause:Option[Throwable]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/ProtoPipeException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/ProtoPipeException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/ProtoPipeException.html", "kind" : "object"}, {"name" : "bigglue.exceptions.UnexpectedPipelineException", "shortDescription" : "This is thrown at top-level pipeline try catch blocks.", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnexpectedPipelineException) ⇒ Boolean, msg: ⇒ Any): UnexpectedPipelineException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnexpectedPipelineException) ⇒ Boolean): UnexpectedPipelineException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UnexpectedPipelineException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnexpectedPipelineException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnexpectedPipelineException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnexpectedPipelineException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.UnexpectedPipelineException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/UnexpectedPipelineException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/UnexpectedPipelineException.html", "kind" : "class"}, {"name" : "bigglue.exceptions.UserComputationException", "shortDescription" : "This is thrown when an uncaught (by user) exception occurred in a user-defined computation", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "bigglue\/exceptions\/UserComputationException.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/exceptions\/UserComputationException.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/exceptions\/UserComputationException.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UserComputationException) ⇒ Boolean, msg: ⇒ Any): UserComputationException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UserComputationException.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UserComputationException) ⇒ Boolean): UserComputationException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UserComputationException.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UserComputationException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UserComputationException.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UserComputationException", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/exceptions\/UserComputationException.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UserComputationException, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/exceptions\/UserComputationException.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UserComputationException, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/exceptions\/UserComputationException.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.exceptions.UserComputationException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "bigglue\/exceptions\/UserComputationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "bigglue\/exceptions\/UserComputationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "bigglue\/exceptions\/UserComputationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "bigglue\/exceptions\/UserComputationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "bigglue\/exceptions\/UserComputationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "bigglue\/exceptions\/UserComputationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "bigglue\/exceptions\/UserComputationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "bigglue\/exceptions\/UserComputationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/exceptions\/UserComputationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/exceptions\/UserComputationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/exceptions\/UserComputationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/exceptions\/UserComputationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/exceptions\/UserComputationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/exceptions\/UserComputationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/exceptions\/UserComputationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UserComputationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UserComputationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/exceptions\/UserComputationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/exceptions\/UserComputationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/exceptions\/UserComputationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/exceptions\/UserComputationException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/exceptions\/UserComputationException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/exceptions\/UserComputationException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/exceptions\/UserComputationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/exceptions\/UserComputationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/exceptions\/UserComputationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/exceptions\/UserComputationException.html", "kind" : "class"}], "bigglue.configurations" : [{"name" : "bigglue.configurations.Compute", "shortDescription" : "Created by edmundlam on 8\/11\/17.", "object" : "bigglue\/configurations\/Compute$.html", "members_object" : [{"label" : "cartesianProduct", "tail" : "(): CartesianProduct[InputL, InputR]", "member" : "bigglue.configurations.Compute.cartesianProduct", "link" : "bigglue\/configurations\/Compute$.html#cartesianProduct[InputL<:bigglue.data.Identifiable[InputL],InputR<:bigglue.data.Identifiable[InputR]]:bigglue.computations.CartesianProduct[InputL,InputR]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/Compute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/Compute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/Compute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/Compute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/Compute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/Compute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/Compute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Compute$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Compute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Compute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/Compute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/Compute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/Compute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/Compute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/Compute$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/Compute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/Compute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/Compute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/Compute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.configurations.ConfigBuilds", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/ConfigBuilds.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/ConfigBuilds.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuilds[Builder]) ⇒ Boolean, msg: ⇒ Any): ConfigBuilds[Builder]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuilds.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuilds[Builder]) ⇒ Boolean): ConfigBuilds[Builder]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuilds.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigBuilds[Builder]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuilds.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigBuilds[Builder]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuilds.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigBuilds[Builder], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/ConfigBuilds.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigBuilds[Builder], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/ConfigBuilds.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/configurations\/ConfigBuilds.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/configurations\/ConfigBuilds.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/configurations\/ConfigBuilds.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfigBuilds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfigBuilds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfigBuilds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfigBuilds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfigBuilds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfigBuilds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfigBuilds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuilds.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuilds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuilds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfigBuilds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfigBuilds.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfigBuilds.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfigBuilds.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfigBuilds.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfigBuilds.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfigBuilds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfigBuilds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfigBuilds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): Builder", "member" : "bigglue.configurations.ConfigBuilds.constructBuilder", "link" : "bigglue\/configurations\/ConfigBuilds.html#constructBuilder(config:bigglue.configurations.PipeConfig):Builder", "kind" : "abstract def"}], "shortDescription" : "Created by edmundlam on 9\/5\/17.", "trait" : "bigglue\/configurations\/ConfigBuilds.html", "kind" : "trait"}, {"name" : "bigglue.configurations.ConfigBuildsDataStore", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsDataStore) ⇒ Boolean, msg: ⇒ Any): ConfigBuildsDataStore", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsDataStore) ⇒ Boolean): ConfigBuildsDataStore", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigBuildsDataStore", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigBuildsDataStore", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigBuildsDataStore, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigBuildsDataStore, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsDataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/configurations\/ConfigBuildsDataStore.html", "kind" : "trait"}, {"name" : "bigglue.configurations.ConfigBuildsDataStorePlatform", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsDataStorePlatform) ⇒ Boolean, msg: ⇒ Any): ConfigBuildsDataStorePlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsDataStorePlatform) ⇒ Boolean): ConfigBuildsDataStorePlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigBuildsDataStorePlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigBuildsDataStorePlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigBuildsDataStorePlatform, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigBuildsDataStorePlatform, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): (PlatformBuilder, DataStoreBuilder)", "member" : "bigglue.configurations.ConfigBuildsDataStorePlatform.constructBuilder", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#constructBuilder(config:bigglue.configurations.PipeConfig):(bigglue.configurations.PlatformBuilder,bigglue.configurations.DataStoreBuilder)", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuildsDataStorePlatform.setConfig", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "buildsDataStore", "tail" : ": ConfigBuildsDataStore", "member" : "bigglue.configurations.ConfigBuildsDataStorePlatform.buildsDataStore", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#buildsDataStore:bigglue.configurations.ConfigBuildsDataStore", "kind" : "val"}, {"label" : "buildsPlatform", "tail" : ": ConfigBuildsPlatform", "member" : "bigglue.configurations.ConfigBuildsDataStorePlatform.buildsPlatform", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#buildsPlatform:bigglue.configurations.ConfigBuildsPlatform", "kind" : "val"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/configurations\/ConfigBuildsDataStorePlatform.html", "kind" : "trait"}, {"name" : "bigglue.configurations.ConfigBuildsPlatform", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsPlatform) ⇒ Boolean, msg: ⇒ Any): ConfigBuildsPlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigBuildsPlatform) ⇒ Boolean): ConfigBuildsPlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigBuildsPlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigBuildsPlatform", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigBuildsPlatform, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigBuildsPlatform, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.ConfigBuildsPlatform.constructBuilder", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfigBuildsPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "bigglue\/configurations\/ConfigBuildsPlatform.html", "kind" : "trait"}, {"name" : "bigglue.configurations.ConfOpt", "shortDescription" : "Created by edmundlam on 8\/15\/17.", "object" : "bigglue\/configurations\/ConfOpt$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/ConfOpt.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/ConfOpt.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfOpt) ⇒ Boolean, msg: ⇒ Any): ConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfOpt.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfOpt) ⇒ Boolean): ConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfOpt.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfOpt.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/ConfOpt.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfOpt, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/ConfOpt.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfOpt, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/ConfOpt.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.ConfOpt#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfOpt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfOpt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfOpt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfOpt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "properties", "tail" : "(props: Properties): PropertiesOpt", "member" : "bigglue.configurations.ConfOpt.properties", "link" : "bigglue\/configurations\/ConfOpt$.html#properties(props:java.util.Properties):bigglue.configurations.PropertiesOpt", "kind" : "def"}, {"label" : "typesafeConfig", "tail" : "(conf: Config): TypesafeConfOpt", "member" : "bigglue.configurations.ConfOpt.typesafeConfig", "link" : "bigglue\/configurations\/ConfOpt$.html#typesafeConfig(conf:com.typesafe.config.Config):bigglue.configurations.TypesafeConfOpt", "kind" : "def"}, {"label" : "label", "tail" : "(name: String): StepLabelOpt", "member" : "bigglue.configurations.ConfOpt.label", "link" : "bigglue\/configurations\/ConfOpt$.html#label(name:String):bigglue.configurations.StepLabelOpt", "kind" : "def"}, {"label" : "default", "tail" : "(): ConfOpt", "member" : "bigglue.configurations.ConfOpt.default", "link" : "bigglue\/configurations\/ConfOpt$.html#default:bigglue.configurations.ConfOpt", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/ConfOpt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/ConfOpt$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/ConfOpt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/ConfOpt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/ConfOpt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/ConfOpt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/ConfOpt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/ConfOpt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/ConfOpt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/ConfOpt$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/ConfOpt$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/ConfOpt$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/ConfOpt$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/ConfOpt$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/ConfOpt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/ConfOpt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/ConfOpt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/configurations\/ConfOpt.html", "kind" : "class"}, {"name" : "bigglue.configurations.Constant", "shortDescription" : "Created by edmundlam on 8\/15\/17.", "object" : "bigglue\/configurations\/Constant$.html", "members_object" : [{"label" : "DATASTREAMBUFFER", "tail" : ": String", "member" : "bigglue.configurations.Constant.DATASTREAMBUFFER", "link" : "bigglue\/configurations\/Constant$.html#DATASTREAMBUFFER:String", "kind" : "val"}, {"label" : "KAFKA", "tail" : ": String", "member" : "bigglue.configurations.Constant.KAFKA", "link" : "bigglue\/configurations\/Constant$.html#KAFKA:String", "kind" : "val"}, {"label" : "LIST", "tail" : ": String", "member" : "bigglue.configurations.Constant.LIST", "link" : "bigglue\/configurations\/Constant$.html#LIST:String", "kind" : "val"}, {"label" : "QUEUE", "tail" : ": String", "member" : "bigglue.configurations.Constant.QUEUE", "link" : "bigglue\/configurations\/Constant$.html#QUEUE:String", "kind" : "val"}, {"label" : "MULTIMAP", "tail" : ": String", "member" : "bigglue.configurations.Constant.MULTIMAP", "link" : "bigglue\/configurations\/Constant$.html#MULTIMAP:String", "kind" : "val"}, {"label" : "IDMAP", "tail" : ": String", "member" : "bigglue.configurations.Constant.IDMAP", "link" : "bigglue\/configurations\/Constant$.html#IDMAP:String", "kind" : "val"}, {"label" : "MAP", "tail" : ": String", "member" : "bigglue.configurations.Constant.MAP", "link" : "bigglue\/configurations\/Constant$.html#MAP:String", "kind" : "val"}, {"label" : "DATASTORE", "tail" : ": String", "member" : "bigglue.configurations.Constant.DATASTORE", "link" : "bigglue\/configurations\/Constant$.html#DATASTORE:String", "kind" : "val"}, {"label" : "PAIRWISE", "tail" : ": String", "member" : "bigglue.configurations.Constant.PAIRWISE", "link" : "bigglue\/configurations\/Constant$.html#PAIRWISE:String", "kind" : "val"}, {"label" : "REDUCER", "tail" : ": String", "member" : "bigglue.configurations.Constant.REDUCER", "link" : "bigglue\/configurations\/Constant$.html#REDUCER:String", "kind" : "val"}, {"label" : "MAPPER", "tail" : ": String", "member" : "bigglue.configurations.Constant.MAPPER", "link" : "bigglue\/configurations\/Constant$.html#MAPPER:String", "kind" : "val"}, {"label" : "ERROR", "tail" : ": String", "member" : "bigglue.configurations.Constant.ERROR", "link" : "bigglue\/configurations\/Constant$.html#ERROR:String", "kind" : "val"}, {"label" : "PROVENANCE", "tail" : ": String", "member" : "bigglue.configurations.Constant.PROVENANCE", "link" : "bigglue\/configurations\/Constant$.html#PROVENANCE:String", "kind" : "val"}, {"label" : "CONNECTOR", "tail" : ": String", "member" : "bigglue.configurations.Constant.CONNECTOR", "link" : "bigglue\/configurations\/Constant$.html#CONNECTOR:String", "kind" : "val"}, {"label" : "PLATFORM", "tail" : ": String", "member" : "bigglue.configurations.Constant.PLATFORM", "link" : "bigglue\/configurations\/Constant$.html#PLATFORM:String", "kind" : "val"}, {"label" : "BIGGLUE", "tail" : ": String", "member" : "bigglue.configurations.Constant.BIGGLUE", "link" : "bigglue\/configurations\/Constant$.html#BIGGLUE:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/Constant$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/Constant$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/Constant$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/Constant$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/Constant$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/Constant$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/Constant$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Constant$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Constant$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/Constant$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/Constant$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/Constant$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/Constant$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/Constant$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/Constant$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/Constant$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/Constant$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/Constant$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/Constant$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.configurations.DataStoreBuilder", "shortDescription" : "Created by edmundlam on 8\/15\/17.", "object" : "bigglue\/configurations\/DataStoreBuilder$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/DataStoreBuilder.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/DataStoreBuilder.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStoreBuilder) ⇒ Boolean, msg: ⇒ Any): DataStoreBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/DataStoreBuilder.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DataStoreBuilder) ⇒ Boolean): DataStoreBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/DataStoreBuilder.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DataStoreBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/DataStoreBuilder.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DataStoreBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/DataStoreBuilder.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DataStoreBuilder, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/DataStoreBuilder.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DataStoreBuilder, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/DataStoreBuilder.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "mkAuxStore", "tail" : "(template: String): Option[Store]", "member" : "bigglue.configurations.DataStoreBuilder.mkAuxStore", "link" : "bigglue\/configurations\/DataStoreBuilder.html#mkAuxStore[Store](template:String):Option[Store]", "kind" : "def"}, {"label" : "loadAux", "tail" : "(pconf: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.DataStoreBuilder.loadAux", "link" : "bigglue\/configurations\/DataStoreBuilder.html#loadAux(pconf:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "confOpt", "tail" : ": Option[Config]", "member" : "bigglue.configurations.DataStoreBuilder.confOpt", "link" : "bigglue\/configurations\/DataStoreBuilder.html#confOpt:Option[com.typesafe.config.Config]", "kind" : "var"}, {"member" : "bigglue.configurations.DataStoreBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/DataStoreBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/DataStoreBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/DataStoreBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/DataStoreBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/DataStoreBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/DataStoreBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/DataStoreBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/DataStoreBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/DataStoreBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/DataStoreBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/DataStoreBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/DataStoreBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/DataStoreBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/DataStoreBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/DataStoreBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/DataStoreBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "list", "tail" : "(name: String, template: String): DataStore[Data]", "member" : "bigglue.configurations.DataStoreBuilder.list", "link" : "bigglue\/configurations\/DataStoreBuilder.html#list[Data](name:String,template:String):bigglue.store.DataStore[Data]", "kind" : "abstract def"}, {"label" : "queue", "tail" : "(name: String, template: String): DataQueue[Data]", "member" : "bigglue.configurations.DataStoreBuilder.queue", "link" : "bigglue\/configurations\/DataStoreBuilder.html#queue[Data](name:String,template:String):bigglue.store.DataQueue[Data]", "kind" : "abstract def"}, {"label" : "multimap", "tail" : "(name: String, template: String): DataMultiMap[Key, Data]", "member" : "bigglue.configurations.DataStoreBuilder.multimap", "link" : "bigglue\/configurations\/DataStoreBuilder.html#multimap[Key,Data](name:String,template:String):bigglue.store.DataMultiMap[Key,Data]", "kind" : "abstract def"}, {"label" : "idmap", "tail" : "(name: String, template: String): IdDataMap[Item]", "member" : "bigglue.configurations.DataStoreBuilder.idmap", "link" : "bigglue\/configurations\/DataStoreBuilder.html#idmap[Item<:bigglue.data.Identifiable[Item]](name:String,template:String):bigglue.store.IdDataMap[Item]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(name: String, template: String): DataMap[Key, Data]", "member" : "bigglue.configurations.DataStoreBuilder.map", "link" : "bigglue\/configurations\/DataStoreBuilder.html#map[Key,Data](name:String,template:String):bigglue.store.DataMap[Key,Data]", "kind" : "abstract def"}], "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "bigglue.configurations.DataStoreBuilder.main", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(pconf: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.DataStoreBuilder.load", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#load(pconf:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/DataStoreBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/DataStoreBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/configurations\/DataStoreBuilder.html", "kind" : "class"}, {"name" : "bigglue.configurations.DefaultOpt", "shortDescription" : "", "object" : "bigglue\/configurations\/DefaultOpt$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/DefaultOpt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/DefaultOpt$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/DefaultOpt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/DefaultOpt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/DefaultOpt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/DefaultOpt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/DefaultOpt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DefaultOpt$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DefaultOpt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/DefaultOpt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/DefaultOpt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/DefaultOpt$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/DefaultOpt$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/DefaultOpt$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/DefaultOpt$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/DefaultOpt$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/DefaultOpt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/DefaultOpt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/DefaultOpt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.configurations.PipeConfig", "shortDescription" : "", "object" : "bigglue\/configurations\/PipeConfig$.html", "members_object" : [{"label" : "extractTypeSafeConfig", "tail" : "(conf: Config): Map[String, String]", "member" : "bigglue.configurations.PipeConfig.extractTypeSafeConfig", "link" : "bigglue\/configurations\/PipeConfig$.html#extractTypeSafeConfig(conf:com.typesafe.config.Config):Map[String,String]", "kind" : "def"}, {"label" : "resolveConfig", "tail" : "(props: Properties, conf: Config): Properties", "member" : "bigglue.configurations.PipeConfig.resolveConfig", "link" : "bigglue\/configurations\/PipeConfig$.html#resolveConfig(props:java.util.Properties,conf:com.typesafe.config.Config):java.util.Properties", "kind" : "def"}, {"label" : "resolveOptions", "tail" : "(conf: Config, option: ConfOpt): Config", "member" : "bigglue.configurations.PipeConfig.resolveOptions", "link" : "bigglue\/configurations\/PipeConfig$.html#resolveOptions(conf:com.typesafe.config.Config,option:bigglue.configurations.ConfOpt):com.typesafe.config.Config", "kind" : "def"}, {"label" : "resolveOptions", "tail" : "(mainConfig: PipeConfig, option: ConfOpt): PipeConfig", "member" : "bigglue.configurations.PipeConfig.resolveOptions", "link" : "bigglue\/configurations\/PipeConfig$.html#resolveOptions(mainConfig:bigglue.configurations.PipeConfig,option:bigglue.configurations.ConfOpt):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "liftTypeSafeConfigToLabel", "tail" : "(mainConfig: Config, stepName: String): Config", "member" : "bigglue.configurations.PipeConfig.liftTypeSafeConfigToLabel", "link" : "bigglue\/configurations\/PipeConfig$.html#liftTypeSafeConfigToLabel(mainConfig:com.typesafe.config.Config,stepName:String):com.typesafe.config.Config", "kind" : "def"}, {"label" : "fromFile", "tail" : "(fileName: String): Config", "member" : "bigglue.configurations.PipeConfig.fromFile", "link" : "bigglue\/configurations\/PipeConfig$.html#fromFile(fileName:String):com.typesafe.config.Config", "kind" : "def"}, {"label" : "newConfig", "tail" : "(typeSafeConfOpt: Option[Config], javaUtilsPropsOpt: Option[Map[PropKey, Properties]]): PipeConfig", "member" : "bigglue.configurations.PipeConfig.newConfig", "link" : "bigglue\/configurations\/PipeConfig$.html#newConfig(typeSafeConfOpt:Option[com.typesafe.config.Config],javaUtilsPropsOpt:Option[Map[bigglue.configurations.PropKey,java.util.Properties]]):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PipeConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PipeConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PipeConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PipeConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PipeConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PipeConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PipeConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PipeConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PipeConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/PipeConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PipeConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/PipeConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/PipeConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PipeConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PipeConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PipeConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/PipeConfig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/PipeConfig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PipeConfig) ⇒ Boolean, msg: ⇒ Any): PipeConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PipeConfig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PipeConfig) ⇒ Boolean): PipeConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PipeConfig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PipeConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PipeConfig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PipeConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PipeConfig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PipeConfig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/PipeConfig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PipeConfig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/PipeConfig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "withJavaUtilProperties", "tail" : "(label: String, propType: String, props: Properties): PipeConfig", "member" : "bigglue.configurations.PipeConfig.withJavaUtilProperties", "link" : "bigglue\/configurations\/PipeConfig.html#withJavaUtilProperties(label:String,propType:String,props:java.util.Properties):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "withTypeSafeConfig", "tail" : "(conf: Config): PipeConfig", "member" : "bigglue.configurations.PipeConfig.withTypeSafeConfig", "link" : "bigglue\/configurations\/PipeConfig.html#withTypeSafeConfig(conf:com.typesafe.config.Config):bigglue.configurations.PipeConfig", "kind" : "def"}, {"member" : "bigglue.configurations.PipeConfig#<init>", "error" : "unsupported entity"}, {"label" : "javaUtilsProps", "tail" : ": Map[PropKey, Properties]", "member" : "bigglue.configurations.PipeConfig.javaUtilsProps", "link" : "bigglue\/configurations\/PipeConfig.html#javaUtilsProps:Map[bigglue.configurations.PropKey,java.util.Properties]", "kind" : "val"}, {"label" : "typeSafeConfig", "tail" : ": Config", "member" : "bigglue.configurations.PipeConfig.typeSafeConfig", "link" : "bigglue\/configurations\/PipeConfig.html#typeSafeConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PipeConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PipeConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PipeConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PipeConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PipeConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PipeConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PipeConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PipeConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PipeConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PipeConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PipeConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PipeConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PipeConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PipeConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/configurations\/PipeConfig.html", "kind" : "object"}, {"name" : "bigglue.configurations.PlatformBuilder", "shortDescription" : "Created by edmundlam on 8\/8\/17.", "object" : "bigglue\/configurations\/PlatformBuilder$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/PlatformBuilder.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/PlatformBuilder.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PlatformBuilder) ⇒ Boolean, msg: ⇒ Any): PlatformBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PlatformBuilder.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PlatformBuilder) ⇒ Boolean): PlatformBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PlatformBuilder.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PlatformBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PlatformBuilder.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PlatformBuilder", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PlatformBuilder.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PlatformBuilder, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/PlatformBuilder.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PlatformBuilder, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/PlatformBuilder.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.PlatformBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PlatformBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PlatformBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PlatformBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PlatformBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PlatformBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PlatformBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PlatformBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PlatformBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PlatformBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/PlatformBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PlatformBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/PlatformBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/PlatformBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PlatformBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PlatformBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PlatformBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pairwiseComposerPlatform", "tail" : "(): BinaryPlatform[InputL, InputR, Output]", "member" : "bigglue.configurations.PlatformBuilder.pairwiseComposerPlatform", "link" : "bigglue\/configurations\/PlatformBuilder.html#pairwiseComposerPlatform[InputL<:bigglue.data.Identifiable[InputL],InputR<:bigglue.data.Identifiable[InputR],Output<:bigglue.data.Identifiable[Output]]:bigglue.platforms.BinaryPlatform[InputL,InputR,Output]", "kind" : "abstract def"}, {"label" : "reducerPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.configurations.PlatformBuilder.reducerPlatform", "link" : "bigglue\/configurations\/PlatformBuilder.html#reducerPlatform[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "abstract def"}, {"label" : "mapperPlatform", "tail" : "(): UnaryPlatform[Input, Output]", "member" : "bigglue.configurations.PlatformBuilder.mapperPlatform", "link" : "bigglue\/configurations\/PlatformBuilder.html#mapperPlatform[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]():bigglue.platforms.UnaryPlatform[Input,Output]", "kind" : "abstract def"}, {"label" : "errorCurator", "tail" : "(): ErrorCurator[Input]", "member" : "bigglue.configurations.PlatformBuilder.errorCurator", "link" : "bigglue\/configurations\/PlatformBuilder.html#errorCurator[Input<:bigglue.data.Identifiable[Input]]:bigglue.curators.ErrorCurator[Input]", "kind" : "abstract def"}, {"label" : "provenanceCurator", "tail" : "(): ProvenanceCurator[Input, Output]", "member" : "bigglue.configurations.PlatformBuilder.provenanceCurator", "link" : "bigglue\/configurations\/PlatformBuilder.html#provenanceCurator[Input<:bigglue.data.Identifiable[Input],Output<:bigglue.data.Identifiable[Output]]:bigglue.curators.ProvenanceCurator[Input,Output]", "kind" : "abstract def"}, {"label" : "connector", "tail" : "(name: String): Connector[Data]", "member" : "bigglue.configurations.PlatformBuilder.connector", "link" : "bigglue\/configurations\/PlatformBuilder.html#connector[Data<:bigglue.data.Identifiable[Data]](name:String):bigglue.connectors.Connector[Data]", "kind" : "abstract def"}], "members_object" : [{"label" : "load", "tail" : "(pconf: PipeConfig): PlatformBuilder", "member" : "bigglue.configurations.PlatformBuilder.load", "link" : "bigglue\/configurations\/PlatformBuilder$.html#load(pconf:bigglue.configurations.PipeConfig):bigglue.configurations.PlatformBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PlatformBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PlatformBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PlatformBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PlatformBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PlatformBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PlatformBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PlatformBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PlatformBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PlatformBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PlatformBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/configurations\/PlatformBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PlatformBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/configurations\/PlatformBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/configurations\/PlatformBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PlatformBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PlatformBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PlatformBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/configurations\/PlatformBuilder.html", "kind" : "class"}, {"name" : "bigglue.configurations.PropertiesOpt", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/PropertiesOpt.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/PropertiesOpt.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PropertiesOpt) ⇒ Boolean, msg: ⇒ Any): PropertiesOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropertiesOpt.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PropertiesOpt) ⇒ Boolean): PropertiesOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropertiesOpt.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PropertiesOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropertiesOpt.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PropertiesOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropertiesOpt.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PropertiesOpt, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/PropertiesOpt.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PropertiesOpt, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/PropertiesOpt.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.PropertiesOpt#<init>", "error" : "unsupported entity"}, {"label" : "props", "tail" : ": Properties", "member" : "bigglue.configurations.PropertiesOpt.props", "link" : "bigglue\/configurations\/PropertiesOpt.html#props:java.util.Properties", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PropertiesOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PropertiesOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PropertiesOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PropertiesOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PropertiesOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PropertiesOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PropertiesOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropertiesOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropertiesOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropertiesOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PropertiesOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PropertiesOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PropertiesOpt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PropertiesOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PropertiesOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PropertiesOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/configurations\/PropertiesOpt.html", "kind" : "case class"}, {"name" : "bigglue.configurations.PropKey", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/PropKey.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/PropKey.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PropKey) ⇒ Boolean, msg: ⇒ Any): PropKey", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropKey.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PropKey) ⇒ Boolean): PropKey", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropKey.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PropKey", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropKey.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PropKey", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/PropKey.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PropKey, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/PropKey.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PropKey, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/PropKey.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.PropKey#<init>", "error" : "unsupported entity"}, {"label" : "propType", "tail" : ": String", "member" : "bigglue.configurations.PropKey.propType", "link" : "bigglue\/configurations\/PropKey.html#propType:String", "kind" : "val"}, {"label" : "pipeLabel", "tail" : ": String", "member" : "bigglue.configurations.PropKey.pipeLabel", "link" : "bigglue\/configurations\/PropKey.html#pipeLabel:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/PropKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/PropKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/PropKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/PropKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/PropKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/PropKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/PropKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/PropKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/PropKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/PropKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/PropKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/PropKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/PropKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/PropKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/configurations\/PropKey.html", "kind" : "case class"}, {"name" : "bigglue.configurations.StepLabelOpt", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/StepLabelOpt.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/StepLabelOpt.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StepLabelOpt) ⇒ Boolean, msg: ⇒ Any): StepLabelOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/StepLabelOpt.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StepLabelOpt) ⇒ Boolean): StepLabelOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/StepLabelOpt.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StepLabelOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/StepLabelOpt.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StepLabelOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/StepLabelOpt.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StepLabelOpt, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/StepLabelOpt.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StepLabelOpt, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/StepLabelOpt.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.StepLabelOpt#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "bigglue.configurations.StepLabelOpt.label", "link" : "bigglue\/configurations\/StepLabelOpt.html#label:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/StepLabelOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/StepLabelOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/StepLabelOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/StepLabelOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/StepLabelOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/StepLabelOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/StepLabelOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/StepLabelOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/StepLabelOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/StepLabelOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/StepLabelOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/StepLabelOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/StepLabelOpt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/StepLabelOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/StepLabelOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/StepLabelOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/configurations\/StepLabelOpt.html", "kind" : "case class"}, {"name" : "bigglue.configurations.TypesafeConfOpt", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypesafeConfOpt) ⇒ Boolean, msg: ⇒ Any): TypesafeConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypesafeConfOpt) ⇒ Boolean): TypesafeConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TypesafeConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TypesafeConfOpt", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TypesafeConfOpt, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TypesafeConfOpt, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.configurations.TypesafeConfOpt#<init>", "error" : "unsupported entity"}, {"label" : "conf", "tail" : ": Config", "member" : "bigglue.configurations.TypesafeConfOpt.conf", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#conf:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/configurations\/TypesafeConfOpt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/configurations\/TypesafeConfOpt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/configurations\/TypesafeConfOpt.html", "kind" : "case class"}], "bigglue.store.instances.solr" : [{"name" : "bigglue.store.instances.solr.SolrBackend", "shortDescription" : "Created by chanceroberts on 8\/25\/17.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrBackend[Data]) ⇒ Boolean, msg: ⇒ Any): SolrBackend[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrBackend[Data]) ⇒ Boolean): SolrBackend[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SolrBackend[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SolrBackend[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SolrBackend[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SolrBackend[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getAllDocuments", "tail" : "(): List[JsObject]", "member" : "bigglue.store.instances.solr.SolrBackend.getAllDocuments", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#getAllDocuments:List[spray.json.JsObject]", "kind" : "def"}, {"label" : "deleteDocuments", "tail" : "(ids: List[String]): Unit", "member" : "bigglue.store.instances.solr.SolrBackend.deleteDocuments", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#deleteDocuments(ids:List[String]):Unit", "kind" : "def"}, {"label" : "addDocument", "tail" : "(doc: JsObject, key: String): Unit", "member" : "bigglue.store.instances.solr.SolrBackend.addDocument", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#addDocument(doc:spray.json.JsObject,key:String):Unit", "kind" : "def"}, {"label" : "getDocuments", "tail" : "(id: String, field: String): List[JsObject]", "member" : "bigglue.store.instances.solr.SolrBackend.getDocuments", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#getDocuments(id:String,field:String):List[spray.json.JsObject]", "kind" : "def"}, {"label" : "getDocument", "tail" : "(id: String): Option[JsObject]", "member" : "bigglue.store.instances.solr.SolrBackend.getDocument", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#getDocument(id:String):Option[spray.json.JsObject]", "kind" : "def"}, {"label" : "getDocumentsFromQuery", "tail" : "(query: String): List[JsObject]", "member" : "bigglue.store.instances.solr.SolrBackend.getDocumentsFromQuery", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#getDocumentsFromQuery(query:String):List[spray.json.JsObject]", "kind" : "def"}, {"label" : "keyToString", "tail" : "(key: Any): String", "member" : "bigglue.store.instances.solr.SolrBackend.keyToString", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#keyToString(key:Any):String", "kind" : "def"}, {"label" : "fields", "tail" : ": Map[String, String]", "member" : "bigglue.store.instances.solr.SolrBackend.fields", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#fields:Map[String,String]", "kind" : "var"}, {"label" : "hasSchema", "tail" : ": Boolean", "member" : "bigglue.store.instances.solr.SolrBackend.hasSchema", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#hasSchema:Boolean", "kind" : "val"}, {"label" : "toCommit", "tail" : ": Boolean", "member" : "bigglue.store.instances.solr.SolrBackend.toCommit", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#toCommit:Boolean", "kind" : "var"}, {"label" : "templateOpt", "tail" : ": Option[JsObject]", "member" : "bigglue.store.instances.solr.SolrBackend.templateOpt", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#templateOpt:Option[spray.json.JsObject]", "kind" : "var"}, {"label" : "url", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrBackend.url", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#url:String", "kind" : "val"}, {"label" : "solrServerLocation", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrBackend.solrServerLocation", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#solrServerLocation:String", "kind" : "val"}, {"label" : "solrLocation", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrBackend.solrLocation", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#solrLocation:String", "kind" : "val"}, {"label" : "solrConfig", "tail" : ": Config", "member" : "bigglue.store.instances.solr.SolrBackend.solrConfig", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#solrConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "solrNormalConfig", "tail" : ": Config", "member" : "bigglue.store.instances.solr.SolrBackend.solrNormalConfig", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#solrNormalConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "solrFallbackConf", "tail" : ": Config", "member" : "bigglue.store.instances.solr.SolrBackend.solrFallbackConf", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#solrFallbackConf:com.typesafe.config.Config", "kind" : "val"}, {"member" : "bigglue.store.instances.solr.SolrBackend#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrBackend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/solr\/SolrBackend.html", "kind" : "class"}, {"name" : "bigglue.store.instances.solr.SolrClassObject", "shortDescription" : "Created by chanceroberts on 8\/10\/17.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrClassObject) ⇒ Boolean, msg: ⇒ Any): SolrClassObject", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrClassObject) ⇒ Boolean): SolrClassObject", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SolrClassObject", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SolrClassObject", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SolrClassObject, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SolrClassObject, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "bigglue.store.instances.solr.SolrClassObject#<init>", "error" : "unsupported entity"}, {"label" : "args", "tail" : ": List[Any]", "member" : "bigglue.store.instances.solr.SolrClassObject.args", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#args:List[Any]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrClassObject.name", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrClassObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bigglue\/store\/instances\/solr\/SolrClassObject.html", "kind" : "case class"}, {"name" : "bigglue.store.instances.solr.SolrDataMap", "shortDescription" : "This is the default data store that is used in the example.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrDataMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): SolrDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrDataMap[Key, Data]) ⇒ Boolean): SolrDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SolrDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SolrDataMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SolrDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SolrDataMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Data]", "member" : "bigglue.store.instances.solr.SolrDataMap.iterator", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#iterator():Iterator[Data]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.solr.SolrDataMap.size", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.solr.SolrDataMap.extract", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#extract():Seq[Data]", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.instances.solr.SolrDataMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#remove(keys:Seq[Key]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.instances.solr.SolrDataMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#remove(key:Key):Unit", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Data]", "member" : "bigglue.store.instances.solr.SolrDataMap.all", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#all():Seq[Data]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key): Boolean", "member" : "bigglue.store.instances.solr.SolrDataMap.contains", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#contains(key:Key):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Option[Data]", "member" : "bigglue.store.instances.solr.SolrDataMap.get", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#get(key:Key):Option[Data]", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.instances.solr.SolrDataMap.put_", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#put_(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.instances.solr.SolrDataMap.put_", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#put_(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "url", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrDataMap.url", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#url:String", "kind" : "val"}, {"label" : "solrBack", "tail" : ": SolrBackend[Data]", "member" : "bigglue.store.instances.solr.SolrDataMap.solrBack", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#solrBack:bigglue.store.instances.solr.SolrBackend[Data]", "kind" : "val"}, {"member" : "bigglue.store.instances.solr.SolrDataMap#<init>", "error" : "unsupported entity"}, {"label" : "getOrElse", "tail" : "(key: Key, default: Data): Data", "member" : "bigglue.store.DataMap.getOrElse", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#getOrElse(key:Key,default:Data):Data", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Data): Unit", "member" : "bigglue.store.DataMap.put", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#put(key:Key,data:Data):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Data): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Data): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Data]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Data]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrDataMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/solr\/SolrDataMap.html", "kind" : "class"}, {"name" : "bigglue.store.instances.solr.SolrInstances", "shortDescription" : "", "object" : "bigglue\/store\/instances\/solr\/SolrInstances$.html", "members_object" : [{"label" : "createDataMap", "tail" : "(name: String): DataStore[Data]", "member" : "bigglue.store.instances.solr.SolrInstances.createDataMap", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#createDataMap[Data<:bigglue.data.Identifiable[Data]](name:String):bigglue.store.DataStore[Data]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrInstances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bigglue.store.instances.solr.SolrIterator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrIterator[Data]) ⇒ Boolean, msg: ⇒ Any): SolrIterator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrIterator[Data]) ⇒ Boolean): SolrIterator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SolrIterator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SolrIterator[Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SolrIterator[Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SolrIterator[Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "bigglue.store.instances.solr.SolrIterator.hasNext", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Data", "member" : "bigglue.store.instances.solr.SolrIterator.next", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#next():Data", "kind" : "def"}, {"label" : "nextDocuments", "tail" : "(): List[Data]", "member" : "bigglue.store.instances.solr.SolrIterator.nextDocuments", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#nextDocuments():List[Data]", "kind" : "def"}, {"label" : "currentDataList", "tail" : ": List[Data]", "member" : "bigglue.store.instances.solr.SolrIterator.currentDataList", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#currentDataList:List[Data]", "kind" : "var"}, {"label" : "currentOffset", "tail" : ": Int", "member" : "bigglue.store.instances.solr.SolrIterator.currentOffset", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#currentOffset:Int", "kind" : "var"}, {"member" : "bigglue.store.instances.solr.SolrIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Data]", "member" : "scala.collection.Iterator.toStream", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Data]", "member" : "scala.collection.Iterator.toIterator", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Data]", "member" : "scala.collection.Iterator.toTraversable", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Data], Iterator[Data])", "member" : "scala.collection.Iterator.duplicate", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Data]", "member" : "scala.collection.Iterator.buffered", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Data) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Data) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Data) ⇒ Boolean): Option[Data]", "member" : "scala.collection.Iterator.find", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Data) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Data) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Data) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Data, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Data, B)]", "member" : "scala.collection.Iterator.zip", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Data) ⇒ Boolean): Iterator[Data]", "member" : "scala.collection.Iterator.dropWhile", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Data) ⇒ Boolean): (Iterator[Data], Iterator[Data])", "member" : "scala.collection.Iterator.span", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Data) ⇒ Boolean): (Iterator[Data], Iterator[Data])", "member" : "scala.collection.Iterator.partition", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Data) ⇒ Boolean): Iterator[Data]", "member" : "scala.collection.Iterator.takeWhile", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Data, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Data) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Data, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Data) ⇒ Boolean): Iterator[Data]", "member" : "scala.collection.Iterator.filterNot", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Data) ⇒ Boolean): Iterator[Data]", "member" : "scala.collection.Iterator.withFilter", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Data, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Data) ⇒ Boolean): Iterator[Data]", "member" : "scala.collection.Iterator.filter", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Data) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Data) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Data]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Data]", "member" : "scala.collection.Iterator.slice", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Data]", "member" : "scala.collection.Iterator.drop", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Data]", "member" : "scala.collection.Iterator.take", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Data]", "member" : "scala.collection.Iterator.seq", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Data, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Data, Col[Data]]): Col[Data]", "member" : "scala.collection.TraversableOnce.to", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Data]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Data]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Data]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Data]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Data]", "member" : "scala.collection.TraversableOnce.toList", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Data) ⇒ B)(cmp: Ordering[B]): Data", "member" : "scala.collection.TraversableOnce.minBy", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Data) ⇒ B)(cmp: Ordering[B]): Data", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Data", "member" : "scala.collection.TraversableOnce.max", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Data", "member" : "scala.collection.TraversableOnce.min", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Data) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Data, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Data) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Data, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Data) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Data, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Data) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Data, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Data) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Data, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Data) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Data]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/solr\/SolrIterator.html", "kind" : "class"}, {"name" : "bigglue.store.instances.solr.SolrMultiMap", "shortDescription" : "", "members_class" : [{"label" : "toParArray", "tail" : "(): ParArray[T]", "member" : "scala.collection.parallel.CollectionsHaveToParArray.toParArray", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#toParArray:scala.collection.parallel.mutable.ParArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrMultiMap[Key, Data]) ⇒ Boolean, msg: ⇒ Any): SolrMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SolrMultiMap[Key, Data]) ⇒ Boolean): SolrMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SolrMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SolrMultiMap[Key, Data]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SolrMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SolrMultiMap[Key, Data], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bigglue.store.instances.solr.SolrMultiMap.size", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#size():Int", "kind" : "def"}, {"label" : "extract", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.instances.solr.SolrMultiMap.extract", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#extract():Seq[Set[Data]]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key, data: Set[Data]): Boolean", "member" : "bigglue.store.instances.solr.SolrMultiMap.contains", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#contains(key:Key,data:Set[Data]):Boolean", "kind" : "def"}, {"label" : "all", "tail" : "(): Seq[Set[Data]]", "member" : "bigglue.store.instances.solr.SolrMultiMap.all", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#all():Seq[Set[Data]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Set[Data]", "member" : "bigglue.store.instances.solr.SolrMultiMap.get", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#get(key:Key):Set[Data]", "kind" : "def"}, {"label" : "iterator", "tail" : "(key: Key): Iterator[Data]", "member" : "bigglue.store.instances.solr.SolrMultiMap.iterator", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#iterator(key:Key):Iterator[Data]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Set[Data]]", "member" : "bigglue.store.instances.solr.SolrMultiMap.iterator", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#iterator():Iterator[Set[Data]]", "kind" : "def"}, {"label" : "remove", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#remove(data:Set[Data]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#remove(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#remove(key:Key):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(keys: Seq[Key]): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.remove", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#remove(keys:Seq[Key]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.put_", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#put_(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "put_", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.instances.solr.SolrMultiMap.put_", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#put_(data:Seq[Set[Data]]):Unit", "kind" : "def"}, {"label" : "url", "tail" : ": String", "member" : "bigglue.store.instances.solr.SolrMultiMap.url", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#url:String", "kind" : "val"}, {"label" : "solrBack", "tail" : ": SolrBackend[Data]", "member" : "bigglue.store.instances.solr.SolrMultiMap.solrBack", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#solrBack:bigglue.store.instances.solr.SolrBackend[Data]", "kind" : "val"}, {"member" : "bigglue.store.instances.solr.SolrMultiMap#<init>", "error" : "unsupported entity"}, {"label" : "contains", "tail" : "(key: Key, data: Data): Boolean", "member" : "bigglue.store.DataMultiMap.contains", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#contains(key:Key,data:Data):Boolean", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, data: Set[Data]): Unit", "member" : "bigglue.store.DataMultiMap.put", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#put(key:Key,data:Set[Data]):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.add", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#add(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#put(data:Data):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.store.DataStore.put", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#put(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "terminate", "tail" : "(): Unit", "member" : "bigglue.store.DataStore.terminate", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#terminate():Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.store.DataStore.init", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#init(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "setName", "tail" : "(newName: String): Unit", "member" : "bigglue.store.DataStore.setName", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#setName(newName:String):Unit", "kind" : "def"}, {"label" : "displayName", "tail" : "(): String", "member" : "bigglue.store.DataStore.displayName", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#displayName():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "bigglue.store.DataStore.name", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#name:String", "kind" : "var"}, {"label" : "constructBuilder", "tail" : "(config: PipeConfig): DataStoreBuilder", "member" : "bigglue.configurations.ConfigBuildsDataStore.constructBuilder", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#constructBuilder(config:bigglue.configurations.PipeConfig):bigglue.configurations.DataStoreBuilder", "kind" : "def"}, {"label" : "getConfig", "tail" : "(config: PipeConfig): PipeConfig", "member" : "bigglue.configurations.ConfigBuilds.getConfig", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#getConfig(config:bigglue.configurations.PipeConfig):bigglue.configurations.PipeConfig", "kind" : "def"}, {"label" : "setConfig", "tail" : "(pipeConfig: PipeConfig): Unit", "member" : "bigglue.configurations.ConfigBuilds.setConfig", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#setConfig(pipeConfig:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "configOpt", "tail" : ": Option[PipeConfig]", "member" : "bigglue.configurations.ConfigBuilds.configOpt", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#configOpt:Option[bigglue.configurations.PipeConfig]", "kind" : "val"}, {"label" : "checkConfig", "tail" : "(conf: PipeConfig): Unit", "member" : "bigglue.checkers.ConfigChecker.checkConfig", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#checkConfig(conf:bigglue.configurations.PipeConfig):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#transmitDownstreamModified(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstreamModified", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstreamModified", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#transmitDownstreamModified(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Set[Data]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#transmitDownstream(data:Data):Unit", "kind" : "def"}, {"label" : "transmitDownstream", "tail" : "(data: Seq[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.transmitDownstream", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#transmitDownstream(data:Seq[Data]):Unit", "kind" : "def"}, {"label" : "registerConnector", "tail" : "(connector: Connector[Set[Data]]): Unit", "member" : "bigglue.connectors.Upstream.registerConnector", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#registerConnector(connector:bigglue.connectors.Connector[Data]):Unit", "kind" : "def"}, {"label" : "downstreamConnectors", "tail" : ": Seq[Connector[Set[Data]]]", "member" : "bigglue.connectors.Upstream.downstreamConnectors", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#downstreamConnectors:Seq[bigglue.connectors.Connector[Data]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bigglue\/store\/instances\/solr\/SolrMultiMap.html", "kind" : "class"}]};